<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[linux安装tree命令 - apt-get install tree]]></title>
      <url>/20170503-linux%E5%AE%89%E8%A3%85tree%E5%91%BD%E4%BB%A4%20-%20apt-get%20install%20tree/</url>
      <content type="html"><![CDATA[<!-- build time:Wed May 03 2017 09:37:14 GMT+0800 (中国标准时间) --><p>目前debian系列的系统都无法使用apt-get install tree来安装tree命令</p><p>以下是安装步骤<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#下载（官网为：http://mama.indstate.edu/users/ice/tree/）</div><div class="line">wget http://mama.indstate.edu/users/ice/tree/src/tree-1.7.0.tgz</div><div class="line">#解压</div><div class="line">tar -zxvf tree-1.7.0.tgz</div><div class="line">#进入目录</div><div class="line">cd tree-1.7.0</div><div class="line">#安装</div><div class="line">sudo make install</div><div class="line">#完毕</div></pre></td></tr></table></figure><p></p><p>最简单的使用方法，在目录下输入：tree</p><p>使用效果<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">hisen@ubuntu:~/dl$ tree</div><div class="line">.</div><div class="line">├── hisen.log</div><div class="line">├── master</div><div class="line">└── test_db-master</div><div class="line">    ├── Changelog</div><div class="line">    ├── employees_partitioned_5.1.sql</div><div class="line">    ├── employees_partitioned.sql</div><div class="line">    ├── employees.sql</div><div class="line">    ├── images</div><div class="line">    │   ├── employees.gif</div><div class="line">    │   ├── employees.jpg</div><div class="line">    │   └── employees.png</div><div class="line">    ├── load_departments.dump</div><div class="line">    ├── load_dept_emp.dump</div><div class="line">    ├── load_dept_manager.dump</div><div class="line">    ├── load_employees.dump</div><div class="line">    ├── load_salaries1.dump</div><div class="line">    ├── load_salaries2.dump</div><div class="line">    ├── load_salaries3.dump</div><div class="line">    ├── load_titles.dump</div><div class="line">    ├── objects.sql</div><div class="line">    ├── README.md</div><div class="line">    ├── sakila</div><div class="line">    │   ├── README.md</div><div class="line">    │   ├── sakila-mv-data.sql</div><div class="line">    │   └── sakila-mv-schema.sql</div><div class="line">    ├── show_elapsed.sql</div><div class="line">    ├── sql_test.sh</div><div class="line">    ├── test_employees_md5.sql</div><div class="line">    └── test_employees_sha.sql</div><div class="line"></div><div class="line">3 directories, 26 files</div></pre></td></tr></table></figure><p></p><p>使用参数<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">tree命令行参数：</div><div class="line"></div><div class="line">-a 显示所有文件和目录。</div><div class="line">-A 使用ASNI绘图字符显示树状图而非以ASCII字符组合。</div><div class="line">-C 在文件和目录清单加上色彩，便于区分各种类型。</div><div class="line">-d 显示目录名称而非内容。</div><div class="line">-D 列出文件或目录的更改时间。</div><div class="line">-f 在每个文件或目录之前，显示完整的相对路径名称。</div><div class="line">-F 在执行文件，目录，Socket，符号连接，管道名称名称，各自加上&quot;*&quot;,&quot;/&quot;,&quot;=&quot;,&quot;@&quot;,&quot;|&quot;号。</div><div class="line">-g 列出文件或目录的所属群组名称，没有对应的名称时，则显示群组识别码。</div><div class="line">-i 不以阶梯状列出文件或目录名称。</div><div class="line">-I 不显示符合范本样式的文件或目录名称。</div><div class="line">-l 如遇到性质为符号连接的目录，直接列出该连接所指向的原始目录。</div><div class="line">-n 不在文件和目录清单加上色彩。</div><div class="line">-N 直接列出文件和目录名称，包括控制字符。</div><div class="line">-p 列出权限标示。</div><div class="line">-P 只显示符合范本样式的文件或目录名称。</div><div class="line">-q 用&quot;?&quot;号取代控制字符，列出文件和目录名称。</div><div class="line">-s 列出文件或目录大小。</div><div class="line">-t 用文件和目录的更改时间排序。</div><div class="line">-u 列出文件或目录的拥有者名称，没有对应的名称时，则显示用户识别码。</div><div class="line">-x 将范围局限在现行的文件系统中，若指定目录下的某些子目录，其存放于另一个文件系统上，则将该子目录予以排除在寻找范围外。</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[github api - github api中文说明]]></title>
      <url>/20170428-github%20api%20-%20github%20api%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<!-- build time:Fri Apr 28 2017 19:28:14 GMT+0800 (中国标准时间) --><p>github api的网址<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://api.github.com/</div></pre></td></tr></table></figure><p></p><p>这里介绍两个api<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#获取个人信息</div><div class="line">https://api.github.com/users/&#123;user&#125;;</div></pre></td></tr></table></figure><p></p><table><thead><tr><th style="text-align:left">key</th><th style="text-align:left">含义</th><th style="text-align:left">value</th></tr></thead><tbody><tr><td style="text-align:left">login</td><td style="text-align:left">登录名称</td><td style="text-align:left">hisen-yuan</td></tr><tr><td style="text-align:left">id</td><td style="text-align:left">数字编号</td><td style="text-align:left">16789019</td></tr><tr><td style="text-align:left">avatar_url</td><td style="text-align:left">头像地址</td><td style="text-align:left"><a href="https://avatars1.githubusercontent.com/u/16789019?v=3" target="_blank" rel="external">https://avatars1.githubusercontent.com/u/16789019?v=3</a></td></tr><tr><td style="text-align:left">name</td><td style="text-align:left">用户昵称</td><td style="text-align:left">hisenyuan</td></tr><tr><td style="text-align:left">blog</td><td style="text-align:left">博客地址</td><td style="text-align:left"><a href="http://hisen.me">http://hisen.me</a></td></tr><tr><td style="text-align:left">location</td><td style="text-align:left">地理位置</td><td style="text-align:left">China</td></tr><tr><td style="text-align:left">bio</td><td style="text-align:left">个人说明</td><td style="text-align:left">Java R &amp; D</td></tr><tr><td style="text-align:left">public_repos</td><td style="text-align:left">仓库个数</td><td style="text-align:left">11</td></tr><tr><td style="text-align:left">created_at</td><td style="text-align:left">创建时间</td><td style="text-align:left">2016-01-20 01:57:15Z</td></tr><tr><td style="text-align:left">updated_at</td><td style="text-align:left">最后更新</td><td style="text-align:left">2017-04-20 14:03:27Z</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#获取项目信息</div><div class="line">https://api.github.com/users/&#123;user&#125;/repos</div></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">key</th><th style="text-align:left">含义</th><th style="text-align:left">value</th></tr></thead><tbody><tr><td style="text-align:left">id</td><td style="text-align:left">项目编号</td><td style="text-align:left">88646378</td></tr><tr><td style="text-align:left">name</td><td style="text-align:left">项目名称</td><td style="text-align:left">dubbo</td></tr><tr><td style="text-align:left">html_url</td><td style="text-align:left">项目地址</td><td style="text-align:left"><a href="https://github.com/hisen-yuan/dubbo" target="_blank" rel="external">https://github.com/hisen-yuan/dubbo</a></td></tr><tr><td style="text-align:left">created_at</td><td style="text-align:left">创建时间</td><td style="text-align:left">2017-04-18T16:21:57Z</td></tr><tr><td style="text-align:left">updated_at</td><td style="text-align:left">更新时间</td><td style="text-align:left">2017-04-18T16:23:16Z</td></tr><tr><td style="text-align:left">pushed_at</td><td style="text-align:left">提交时间</td><td style="text-align:left">2017-04-19T02:33:33Z</td></tr><tr><td style="text-align:left">size</td><td style="text-align:left">项目大小</td><td style="text-align:left">6514</td></tr><tr><td style="text-align:left">language</td><td style="text-align:left">编程语言</td><td style="text-align:left">Java</td></tr></tbody></table><p>github提供的所有api<br><a id="more"></a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">current_user_url: &quot;https://api.github.com/user&quot;,</div><div class="line">current_user_authorizations_html_url: &quot;https://github.com/settings/connections/applications&#123;/client_id&#125;&quot;,</div><div class="line">authorizations_url: &quot;https://api.github.com/authorizations&quot;,</div><div class="line">code_search_url: &quot;https://api.github.com/search/code?q=&#123;query&#125;&#123;&amp;page,per_page,sort,order&#125;&quot;,</div><div class="line">commit_search_url: &quot;https://api.github.com/search/commits?q=&#123;query&#125;&#123;&amp;page,per_page,sort,order&#125;&quot;,</div><div class="line">emails_url: &quot;https://api.github.com/user/emails&quot;,</div><div class="line">emojis_url: &quot;https://api.github.com/emojis&quot;,</div><div class="line">events_url: &quot;https://api.github.com/events&quot;,</div><div class="line">feeds_url: &quot;https://api.github.com/feeds&quot;,</div><div class="line">followers_url: &quot;https://api.github.com/user/followers&quot;,</div><div class="line">following_url: &quot;https://api.github.com/user/following&#123;/target&#125;&quot;,</div><div class="line">gists_url: &quot;https://api.github.com/gists&#123;/gist_id&#125;&quot;,</div><div class="line">hub_url: &quot;https://api.github.com/hub&quot;,</div><div class="line">issue_search_url: &quot;https://api.github.com/search/issues?q=&#123;query&#125;&#123;&amp;page,per_page,sort,order&#125;&quot;,</div><div class="line">issues_url: &quot;https://api.github.com/issues&quot;,</div><div class="line">keys_url: &quot;https://api.github.com/user/keys&quot;,</div><div class="line">notifications_url: &quot;https://api.github.com/notifications&quot;,</div><div class="line">organization_repositories_url: &quot;https://api.github.com/orgs/&#123;org&#125;/repos&#123;?type,page,per_page,sort&#125;&quot;,</div><div class="line">organization_url: &quot;https://api.github.com/orgs/&#123;org&#125;&quot;,</div><div class="line">public_gists_url: &quot;https://api.github.com/gists/public&quot;,</div><div class="line">rate_limit_url: &quot;https://api.github.com/rate_limit&quot;,</div><div class="line">repository_url: &quot;https://api.github.com/repos/&#123;owner&#125;/&#123;repo&#125;&quot;,</div><div class="line">repository_search_url: &quot;https://api.github.com/search/repositories?q=&#123;query&#125;&#123;&amp;page,per_page,sort,order&#125;&quot;,</div><div class="line">current_user_repositories_url: &quot;https://api.github.com/user/repos&#123;?type,page,per_page,sort&#125;&quot;,</div><div class="line">starred_url: &quot;https://api.github.com/user/starred&#123;/owner&#125;&#123;/repo&#125;&quot;,</div><div class="line">starred_gists_url: &quot;https://api.github.com/gists/starred&quot;,</div><div class="line">team_url: &quot;https://api.github.com/teams&quot;,</div><div class="line">user_url: &quot;https://api.github.com/users/&#123;user&#125;&quot;,</div><div class="line">user_organizations_url: &quot;https://api.github.com/user/orgs&quot;,</div><div class="line">user_repositories_url: &quot;https://api.github.com/users/&#123;user&#125;/repos&#123;?type,page,per_page,sort&#125;&quot;,</div><div class="line">user_search_url: &quot;https://api.github.com/search/users?q=&#123;query&#125;&#123;&amp;page,per_page,sort,order&#125;&quot;</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Java获取股票信息 - java获取股票信息接口]]></title>
      <url>/20170427-Java%E8%8E%B7%E5%8F%96%E8%82%A1%E7%A5%A8%E4%BF%A1%E6%81%AF%20-%20java%E8%8E%B7%E5%8F%96%E8%82%A1%E7%A5%A8%E4%BF%A1%E6%81%AF%E6%8E%A5%E5%8F%A3/</url>
      <content type="html"><![CDATA[<!-- build time:Fri Apr 28 2017 09:11:42 GMT+0800 (中国标准时间) --><p>用下面的接口获取股票的数据</p><p>sh:代表上海市场</p><p>sz:代表深圳市场</p><p>后面是加上股票代码，这是因为上海和深圳的股票代码有重复的<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://hq.sinajs.cn/list=sh600877</div></pre></td></tr></table></figure><p></p><p>返回的信息<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var hq_str_sh600877=&quot;中国嘉陵,6.340,6.400,6.360,6.470,6.210,6.340,6.350,15012913,95227966.000,56500,6.340,12100,6.330,16100,6.320,17500,6.310,47400,6.300,13600,6.350,11300,6.360,32400,6.370,39100,6.380,41200,6.390,2017-04-27,15:00:00,00&quot;;</div></pre></td></tr></table></figure><p></p><p>有效信息为引号里面的数据</p><p>下面的数字代表分割数组后所在的下标</p><p>下面是数据字段对应的含义</p><p>源代码：<a href="https://github.com/hisen-yuan/IDEAPractice/blob/01eeafbc5370404856143b2f116bd7fe00f5d8a8/src/main/java/com/hisen/String/stock/GetStockInformation.java" target="_blank" rel="external">GetStockInformation.java</a></p><p>表格如下：<br><a id="more"></a></p><table><thead><tr><th style="text-align:left">位置</th><th style="text-align:left">含义</th><th style="text-align:left">测试数据</th></tr></thead><tbody><tr><td style="text-align:left">0</td><td style="text-align:left">股票名字</td><td style="text-align:left">中国嘉陵</td></tr><tr><td style="text-align:left">1</td><td style="text-align:left">今日开盘价</td><td style="text-align:left">6.340</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">昨日收盘价</td><td style="text-align:left">6.400</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">当前价格</td><td style="text-align:left">6.360</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">今日最高价</td><td style="text-align:left">6.470</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">今日最低价</td><td style="text-align:left">6.210</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">买一报价</td><td style="text-align:left">6.340</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">卖一报价</td><td style="text-align:left">6.350</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">成交数量(百股)</td><td style="text-align:left">15012913</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">成交金额(元)</td><td style="text-align:left">95227966.000</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">买一数量(股)</td><td style="text-align:left">56500</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">买一报价</td><td style="text-align:left">6.340</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">买二数量(股)</td><td style="text-align:left">12100</td></tr><tr><td style="text-align:left">13</td><td style="text-align:left">买二报价</td><td style="text-align:left">6.330</td></tr><tr><td style="text-align:left">14</td><td style="text-align:left">买三数量(股)</td><td style="text-align:left">16100</td></tr><tr><td style="text-align:left">15</td><td style="text-align:left">买三报价</td><td style="text-align:left">6.320</td></tr><tr><td style="text-align:left">16</td><td style="text-align:left">买四数量(股)</td><td style="text-align:left">17500</td></tr><tr><td style="text-align:left">17</td><td style="text-align:left">买四报价</td><td style="text-align:left">6.310</td></tr><tr><td style="text-align:left">18</td><td style="text-align:left">买五数量(股)</td><td style="text-align:left">47400</td></tr><tr><td style="text-align:left">19</td><td style="text-align:left">买五报价</td><td style="text-align:left">6.300</td></tr><tr><td style="text-align:left">20</td><td style="text-align:left">卖一数量(股)</td><td style="text-align:left">13600</td></tr><tr><td style="text-align:left">21</td><td style="text-align:left">卖一报价</td><td style="text-align:left">6.350</td></tr><tr><td style="text-align:left">22</td><td style="text-align:left">卖二数量(股)</td><td style="text-align:left">11300</td></tr><tr><td style="text-align:left">23</td><td style="text-align:left">卖二报价</td><td style="text-align:left">6.360</td></tr><tr><td style="text-align:left">24</td><td style="text-align:left">卖三数量(股)</td><td style="text-align:left">32400</td></tr><tr><td style="text-align:left">25</td><td style="text-align:left">卖三报价</td><td style="text-align:left">6.370</td></tr><tr><td style="text-align:left">26</td><td style="text-align:left">卖四数量(股)</td><td style="text-align:left">39100</td></tr><tr><td style="text-align:left">27</td><td style="text-align:left">卖四报价</td><td style="text-align:left">6.380</td></tr><tr><td style="text-align:left">28</td><td style="text-align:left">卖五数量(股)</td><td style="text-align:left">41200</td></tr><tr><td style="text-align:left">29</td><td style="text-align:left">卖五报价</td><td style="text-align:left">6.390</td></tr><tr><td style="text-align:left">30</td><td style="text-align:left">当前日期</td><td style="text-align:left">2017-04-27</td></tr><tr><td style="text-align:left">31</td><td style="text-align:left">当前时间</td><td style="text-align:left">15:00:00</td></tr><tr><td style="text-align:left">32</td><td style="text-align:left">未知</td><td style="text-align:left">00</td></tr></tbody></table><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL decode - MySQL中类似oracle的decode实现方法]]></title>
      <url>/20170427-MySQL%20decode%20-%20MySQL%E4%B8%AD%E7%B1%BB%E4%BC%BCoracle%E7%9A%84decode%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<!-- build time:Thu Apr 27 2017 09:10:41 GMT+0800 (中国标准时间) --><p>在oracle中直接有decode函数 decode(cola,null,0)</p><p>表示如果cola为空，赋值为0</p><p>在mysql中的具体实现如下，<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">mysql&gt; describe book;</div><div class="line">+---------+--------------+------+-----+---------+----------------+</div><div class="line">| Field   | Type         | Null | Key | Default | Extra          |</div><div class="line">+---------+--------------+------+-----+---------+----------------+</div><div class="line">| book_id | bigint(20)   | NO   | PRI | NULL    | auto_increment |</div><div class="line">| name    | varchar(100) | NO   |     | NULL    |                |</div><div class="line">| number  | int(11)      | NO   |     | NULL    |                |</div><div class="line">+---------+--------------+------+-----+---------+----------------+</div><div class="line">3 rows in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select * from book;</div><div class="line">+---------+-------------------------+--------+</div><div class="line">| book_id | name                    | number |</div><div class="line">+---------+-------------------------+--------+</div><div class="line">|     123 | 123                     |    122 |</div><div class="line">|    1000 | Java程序设计             |      5 |</div><div class="line">|    1001 | 数据结构                 |      9 |</div><div class="line">|    1002 | 设计模式                 |     10 |</div><div class="line">|    1003 | 编译原理                 |     10 |</div><div class="line">|    1004 | MySQL从删库到跑路         |    100 |</div><div class="line">|    1005 | 活着                     |     10 |</div><div class="line">|    1232 | 11111                    |    124 |</div><div class="line">|    2001 | 测试                     |   2001 |</div><div class="line">|   10064 | 老鼠爱大米               |  10088 |</div><div class="line">|   10066 | 老鼠爱大米               |   1008 |</div><div class="line">|   10088 | 测试宝典                |   1008 |</div><div class="line">|   10096 | maven实战               |  10096 |</div><div class="line">|   11111 | 111111                  |  11111 |</div><div class="line">|   12311 | 都懂得                  |   1222 |</div><div class="line">|  123222 | 222                     |   1111 |</div><div class="line">+---------+-------------------------+--------+</div><div class="line">16 rows in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select if(count(b.book_id)=16,&quot;十六&quot;,&quot;不是十六&quot;) &apos;结果&apos; from book b;</div><div class="line">+--------+</div><div class="line">| 结果   |</div><div class="line">+--------+</div><div class="line">| 十六   |</div><div class="line">+--------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select case count(b.book_id) when 16 then &apos;十六&apos; else &apos;其他&apos; end as &apos;结果&apos; from book b;</div><div class="line">+--------+</div><div class="line">| 结果   |</div><div class="line">+--------+</div><div class="line">| 十六   |</div><div class="line">+--------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> mysql </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
            <tag> sql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java原生类库java.util.zip - 文件夹压缩与解压]]></title>
      <url>/20170426-Java%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%BA%93java.util.zip%20-%20%E6%96%87%E4%BB%B6%E5%A4%B9%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 26 2017 14:55:23 GMT+0800 (中国标准时间) --><p>到处搜了一下也没有看到专门做好的jar包</p><p>真实的目录结构如下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">C:\1\hisenyuan\build.png</div><div class="line">C:\1\hisenyuan\DSCN6812.JPG</div><div class="line">C:\1\hisenyuan\test\test\hello.zip</div><div class="line">C:\1\hisenyuan\test\hisenyuan.zip</div><div class="line">C:\1\hisenyuan\test\test.txt</div><div class="line">C:\1\hisenyuan\test\test\hello\hello.txt</div><div class="line">C:\1\hisenyuan\tomcat.png</div></pre></td></tr></table></figure><p></p><p>压缩包的目录结构如下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">build.png</div><div class="line">DSCN6812.JPG</div><div class="line">test\hello.zip</div><div class="line">test\hisenyuan.zip</div><div class="line">test\test.txt</div><div class="line">test\hello\hello.txt</div><div class="line">tomcat.png</div></pre></td></tr></table></figure><p></p><p>全部代码如下：<br><a id="more"></a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div></pre></td><td class="code"><pre><div class="line">package com.hisen.utils;</div><div class="line"></div><div class="line">import java.io.File;</div><div class="line">import java.io.FileInputStream;</div><div class="line">import java.io.FileNotFoundException;</div><div class="line">import java.io.FileOutputStream;</div><div class="line">import java.io.IOException;</div><div class="line">import java.io.InputStream;</div><div class="line">import java.io.OutputStream;</div><div class="line">import java.util.zip.ZipEntry;</div><div class="line">import java.util.zip.ZipFile;</div><div class="line">import java.util.zip.ZipInputStream;</div><div class="line">import java.util.zip.ZipOutputStream;</div><div class="line">import org.apache.commons.io.IOUtils;</div><div class="line">import org.junit.Test;</div><div class="line"></div><div class="line">/**</div><div class="line"> * 文件夹压缩解压工具</div><div class="line"> * Created by hisenyuan on 2017/4/20 at 17:27.</div><div class="line"> */</div><div class="line">public class ZipOrUnZipFileUtil &#123;</div><div class="line"></div><div class="line">  private InputStream is;</div><div class="line">  private ZipOutputStream zos;</div><div class="line">  private int lastIndexOf;</div><div class="line"></div><div class="line">  @Test</div><div class="line">  public void testZipOrUnZipFile() &#123;</div><div class="line">    //分隔符，windows linux下有所不同</div><div class="line">    String separator = File.separator;</div><div class="line">    //想要压缩的文件所在目录 C:\1\hisenyuan</div><div class="line">    String folderPath = &quot;c:&quot; + separator + &quot;1&quot; + separator + &quot;hisenyuan&quot;;</div><div class="line">    //压缩文件路径：C:\1\hisenyuan\hisenyuan.zip</div><div class="line">    String zipFilePath = &quot;c:&quot; + separator + &quot;1&quot; + separator + &quot;hisenyuan&quot; + &quot;.zip&quot;;</div><div class="line">    //解压文件所在的目录 E:\file\hisenyuan</div><div class="line">    String newPath = &quot;e:&quot; + separator + &quot;file&quot; + separator + &quot;hisenyuan&quot;;</div><div class="line"></div><div class="line">    unZipFile(zipFilePath, newPath);</div><div class="line">    zipFile(folderPath);</div><div class="line">  &#125;</div><div class="line"></div><div class="line"></div><div class="line">  /**</div><div class="line">   * 压缩文件</div><div class="line">   *</div><div class="line">   * @param filePath 压缩文件夹的路径</div><div class="line">   */</div><div class="line">  private void zipFile(String filePath) &#123;</div><div class="line">    File file = new File(filePath);</div><div class="line">    File zipFile = new File(filePath + &quot;.zip&quot;);</div><div class="line">    lastIndexOf = file.getAbsolutePath().length() + 1;</div><div class="line">    try &#123;</div><div class="line">      zos = new ZipOutputStream(new FileOutputStream(zipFile));</div><div class="line">      zos.setComment(&quot;log&quot;);</div><div class="line">      long start = System.currentTimeMillis();</div><div class="line">      listAllFile(filePath);</div><div class="line">      long stop = System.currentTimeMillis();</div><div class="line">      System.out.println(&quot;zip done，time：&quot; + (stop - start) / 1000 + &quot;s&quot;);</div><div class="line">    &#125; catch (FileNotFoundException e) &#123;</div><div class="line">      e.printStackTrace();</div><div class="line">    &#125; finally &#123;</div><div class="line">      IOUtils.closeQuietly(zos, is);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  /**</div><div class="line">   * 循环遍历当前文件夹下的所有文件，使用递归</div><div class="line">   */</div><div class="line">  private void listAllFile(String filePath) &#123;</div><div class="line">    File file = new File(filePath);</div><div class="line">    if (file.exists()) &#123;</div><div class="line">      File[] files = file.listFiles();</div><div class="line">      if (files == null) &#123;</div><div class="line">        System.out.println(&quot;folder is null&quot;);</div><div class="line">      &#125; else &#123;</div><div class="line">        for (File file2 : files) &#123;</div><div class="line">          if (file2.isDirectory()) &#123;</div><div class="line">            listAllFile(file2.getAbsolutePath());</div><div class="line">          &#125; else &#123;</div><div class="line">            String file3 = file2.getAbsolutePath();</div><div class="line">            try &#123;</div><div class="line">              is = new FileInputStream(file3);</div><div class="line">              //在zip压缩包当中出现的文件名</div><div class="line">              String name = file3.substring(lastIndexOf, file3.length());</div><div class="line">              System.out.println(&quot;name:&quot; + name);</div><div class="line">              zos.putNextEntry(new ZipEntry(name));</div><div class="line">              int temp;</div><div class="line">              int bufferSize = 1024 * 5;</div><div class="line">              byte[] buffer = new byte[bufferSize];</div><div class="line">              while ((temp = is.read(buffer, 0, bufferSize)) != -1) &#123;</div><div class="line">                zos.write(buffer, 0, temp);</div><div class="line">                zos.flush();</div><div class="line">              &#125;</div><div class="line">            &#125; catch (IOException e) &#123;</div><div class="line">              e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  /**</div><div class="line">   * 解压文件</div><div class="line">   *</div><div class="line">   * @param filePath 压缩文件所在目录</div><div class="line">   * @param newPath 想解压到那个目录</div><div class="line">   */</div><div class="line">  private void unZipFile(String filePath, String newPath) &#123;</div><div class="line">    //压缩文件所在的父目录</div><div class="line">    String oldPath = new File(filePath).getParentFile().toString();</div><div class="line">    File outFile;</div><div class="line">    ZipInputStream zipInputStream = null;</div><div class="line">    OutputStream outputStream = null;</div><div class="line">    InputStream inputStream = null;</div><div class="line">    ZipEntry zipEntry;</div><div class="line">    try &#123;</div><div class="line">      ZipFile zipFile = new ZipFile(filePath);</div><div class="line"></div><div class="line">      zipInputStream = new ZipInputStream(new FileInputStream(filePath));</div><div class="line">      while (null != (zipEntry = zipInputStream.getNextEntry())) &#123;</div><div class="line">        System.out.println(&quot;解压缩&quot; + zipEntry.getName() + &quot;文件。&quot;);</div><div class="line">        //newPath为空就代表解压在当前目录</div><div class="line">        if (&quot;&quot;.equals(newPath) || newPath.isEmpty()) &#123;</div><div class="line">          outFile = new File(oldPath + zipEntry.getName());</div><div class="line">        &#125; else &#123;</div><div class="line">          //防止传入的目录不存在</div><div class="line">          File file = new File(newPath);</div><div class="line">          if (!file.exists()) &#123;</div><div class="line">            file.mkdir();</div><div class="line">          &#125;</div><div class="line">          outFile = new File(newPath + File.separator + zipEntry.getName());</div><div class="line">        &#125;</div><div class="line">        //判断当前文件路径是否存在，不存在就创建</div><div class="line">        buildFile(outFile);</div><div class="line">        inputStream = zipFile.getInputStream(zipEntry);</div><div class="line">        outputStream = new FileOutputStream(outFile);</div><div class="line">        int temp;</div><div class="line">        int bufferSize = 1024 * 5;</div><div class="line">        byte[] buffer = new byte[bufferSize];</div><div class="line">        while ((temp = inputStream.read(buffer, 0, bufferSize)) != -1) &#123;</div><div class="line">          outputStream.write(buffer, 0, temp);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125; catch (IOException e) &#123;</div><div class="line">      e.printStackTrace();</div><div class="line">    &#125; finally &#123;</div><div class="line">      IOUtils.closeQuietly(inputStream, outputStream, zipInputStream);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  /**</div><div class="line">   * 判断文件是否存在，不存在创建</div><div class="line">   */</div><div class="line">  private static void buildFile(File file) &#123;</div><div class="line">    if (!file.exists()) &#123;</div><div class="line">      File parent = file.getParentFile();</div><div class="line">      if (parent != null &amp;&amp; !parent.exists()) &#123;</div><div class="line">        parent.mkdirs();</div><div class="line">      &#125;</div><div class="line">      try &#123;</div><div class="line">        file.createNewFile();</div><div class="line">      &#125; catch (IOException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> 解压 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[zookeeper & dubbo搭建 - 在IDEA上运行阿里巴巴Dubbo-demo]]></title>
      <url>/20170419-zookeeper%20&amp;%20dubbo%E6%90%AD%E5%BB%BA%20-%20%E5%9C%A8IDEA%E4%B8%8A%E8%BF%90%E8%A1%8C%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4Dubbo-demo/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 19 2017 10:26:22 GMT+0800 (中国标准时间) --><p><img src="http://wx3.sinaimg.cn/mw690/b2e389b6ly1ferrzk70zwj20nb0diadw.jpg"></p><h2 id="IDEA上搭建dubbo服务的简单过程"><a href="#IDEA上搭建dubbo服务的简单过程" class="headerlink" title="IDEA上搭建dubbo服务的简单过程"></a>IDEA上搭建dubbo服务的简单过程</h2><p>只是简单的让例子在IntelliJ IDEA跑起来</p><p>目前是最新的版本：2.5.4-SNAPSHOT</p><p>本文档更新时间：2017年04月19日01:08:02</p><h2 id="一-、安装zookeeper"><a href="#一-、安装zookeeper" class="headerlink" title="一 、安装zookeeper"></a>一 、安装zookeeper</h2><p>参考链接：<a href="http://hisen.me/20170224-Ubuntu-16-LTS-%E5%AE%89%E8%A3%85zookeeper%E5%B9%B6%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/" target="_blank">ubuntu apt-get安装zookeeper</a></p><h2 id="二、Idea-clone本项目"><a href="#二、Idea-clone本项目" class="headerlink" title="二、Idea clone本项目"></a>二、Idea clone本项目</h2><p>导出项目之后，配置一下tomcat，添加dubbo-admin：war到tomcat中</p><p>项目github地址：<a href="https://github.com/hisen-yuan/dubbo" target="_blank">https://github.com/hisen-yuan/dubbo</a></p><h2 id="三、启动tomcat，即可访问dubbo管理后台"><a href="#三、启动tomcat，即可访问dubbo管理后台" class="headerlink" title="三、启动tomcat，即可访问dubbo管理后台"></a>三、启动tomcat，即可访问dubbo管理后台</h2><p>默认账号：root</p><p>默认密码：root</p><h2 id="四、启动服务提供者-amp-消费者demo"><a href="#四、启动服务提供者-amp-消费者demo" class="headerlink" title="四、启动服务提供者&amp;消费者demo"></a>四、启动服务提供者&amp;消费者demo</h2><ol><li>修改dubbo-demo-consumer配置文件中的注册中心地址<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/dubbo/dubbo-demo/dubbo-demo-consumer/src/test/resources/dubbo.properties</div></pre></td></tr></table></figure></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#dubbo.registry.address=multicast://224.5.6.7:1234</div><div class="line">#使用本地的zookeeper做注册中心</div><div class="line">dubbo.registry.address=zookeeper://127.0.0.1:2181</div></pre></td></tr></table></figure><ol><li>修改ubbo-demo-provider配置文件中的注册中心地址<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/dubbo/dubbo-demo/dubbo-demo-provider/src/test/resources/dubbo.properties</div></pre></td></tr></table></figure></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#dubbo.registry.address=multicast://224.5.6.7:1234</div><div class="line">#使用本地的zookeeper做注册中心</div><div class="line">dubbo.registry.address=zookeeper://127.0.0.1:2181</div></pre></td></tr></table></figure><ol><li>分别启动dubbo-demo下ubbo-demo-provider、dubbo-demo-consumer下的测试方法</li></ol><p>即可在后台看到有服务在运行</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> zookeeper </tag>
            
            <tag> dubbo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL一个group by查询出最大值和非group by所在字段的值]]></title>
      <url>/20170418-MySQL%E4%B8%80%E4%B8%AAgroup%20by%E6%9F%A5%E8%AF%A2%E5%87%BA%E6%9C%80%E5%A4%A7%E5%80%BC%E5%92%8C%E9%9D%9Egroup%20by%E6%89%80%E5%9C%A8%E5%AD%97%E6%AE%B5%E7%9A%84%E5%80%BC/</url>
      <content type="html"><![CDATA[<!-- build time:Tue Apr 18 2017 15:49:38 GMT+0800 (中国标准时间) --><p>表结构，数据内容如下。</p><p>需求是：查找出每个年级，年纪最大的人的名字。</p><p>个人的思维只停留在<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select name, max(age),grade from  stu group by grade;</div><div class="line">ERROR 1055 (42000): Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column &apos;hisen.stu.name&apos; which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by</div><div class="line"></div><div class="line">mysql&gt; SELECT A.* FROM stu A INNER JOIN (SELECT MAX(AGE) AS MAX_AGE,GRADE FROM stu GROUP BY GRADE ) B ON A.GRADE = B.GRADE AND A.AGE= B.MAX_AGE;</div><div class="line">+----+------+------+-------+</div><div class="line">| id | name | age  | grade |</div><div class="line">+----+------+------+-------+</div><div class="line">|  3 | c    |   13 |     1 |</div><div class="line">|  6 | f    |   13 |     2 |</div><div class="line">+----+------+------+-------+</div><div class="line">2 rows in set (0.00 sec)</div></pre></td></tr></table></figure><p></p><p>折腾了一会自己不知道怎么解决，后来倒是解决了。</p><p>具体过程如下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">mysql&gt; describe stu;</div><div class="line">+-------+---------+------+-----+---------+----------------+</div><div class="line">| Field | Type    | Null | Key | Default | Extra          |</div><div class="line">+-------+---------+------+-----+---------+----------------+</div><div class="line">| id    | int(11) | NO   | PRI | NULL    | auto_increment |</div><div class="line">| name  | char(1) | YES  |     | NULL    |                |</div><div class="line">| age   | int(11) | YES  |     | NULL    |                |</div><div class="line">| grade | int(11) | YES  |     | NULL    |                |</div><div class="line">+-------+---------+------+-----+---------+----------------+</div><div class="line">4 rows in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select * from stu;</div><div class="line">+----+------+------+-------+</div><div class="line">| id | name | age  | grade |</div><div class="line">+----+------+------+-------+</div><div class="line">|  1 | a    |   11 |     1 |</div><div class="line">|  2 | b    |   12 |     1 |</div><div class="line">|  3 | c    |   13 |     1 |</div><div class="line">|  4 | d    |   11 |     2 |</div><div class="line">|  5 | e    |   12 |     2 |</div><div class="line">|  6 | f    |   13 |     2 |</div><div class="line">+----+------+------+-------+</div><div class="line">6 rows in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select max(name), max(age),grade from  stu group by grade;</div><div class="line">+-----------+----------+-------+</div><div class="line">| max(name) | max(age) | grade |</div><div class="line">+-----------+----------+-------+</div><div class="line">| c         |       13 |     1 |</div><div class="line">| f         |       13 |     2 |</div><div class="line">+-----------+----------+-------+</div><div class="line">2 rows in set (0.01 sec)</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> mysql </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Docker一键安装脚本Ubuntu-Debian-CentOS-Fedora-racleLinux]]></title>
      <url>/20170417-Docker%E4%B8%80%E4%BB%B6%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%ACUbuntu-Debian-CentOS-Fedora-racleLinux/</url>
      <content type="html"><![CDATA[<!-- build time:Tue Apr 18 2017 15:38:52 GMT+0800 (中国标准时间) --><p>系统要求<br>Ubuntu 14.04、16.04</p><p>Debian 7.7、8.0</p><p>CentOS 7.X</p><p>Fedora 20、21、22</p><p>OracleLinux 6、7</p><p>安装方法：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -</div></pre></td></tr></table></figure><p></p><p>详情：<a href="http://mirrors.aliyun.com/help/docker-engine" target="_blank">http://mirrors.aliyun.com/help/docker-engine</a></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用docker搭建IntelliJ IDEA License Server - idea本地激活服务器]]></title>
      <url>/20170417-%E7%94%A8docker%E6%90%AD%E5%BB%BAIntelliJ%20IDEA%20License%20Server%20-%20idea%E6%9C%AC%E5%9C%B0%E6%BF%80%E6%B4%BB%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 19 2017 19:06:47 GMT+0800 (中国标准时间) --><p>如果您还没有安装docker，请右上角搜索：ubuntu安装docker-ce</p><p>本次使用的docker镜像很小，只有5M</p><p>安装完docker之后<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">hisen@ubuntu:/$ docker pull woailuoli993/jblse:0.2.0</div><div class="line">0.2.0: Pulling from woailuoli993/jblse</div><div class="line">0a8490d0dfd3: Pull complete </div><div class="line">3e84c1b15299: Pull complete </div><div class="line">29bb05563e29: Pull complete </div><div class="line">Digest: sha256:2b2abbd66913072d41ba945c0fddb865d504267a743bed587e9cf5d18ef95da0</div><div class="line">Status: Downloaded newer image for woailuoli993/jblse:0.2.0</div><div class="line">hisen@ubuntu:/$ docker run -d --name=&quot;jblse&quot; -p 20701:20701 woailuoli993/jblse:0.2.0 -u hisen</div><div class="line">bb258a5b4407bd78fdcef5280ea53c17fd9f8759f0cc5b5c26a92e1d85176e90</div></pre></td></tr></table></figure><p></p><p><strong>说明：-P 后面的20701是自定义端口，可以随便改。-u 后面是用户名，就是idea显示的用户名</strong><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://127.0.0.1:20701</div></pre></td></tr></table></figure><p></p><p>然后正确的使用姿势：Help-Register（或者安装的时候选择）<br><img src="http://wx1.sinaimg.cn/mw690/b2e389b6ly1fepq81x8r7j20dc0dbmxj.jpg"></p><a id="more"></a><p>或者：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod u+x /home/soft/IntelliJIDEALicenseServer_linux_amd64</div></pre></td></tr></table></figure><p></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/rc.local</div></pre></td></tr></table></figure><p>在exit 0的上面新起一行，写入<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./home/soft/IntelliJIDEALicenseServer_linux_amd64 -p 2008 -u hisen</div></pre></td></tr></table></figure><p></p><p>即可开机启动这个服务端激活脚本</p><p>服务器地址：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://217.0.0.1:2008</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> idea </tag>
            
            <tag> ubuntu </tag>
            
            <tag> docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu安装docker-ce并配置国内源和加速器]]></title>
      <url>/20170417-ubuntu%E5%AE%89%E8%A3%85docker-ce%E5%B9%B6%E9%85%8D%E7%BD%AE%E5%9B%BD%E5%86%85%E6%BA%90%E5%92%8C%E5%8A%A0%E9%80%9F%E5%99%A8/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Apr 17 2017 16:41:03 GMT+0800 (中国标准时间) --><h2 id="一、配置ubuntu国内镜像，这里推荐阿里云，右上角搜索：换阿里云源"><a href="#一、配置ubuntu国内镜像，这里推荐阿里云，右上角搜索：换阿里云源" class="headerlink" title="一、配置ubuntu国内镜像，这里推荐阿里云，右上角搜索：换阿里云源"></a>一、配置ubuntu国内镜像，这里推荐阿里云，右上角搜索：换阿里云源</h2><h2 id="二、安装docker"><a href="#二、安装docker" class="headerlink" title="二、安装docker"></a>二、安装docker</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install \</div><div class="line">     linux-image-extra-$(uname -r) \</div><div class="line">     linux-image-extra-virtual</div></pre></td></tr></table></figure><p>安装docker包<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install \</div><div class="line">     apt-transport-https \</div><div class="line">     ca-certificates \</div><div class="line">     curl \</div><div class="line">     software-properties-common</div></pre></td></tr></table></figure><p></p><p>添加docker官方GPG秘钥,留意最后那个符号也要复制<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</div></pre></td></tr></table></figure><p></p><p>安装稳定版仓库<br><a id="more"></a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo add-apt-repository \</div><div class="line">     &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \</div><div class="line">     $(lsb_release -cs) \</div><div class="line">     stable&quot;</div></pre></td></tr></table></figure><p></p><p>再次更新源<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div></pre></td></tr></table></figure><p></p><p>安装docker-ce<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install docker-ce</div></pre></td></tr></table></figure><p></p><h2 id="三、给docker添加国内加速器"><a href="#三、给docker添加国内加速器" class="headerlink" title="三、给docker添加国内加速器"></a>三、给docker添加国内加速器</h2><p>在阿里云申请一个账号，打开连接<a href="https://cr.console.aliyun.com/#/accelerator" target="_blank">https://cr.console.aliyun.com/#/accelerator</a></p><p>拷贝您的专属加速器地址（每个人专属的，登陆需要密码），然后<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/systemd/system/multi-user.target.wants/docker.service</div></pre></td></tr></table></figure><p></p><p>可以看到如下内容<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[Service]</div><div class="line">Type=notify</div><div class="line"># the default is not to use systemd for cgroups because the delegate issues still</div><div class="line"># exists and systemd currently does not support the cgroup feature set required</div><div class="line"># for containers run by docker</div><div class="line">#下面这行是默认的，我注释了，添加了下面一行</div><div class="line">#ExecStart=/usr/bin/dockerd -H fd://</div><div class="line">ExecStart=/usr/bin/dockerd -H fd:// --registry-mirror=https://9s3ekxxx.mirror.aliyuncs.com</div><div class="line">ExecReload=/bin/kill -s HUP $MAINPID</div><div class="line">LimitNOFILE=1048576</div></pre></td></tr></table></figure><p></p><p>找到 ExecStart= 这一行，在这行最后添加加速器地址 –registry-mirror=&lt;加速器地址&gt;</p><p>如：ExecStart=/usr/bin/dockerd -H fd:// –registry-mirror=<a href="https://xxxxxx.mirror.aliyuncs.com" target="_blank" rel="external">https://xxxxxx.mirror.aliyuncs.com</a></p><h2 id="四、重新加载配置并且重新启动"><a href="#四、重新加载配置并且重新启动" class="headerlink" title="四、重新加载配置并且重新启动"></a>四、重新加载配置并且重新启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo systemctl daemon-reload</div><div class="line">$ sudo systemctl restart docker</div></pre></td></tr></table></figure><p>至此docker安装及国内加速器都好了，开始你的docker之旅吧。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo docker run hello-world</div></pre></td></tr></table></figure><p></p><p>看到如下信息<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">hisen@ubuntu:/$ sudo docker run hello-world</div><div class="line">Unable to find image &apos;hello-world:latest&apos; locally</div><div class="line">latest: Pulling from library/hello-world</div><div class="line">78445dd45222: Pull complete </div><div class="line">Digest: sha256:c5515758d4c5e1e838e9cd307f6c6a0d620b5e07e6f927b07d05f6d12a1ac8d7</div><div class="line">Status: Downloaded newer image for hello-world:latest</div><div class="line"></div><div class="line">Hello from Docker!</div><div class="line">This message shows that your installation appears to be working correctly.</div><div class="line"></div><div class="line">To generate this message, Docker took the following steps:</div><div class="line"> 1. The Docker client contacted the Docker daemon.</div><div class="line"> 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</div><div class="line"> 3. The Docker daemon created a new container from that image which runs the</div><div class="line">    executable that produces the output you are currently reading.</div><div class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</div><div class="line">    to your terminal.</div><div class="line"></div><div class="line">To try something more ambitious, you can run an Ubuntu container with:</div><div class="line"> $ docker run -it ubuntu bash</div><div class="line"></div><div class="line">Share images, automate workflows, and more with a free Docker ID:</div><div class="line"> https://cloud.docker.com/</div><div class="line"></div><div class="line">For more examples and ideas, visit:</div><div class="line"> https://docs.docker.com/engine/userguide/</div></pre></td></tr></table></figure><p></p><p>到此就圆满结束</p><p>最后给个彩蛋，阿里云一键安装脚本，执行下面命令即可安装最新版docker<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -</div></pre></td></tr></table></figure><p></p><p>详情：<a href="http://mirrors.aliyun.com/help/docker-engine" target="_blank">http://mirrors.aliyun.com/help/docker-engine</a></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[html - 原生javascript动态显示当前时间和日期]]></title>
      <url>/20170412-html%20-%20%E5%8E%9F%E7%94%9Fjavascript%E5%8A%A8%E6%80%81%E6%98%BE%E7%A4%BA%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4%E5%92%8C%E6%97%A5%E6%9C%9F/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 18:26:57 GMT+0800 (中国标准时间) --><p>显示当前时间：</p><p>2017年04月12日 18:26:37 星期三</p><p>示例如下：<br><a id="more"></a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class="line">&lt;title&gt;显示当前时间 - 原生javascript&lt;/title&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot;&gt;    </div><div class="line">function show_cur_times()&#123;    </div><div class="line">//获取当前日期    </div><div class="line">var date_time = new Date();    </div><div class="line">//定义星期    </div><div class="line">var week;    </div><div class="line">//switch判断    </div><div class="line">switch (date_time.getDay())&#123;    </div><div class="line">case 1: week=&quot;星期一&quot;; break;    </div><div class="line">case 2: week=&quot;星期二&quot;; break;    </div><div class="line">case 3: week=&quot;星期三&quot;; break;    </div><div class="line">case 4: week=&quot;星期四&quot;; break;    </div><div class="line">case 5: week=&quot;星期五&quot;; break;    </div><div class="line">case 6: week=&quot;星期六&quot;; break;    </div><div class="line">default:week=&quot;星期天&quot;; break;    </div><div class="line">&#125;    </div><div class="line">//年    </div><div class="line">var year = date_time.getFullYear();    </div><div class="line"> 	//判断小于10，前面补0    </div><div class="line">if(year&lt;10)&#123;    </div><div class="line"> 	year=&quot;0&quot;+year;    </div><div class="line">&#125;    </div><div class="line">//月    </div><div class="line">var month = date_time.getMonth()+1;    </div><div class="line"> 	//判断小于10，前面补0    </div><div class="line">if(month&lt;10)&#123;    </div><div class="line">month=&quot;0&quot;+month;    </div><div class="line">&#125;    </div><div class="line">//日    </div><div class="line">var day = date_time.getDate();    </div><div class="line"> 	//判断小于10，前面补0    </div><div class="line">if(day&lt;10)&#123;    </div><div class="line"> 	day=&quot;0&quot;+day;    </div><div class="line">&#125;    </div><div class="line">//时    </div><div class="line">var hours =date_time.getHours();    </div><div class="line"> 	//判断小于10，前面补0    </div><div class="line">if(hours&lt;10)&#123;    </div><div class="line"> 	hours=&quot;0&quot;+hours;    </div><div class="line">&#125;    </div><div class="line">//分    </div><div class="line">var minutes =date_time.getMinutes();    </div><div class="line"> 	//判断小于10，前面补0    </div><div class="line">if(minutes&lt;10)&#123;    </div><div class="line"> 	minutes=&quot;0&quot;+minutes;    </div><div class="line">&#125;    </div><div class="line">//秒    </div><div class="line">var seconds=date_time.getSeconds();    </div><div class="line"> 	//判断小于10，前面补0    </div><div class="line">if(seconds&lt;10)&#123;    </div><div class="line"> 	seconds=&quot;0&quot;+seconds;    </div><div class="line">&#125;    </div><div class="line">//拼接年月日时分秒    </div><div class="line">var date_str = year+&quot;年&quot;+month+&quot;月&quot;+day+&quot;日 &quot;+hours+&quot;:&quot;+minutes+&quot;:&quot;+seconds+&quot; &quot;+week;    </div><div class="line">//显示在id为showtimes的容器里    </div><div class="line">document.getElementById(&quot;showtimes&quot;).innerHTML= date_str;    </div><div class="line">&#125;    </div><div class="line">//设置1秒调用一次show_cur_times函数    </div><div class="line">setInterval(&quot;show_cur_times()&quot;,100);    </div><div class="line">&lt;/script&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">显示当前时间：&lt;p id=&quot;showtimes&quot;&gt;&lt;/p&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Maven镜像库设置 - maven mirrors - maven 镜像 阿里]]></title>
      <url>/20170412-Maven%E9%95%9C%E5%83%8F%E5%BA%93%E8%AE%BE%E7%BD%AE%20-%20maven%20mirrors%20-%20maven%20%E9%95%9C%E5%83%8F%20%E9%98%BF%E9%87%8C/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>配置文件：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yourPath\maven-3.3.9\conf\settings.xml</div></pre></td></tr></table></figure><p></p><p>找到里面的，添加镜像即可<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;mirrors&gt;</div><div class="line">&lt;/mirrors&gt;</div></pre></td></tr></table></figure><p></p><mirrorof></mirrorof><p>这里写的是被镜像的ID</p><p>如果写成：* (星号)</p><p>所有的请求都会到这个镜像上，包括各种本地库</p><p>注意：千万不要配成<strong><mirrorof>*</mirrorof></strong></p><p>否则内网的仓库或者你配的镜像里面没有一下jar包的时候不会去别的地方搜索<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;!--阿里云：速度挺快--&gt;</div><div class="line">&lt;mirror&gt;</div><div class="line">	&lt;id&gt;nexus-aliyun&lt;/id&gt;</div><div class="line">	&lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</div><div class="line">	&lt;name&gt;Nexus aliyun&lt;/name&gt;</div><div class="line">	&lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</div><div class="line">&lt;/mirror&gt;</div><div class="line"></div><div class="line">&lt;!--谷歌：北京速度不错--&gt;</div><div class="line">&lt;mirror&gt;</div><div class="line">  &lt;id&gt;google-maven-central&lt;/id&gt;</div><div class="line">  &lt;name&gt;Google Maven Central&lt;/name&gt;</div><div class="line">  &lt;url&gt;https://maven-central.storage.googleapis.com&lt;/url&gt;</div><div class="line">  &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</div><div class="line">&lt;/mirror&gt;</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> maven </category>
            
        </categories>
        
        
        <tags>
            
            <tag> maven </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[oracle分页的三种方式]]></title>
      <url>/20170411-oracle%E5%88%86%E9%A1%B5%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>第一种：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">select *</div><div class="line">  from (select t.*, rownum rn</div><div class="line">          from (select * from EW_AUTH_FLOW) t</div><div class="line">         where rownum &lt;= 5)</div><div class="line"> where rn &gt; 2;</div></pre></td></tr></table></figure><p></p><p>第二种：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">select *</div><div class="line">  from (select t.*, rownum rn from ew_auth_flow t where rownum &lt;= 5)</div><div class="line"> where rn &gt; 2;</div></pre></td></tr></table></figure><p></p><p>第三种：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">select *</div><div class="line">  from (select t.*, rownum rn from ew_auth_flow t)</div><div class="line"> where rn between 2 and 5;</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> sql </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Jedis - Software caused connection abort:recv failed]]></title>
      <url>/20170411-Jedis%20-%20Software%20caused%20connection%20abort%20recv%20failed/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>在使用jedis的时候出现这个问题：</p><p><strong>redis.clients.jedis.exceptions.JedisConnectionException:java.net.SocketException:Software caused connection abort: recv failed</strong></p><p>我是windows上java运行，然后redis是在虚拟机的，通过映射访问</p><h2 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h2><p>编辑redis配置文件：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/redis/redis.conf</div></pre></td></tr></table></figure><p></p><p>找到<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bind 127.0.0.1</div></pre></td></tr></table></figure><p></p><p>改成<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bind 0.0.0.0</div></pre></td></tr></table></figure><p></p><p>改完之后重启redis<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service redis restart</div></pre></td></tr></table></figure><p></p><p>即可。这跟mysql一样，允许任何ip连接！</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> jedis </tag>
            
            <tag> redis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Mysql Employees Database练习题&答案]]></title>
      <url>/20170410-Mysql%20Employees%20%20Database%E7%BB%83%E4%B9%A0%E9%A2%98&amp;%E7%AD%94%E6%A1%88/</url>
      <content type="html"><![CDATA[<!-- build time:Mon Apr 17 2017 12:30:33 GMT+0800 (中国标准时间) --><p>Employees数据库是mysql官方提供的一个测试用数据库</p><p>里面含有几十万条数据。</p><p>找了好久也没有找到比较匹配的题目</p><p>就找了个匹配度比较高的题来练习，如果你还没有导入Employees Sample Database</p><p><strong>请参考：<a href="http://hisen.me/20170401-mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85%E5%AE%98%E6%96%B9%E8%87%AA%E5%B8%A6employees%E6%B5%8B%E8%AF%95%E8%A1%A8/" target="_blank">点击导入Employees</a></strong></p><p>本次操作在Xshell中完成，也就是mysql命令行。</p><h2 id="简单的操作"><a href="#简单的操作" class="headerlink" title="简单的操作"></a>简单的操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div></pre></td><td class="code"><pre><div class="line">#登陆数据库</div><div class="line">hisen@ubuntu:/$ mysql -u root -p</div><div class="line">Enter password: </div><div class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</div><div class="line">Your MySQL connection id is 8</div><div class="line">Server version: 5.7.17-0ubuntu0.16.04.2 (Ubuntu)</div><div class="line"></div><div class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</div><div class="line"></div><div class="line">Oracle is a registered trademark of Oracle Corporation and/or its</div><div class="line">affiliates. Other names may be trademarks of their respective</div><div class="line">owners.</div><div class="line"></div><div class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</div><div class="line"></div><div class="line">mysql&gt; show databases;</div><div class="line">+--------------------+</div><div class="line">| Database           |</div><div class="line">+--------------------+</div><div class="line">| information_schema |</div><div class="line">| employees          |</div><div class="line">| log4j              |</div><div class="line">| mysql              |</div><div class="line">| performance_schema |</div><div class="line">| ssm                |</div><div class="line">| sys                |</div><div class="line">+--------------------+</div><div class="line">7 rows in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; use employees</div><div class="line">Reading table information for completion of table and column names</div><div class="line">You can turn off this feature to get a quicker startup with -A</div><div class="line"></div><div class="line">Database changed</div><div class="line">mysql&gt; show tables;</div><div class="line">+----------------------+</div><div class="line">| Tables_in_employees  |</div><div class="line">+----------------------+</div><div class="line">| current_dept_emp     |</div><div class="line">| departments          |</div><div class="line">| dept_emp             |</div><div class="line">| dept_emp_latest_date |</div><div class="line">| dept_manager         |</div><div class="line">| employees            |</div><div class="line">| salaries             |</div><div class="line">| titles               |</div><div class="line">+----------------------+</div><div class="line">8 rows in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select * from employees limit 10;</div><div class="line">+--------+------------+------------+-----------+--------+------------+</div><div class="line">| emp_no | birth_date | first_name | last_name | gender | hire_date  |</div><div class="line">+--------+------------+------------+-----------+--------+------------+</div><div class="line">|  10001 | 1953-09-02 | Georgi     | Facello   | M      | 1986-06-26 |</div><div class="line">|  10002 | 1964-06-02 | Bezalel    | Simmel    | F      | 1985-11-21 |</div><div class="line">|  10003 | 1959-12-03 | Parto      | Bamford   | M      | 1986-08-28 |</div><div class="line">|  10004 | 1954-05-01 | Chirstian  | Koblick   | M      | 1986-12-01 |</div><div class="line">|  10005 | 1955-01-21 | Kyoichi    | Maliniak  | M      | 1989-09-12 |</div><div class="line">|  10006 | 1953-04-20 | Anneke     | Preusig   | F      | 1989-06-02 |</div><div class="line">|  10007 | 1957-05-23 | Tzvetan    | Zielinski | F      | 1989-02-10 |</div><div class="line">|  10008 | 1958-02-19 | Saniya     | Kalloufi  | M      | 1994-09-15 |</div><div class="line">|  10009 | 1952-04-19 | Sumant     | Peac      | F      | 1985-02-18 |</div><div class="line">|  10010 | 1963-06-01 | Duangkaew  | Piveteau  | F      | 1989-08-24 |</div><div class="line">+--------+------------+------------+-----------+--------+------------+</div><div class="line">10 rows in set (0.00 sec)</div><div class="line">#统计各部门曾经拥有的员工数量</div><div class="line">mysql&gt; select dept_no,count(*) emp_sum</div><div class="line">    -&gt; from dept_emp</div><div class="line">    -&gt; group by dept_no</div><div class="line">    -&gt; order by emp_sum desc;</div><div class="line">+---------+---------+</div><div class="line">| dept_no | emp_sum |</div><div class="line">+---------+---------+</div><div class="line">| d005    |   85707 |</div><div class="line">| d004    |   73485 |</div><div class="line">| d007    |   52245 |</div><div class="line">| d009    |   23580 |</div><div class="line">| d008    |   21126 |</div><div class="line">| d001    |   20211 |</div><div class="line">| d006    |   20117 |</div><div class="line">| d003    |   17786 |</div><div class="line">| d002    |   17346 |</div><div class="line">+---------+---------+</div><div class="line">9 rows in set (0.63 sec)</div><div class="line">#创建视图</div><div class="line">mysql&gt; CREATE VIEW test AS</div><div class="line">    -&gt; SELECT dept_no, COUNT(*) AS emp_sum</div><div class="line">    -&gt; FROM dept_emp</div><div class="line">    -&gt; GROUP BY dept_no</div><div class="line">    -&gt; ORDER BY emp_sum DESC</div><div class="line">    -&gt; ;</div><div class="line">Query OK, 0 rows affected (0.16 sec)</div><div class="line">mysql&gt; select * from test;</div><div class="line">+---------+---------+</div><div class="line">| dept_no | emp_sum |</div><div class="line">+---------+---------+</div><div class="line">| d005    |   85707 |</div><div class="line">| d004    |   73485 |</div><div class="line">| d007    |   52245 |</div><div class="line">| d009    |   23580 |</div><div class="line">| d008    |   21126 |</div><div class="line">| d001    |   20211 |</div><div class="line">| d006    |   20117 |</div><div class="line">| d003    |   17786 |</div><div class="line">| d002    |   17346 |</div><div class="line">+---------+---------+</div><div class="line">9 rows in set (0.11 sec)</div><div class="line">#联合查询，加上部门名称</div><div class="line">mysql&gt; select test.dept_no,emp_sum,dept_name</div><div class="line">    -&gt; from test,departments</div><div class="line">    -&gt; where test.dept_no = departments.dept_no;</div><div class="line">+---------+---------+--------------------+</div><div class="line">| dept_no | emp_sum | dept_name          |</div><div class="line">+---------+---------+--------------------+</div><div class="line">| d009    |   23580 | Customer Service   |</div><div class="line">| d005    |   85707 | Development        |</div><div class="line">| d002    |   17346 | Finance            |</div><div class="line">| d003    |   17786 | Human Resources    |</div><div class="line">| d001    |   20211 | Marketing          |</div><div class="line">| d004    |   73485 | Production         |</div><div class="line">| d006    |   20117 | Quality Management |</div><div class="line">| d008    |   21126 | Research           |</div><div class="line">| d007    |   52245 | Sales              |</div><div class="line">+---------+---------+--------------------+</div><div class="line">9 rows in set (0.16 sec)</div></pre></td></tr></table></figure><h2 id="练习题目和答案："><a href="#练习题目和答案：" class="headerlink" title="练习题目和答案："></a>练习题目和答案：</h2><p>建议看看输出的结果自己写下sql，不要单纯的复制粘贴。</p><p>因为数据量比较大， 很多时候我都加了5条数据的限制。<br><a id="more"></a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div></pre></td><td class="code"><pre><div class="line">#1.查找整个职员表的所有内容。</div><div class="line">mysql&gt; select * from employees limit 5;</div><div class="line">+--------+------------+------------+-----------+--------+------------+</div><div class="line">| emp_no | birth_date | first_name | last_name | gender | hire_date  |</div><div class="line">+--------+------------+------------+-----------+--------+------------+</div><div class="line">|  10001 | 1953-09-02 | Georgi     | Facello   | M      | 1986-06-26 |</div><div class="line">|  10002 | 1964-06-02 | Bezalel    | Simmel    | F      | 1985-11-21 |</div><div class="line">|  10003 | 1959-12-03 | Parto      | Bamford   | M      | 1986-08-28 |</div><div class="line">|  10004 | 1954-05-01 | Chirstian  | Koblick   | M      | 1986-12-01 |</div><div class="line">|  10005 | 1955-01-21 | Kyoichi    | Maliniak  | M      | 1989-09-12 |</div><div class="line">+--------+------------+------------+-----------+--------+------------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">#2.查看雇员名字(last_name)。</div><div class="line">mysql&gt; select last_name from employees limit 5;</div><div class="line">+-----------+</div><div class="line">| last_name |</div><div class="line">+-----------+</div><div class="line">| Facello   |</div><div class="line">| Simmel    |</div><div class="line">| Bamford   |</div><div class="line">| Koblick   |</div><div class="line">| Maliniak  |</div><div class="line">+-----------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">#3.查看雇员编号、名字和部门</div><div class="line">mysql&gt; select e.last_name,e.emp_no,d.dept_name from employees e,departments d,dept_emp de where e.emp_no = de.emp_no and de.dept_no = d.dept_no limit 5;</div><div class="line">+-------------+--------+------------------+</div><div class="line">| last_name   | emp_no | dept_name        |</div><div class="line">+-------------+--------+------------------+</div><div class="line">| Sluis       |  10011 | Customer Service |</div><div class="line">| Lortz       |  10038 | Customer Service |</div><div class="line">| Tramer      |  10049 | Customer Service |</div><div class="line">| Billingsley |  10060 | Customer Service |</div><div class="line">| Syrzycki    |  10088 | Customer Service |</div><div class="line">+-------------+--------+------------------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">#4.显示所有雇员的工号、姓名、工资</div><div class="line">mysql&gt; select e.emp_no,concat(e.last_name,&apos; &apos;,e.first_name) name,s.salary from employees e,salaries s where e.emp_no=s.emp_no limit 5;</div><div class="line">+--------+----------------+--------+</div><div class="line">| emp_no | name           | salary |</div><div class="line">+--------+----------------+--------+</div><div class="line">|  10001 | Facello Georgi |  60117 |</div><div class="line">|  10001 | Facello Georgi |  62102 |</div><div class="line">|  10001 | Facello Georgi |  66074 |</div><div class="line">|  10001 | Facello Georgi |  66596 |</div><div class="line">|  10001 | Facello Georgi |  66961 |</div><div class="line">+--------+----------------+--------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">#5.查找在d005号部门工作的雇员</div><div class="line">mysql&gt; select e.emp_no,concat(e.last_name,&apos; &apos;,e.first_name) name,d.dept_no,d.dept_name from employees e,dept_emp de,departments d where e.emp_no = de.emp_no and de.dept_no = d.dept_no and d.dept_no = &apos;d005&apos; limit 5;</div><div class="line">+--------+--------------------+---------+-------------+</div><div class="line">| emp_no | name               | dept_no | dept_name   |</div><div class="line">+--------+--------------------+---------+-------------+</div><div class="line">|  10001 | Facello Georgi     | d005    | Development |</div><div class="line">|  10006 | Preusig Anneke     | d005    | Development |</div><div class="line">|  10008 | Kalloufi Saniya    | d005    | Development |</div><div class="line">|  10012 | Bridgland Patricio | d005    | Development |</div><div class="line">|  10014 | Genin Berni        | d005    | Development |</div><div class="line">+--------+--------------------+---------+-------------+</div><div class="line">5 rows in set (0.05 sec)</div><div class="line"></div><div class="line">#6.要求查找职位为Engineer和Senior Engineer的雇员姓名(last_name)</div><div class="line">mysql&gt; select e.last_name from employees e,titles t where t.emp_no=e.emp_no and t.title in(&apos;Engineer&apos;,&apos;Senior Engineer&apos;) limit  5;</div><div class="line">+-----------+</div><div class="line">| last_name |</div><div class="line">+-----------+</div><div class="line">| Facello   |</div><div class="line">| Bamford   |</div><div class="line">| Koblick   |</div><div class="line">| Koblick   |</div><div class="line">| Preusig   |</div><div class="line">+-----------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">#7.查找职位不是Engineer和Senior Engineer的部门编号，雇员部门及姓名。将姓名显示为(first_name+last_name命名为”Name”)</div><div class="line">mysql&gt; select d.dept_no,d.dept_name,concat(e.first_name,&apos; &apos;,e.last_name) name from employees e,titles t,dept_emp de,departmentss d where e.emp_no=de.emp_no and de.dept_no = d.dept_no and t.emp_no = e.emp_no and t.title not in(&apos;Engineer&apos;,&apos;Senior Engineer&apos;&apos;) limit 5;</div><div class="line">+---------+------------------+--------------+</div><div class="line">| dept_no | dept_name        | name         |</div><div class="line">+---------+------------------+--------------+</div><div class="line">| d009    | Customer Service | Mary Sluis   |</div><div class="line">| d009    | Customer Service | Huan Lortz   |</div><div class="line">| d009    | Customer Service | Huan Lortz   |</div><div class="line">| d009    | Customer Service | Basil Tramer |</div><div class="line">| d009    | Customer Service | Basil Tramer |</div><div class="line">+---------+------------------+--------------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">#8.查找哪些雇员的工资在60000到90000之间</div><div class="line">mysql&gt; select concat(e.first_name,&apos; &apos;,e.last_name) name,s.salary from employees e,salaries s where s.salary between 60000 and 90000 and e.emp_no = s.emp_no limit 5;</div><div class="line">+----------------+--------+</div><div class="line">| name           | salary |</div><div class="line">+----------------+--------+</div><div class="line">| Georgi Facello |  60117 |</div><div class="line">| Georgi Facello |  62102 |</div><div class="line">| Georgi Facello |  66074 |</div><div class="line">| Georgi Facello |  66596 |</div><div class="line">| Georgi Facello |  66961 |</div><div class="line">+----------------+--------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">#9.查找哪些雇员的工资不在60000到90000之间</div><div class="line">mysql&gt; select concat(e.first_name,&apos; &apos;,e.last_name) name,s.salary from employees e,salaries s where s.salary not between 60000 and 90000 and e.emp_no = s.emp_no limit 10;</div><div class="line">+-------------------+--------+</div><div class="line">| name              | salary |</div><div class="line">+-------------------+--------+</div><div class="line">| Parto Bamford     |  40006 |</div><div class="line">| Parto Bamford     |  43616 |</div><div class="line">| Parto Bamford     |  43466 |</div><div class="line">| Parto Bamford     |  43636 |</div><div class="line">| Parto Bamford     |  43478 |</div><div class="line">| Parto Bamford     |  43699 |</div><div class="line">| Parto Bamford     |  43311 |</div><div class="line">| Chirstian Koblick |  40054 |</div><div class="line">| Chirstian Koblick |  42283 |</div><div class="line">| Chirstian Koblick |  42542 |</div><div class="line">+-------------------+--------+</div><div class="line">10 rows in set (0.00 sec)</div><div class="line"></div><div class="line">#10.查找first_name以P开头，后面仅有四个字母的雇员信息</div><div class="line">mysql&gt; select e.emp_no,concat(e.first_name,&apos; &apos;,e.last_name) name from employees e where e.first_name like &apos;P____&apos; and e.first_name not like &apos;p__&apos; limit 5;</div><div class="line">+--------+---------------------+</div><div class="line">| emp_no | name                |</div><div class="line">+--------+---------------------+</div><div class="line">|  10003 | Parto Bamford       |</div><div class="line">|  10101 | Perla Heyers        |</div><div class="line">|  10138 | Perry Shimshoni     |</div><div class="line">|  10353 | Phule Hammerschmidt |</div><div class="line">|  10387 | Parto Wrigley       |</div><div class="line">+--------+---------------------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">#11.查找last_name以K开头的雇员信息</div><div class="line">mysql&gt; select e.emp_no,concat(e.first_name,&apos; &apos;,e.last_name) name from employees e where e.first_name like &apos;K%&apos; limit 5; </div><div class="line">+--------+----------------------+</div><div class="line">| emp_no | name                 |</div><div class="line">+--------+----------------------+</div><div class="line">|  10005 | Kyoichi Maliniak     |</div><div class="line">|  10016 | Kazuhito Cappelletti |</div><div class="line">|  10018 | Kazuhide Peha        |</div><div class="line">|  10031 | Karsten Joslin       |</div><div class="line">|  10066 | Kwee Schusler        |</div><div class="line">+--------+----------------------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">#12.查找名字以字母K开头，以i结尾，并且第三个字母为o的雇员名字(First_name)、职位和所在部门号</div><div class="line">mysql&gt; select concat(e.first_name,&apos; &apos;,e.last_name) name,t.title,de.dept_no from employees e,dept_emp de,titles t where e.first_name like &apos;K_o%i&apos; and e.emp_no = t.emp_no and e.emp_no = de.emp_no limit 5;</div><div class="line">+------------------+--------------+---------+</div><div class="line">| name             | title        | dept_no |</div><div class="line">+------------------+--------------+---------+</div><div class="line">| Kyoichi Maliniak | Senior Staff | d003    |</div><div class="line">| Kyoichi Maliniak | Staff        | d003    |</div><div class="line">| Kyoichi Wossner  | Staff        | d007    |</div><div class="line">| Kyoichi Flexer   | Senior Staff | d007    |</div><div class="line">| Kyoichi Flexer   | Staff        | d007    |</div><div class="line">+------------------+--------------+---------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">#13.查找哪些雇员的职位名不以Se开头</div><div class="line">mysql&gt; select concat(e.first_name,&apos; &apos;,last_name) name,t.title from employees e,titles t where e.emp_no = t.emp_no and t.title not like &apos;Se%&apos; limit 5;</div><div class="line">+-------------------+--------------------+</div><div class="line">| name              | title              |</div><div class="line">+-------------------+--------------------+</div><div class="line">| Bezalel Simmel    | Staff              |</div><div class="line">| Chirstian Koblick | Engineer           |</div><div class="line">| Kyoichi Maliniak  | Staff              |</div><div class="line">| Tzvetan Zielinski | Staff              |</div><div class="line">| Saniya Kalloufi   | Assistant Engineer |</div><div class="line">+-------------------+--------------------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">#14.查找d005号部门里不是Staff的雇员信息</div><div class="line">mysql&gt; select concat(e.first_name,&apos; &apos;,last_name) name,t.title from employees e,dept_emp de,titles t where e.emp_no = de.emp_no  and e.emp_no = t.emp_no and t.title != &apos;Staff&apos; limit 5;</div><div class="line">+-------------------+-----------------+</div><div class="line">| name              | title           |</div><div class="line">+-------------------+-----------------+</div><div class="line">| Georgi Facello    | Senior Engineer |</div><div class="line">| Parto Bamford     | Senior Engineer |</div><div class="line">| Chirstian Koblick | Engineer        |</div><div class="line">| Chirstian Koblick | Senior Engineer |</div><div class="line">| Kyoichi Maliniak  | Senior Staff    |</div><div class="line">+-------------------+-----------------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">#15.查找d005号部门工资大于100000的员工的信息</div><div class="line">mysql&gt; select concat(e.first_name,&apos; &apos;,last_name) name,t.title,s.salary from employees e,dept_emp de,titles t,salaries s where e.emp_no = de.emp_no and e.emp_no = t.emp_no and e.emp_no = s.emp_no and de.dept_no = &apos;d005&apos; and s.salary &gt; 100000 limit 5;</div><div class="line">+---------------+--------------------+--------+</div><div class="line">| name          | title              | salary |</div><div class="line">+---------------+--------------------+--------+</div><div class="line">| Kwee Schusler | Assistant Engineer | 102425 |</div><div class="line">| Kwee Schusler | Assistant Engineer | 102674 |</div><div class="line">| Kwee Schusler | Assistant Engineer | 103672 |</div><div class="line">| Kwee Schusler | Engineer           | 102425 |</div><div class="line">| Kwee Schusler | Engineer           | 102674 |</div><div class="line">+---------------+--------------------+--------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">#16.按字母顺序显示雇员的名字(last_name)</div><div class="line">mysql&gt; select concat(e.first_name,&apos; &apos;,last_name) name from employees e order by e.last_name limit 5;</div><div class="line">+------------------+</div><div class="line">| name             |</div><div class="line">+------------------+</div><div class="line">| Aluzio Aamodt    |</div><div class="line">| Sachem Aamodt    |</div><div class="line">| Sreenivas Aamodt |</div><div class="line">| Mokhtar Aamodt   |</div><div class="line">| Bartek Aamodt    |</div><div class="line">+------------------+</div><div class="line">5 rows in set (0.24 sec)</div><div class="line"></div><div class="line">#17.按部门编号降序显示雇员信息</div><div class="line">mysql&gt; select concat(e.first_name,&apos; &apos;,last_name) name,de.dept_no from employees e,dept_emp de where e.emp_no = de.emp_no order by de.dept_no desc limit 5;</div><div class="line">+-------------------+---------+</div><div class="line">| name              | dept_no |</div><div class="line">+-------------------+---------+</div><div class="line">| Pohua Sichman     | d009    |</div><div class="line">| Uri Juneja        | d009    |</div><div class="line">| Mohammed Pleszkun | d009    |</div><div class="line">| Chiranjit Kuzuoka | d009    |</div><div class="line">| Ronghao Morrow    | d009    |</div><div class="line">+-------------------+---------+</div><div class="line">5 rows in set (0.00 sec)</div><div class="line"></div><div class="line">#18.计算每个部门的平均工资和工资总和</div><div class="line">mysql&gt; select de.dept_no,sum(s.salary),avg(s.salary) from employees e,dept_emp de,salaries s where e.emp_no = de.emp_no and e.emp_no = s.emp_no group by de.dept_no;</div><div class="line">+---------+---------------+---------------+</div><div class="line">| dept_no | sum(s.salary) | avg(s.salary) |</div><div class="line">+---------+---------------+---------------+</div><div class="line">| d001    |   13725425266 |    71913.2000 |</div><div class="line">| d002    |   11650834677 |    70489.3649 |</div><div class="line">| d003    |    9363811425 |    55574.8794 |</div><div class="line">| d004    |   41554438942 |    59605.4825 |</div><div class="line">| d005    |   48179456393 |    59478.9012 |</div><div class="line">| d006    |   10865203635 |    57251.2719 |</div><div class="line">| d007    |   40030089342 |    80667.6058 |</div><div class="line">| d008    |   11969730427 |    59665.1817 |</div><div class="line">| d009    |   13143639841 |    58770.3665 |</div><div class="line">+---------+---------------+---------------+</div><div class="line">9 rows in set (7.14 sec)</div><div class="line"></div><div class="line">#19.查询每个部门的每个职位的雇员数</div><div class="line">mysql&gt; select de.dept_no,t.title,sum(e.emp_no) from employees e,dept_emp de,titles t where e.emp_no = de.emp_no and e.emp_no = t.emp_no group by de.dept_no,t.title limit 5;</div><div class="line">+---------+--------------+---------------+</div><div class="line">| dept_no | title        | sum(e.emp_no) |</div><div class="line">+---------+--------------+---------------+</div><div class="line">| d001    | Manager      |        220061 |</div><div class="line">| d001    | Senior Staff |    3561178455 |</div><div class="line">| d001    | Staff        |    4142508539 |</div><div class="line">| d002    | Manager      |        220199 |</div><div class="line">| d002    | Senior Staff |    3090249864 |</div><div class="line">+---------+--------------+---------------+</div><div class="line">5 rows in set (3.13 sec)</div><div class="line"></div><div class="line">#20.请算出employees表中所有雇员的平均工资</div><div class="line">mysql&gt; select avg(s.salary) from employees e,salaries s where e.emp_no = s.emp_no;</div><div class="line">+---------------+</div><div class="line">| avg(s.salary) |</div><div class="line">+---------------+</div><div class="line">|    63810.7448 |</div><div class="line">+---------------+</div><div class="line">1 row in set (4.48 sec)</div><div class="line"></div><div class="line">#21.请查询出employees表中的最低工资的员工信息</div><div class="line">mysql&gt; select concat(first_name,&apos; &apos;,last_name) name from employees e,salaries s where e.emp_no = s.emp_no and s.salary = (selecct min(s.salary) salary from salaries s);</div><div class="line">+--------------+</div><div class="line">| name         |</div><div class="line">+--------------+</div><div class="line">| Olivera Baek |</div><div class="line">+--------------+</div><div class="line">1 row in set (1.99 sec)</div><div class="line"></div><div class="line">#22.请计算出每个部门的平均工资、最高工资和最低工资</div><div class="line">mysql&gt; select de.dept_no,avg(s.salary),max(s.salary),min(s.salary) from employees e,dept_emp de,salaries s where e.emp_no = de.emp_no and e.emp_no = s.emp_no group by de.dept_no;</div><div class="line">+---------+---------------+---------------+---------------+</div><div class="line">| dept_no | avg(s.salary) | max(s.salary) | min(s.salary) |</div><div class="line">+---------+---------------+---------------+---------------+</div><div class="line">| d001    |    71913.2000 |        145128 |         39127 |</div><div class="line">| d002    |    70489.3649 |        142395 |         38812 |</div><div class="line">| d003    |    55574.8794 |        141953 |         38735 |</div><div class="line">| d004    |    59605.4825 |        138273 |         38623 |</div><div class="line">| d005    |    59478.9012 |        144434 |         38849 |</div><div class="line">| d006    |    57251.2719 |        132103 |         38786 |</div><div class="line">| d007    |    80667.6058 |        158220 |         39169 |</div><div class="line">| d008    |    59665.1817 |        130211 |         38851 |</div><div class="line">| d009    |    58770.3665 |        144866 |         38836 |</div><div class="line">+---------+---------------+---------------+---------------+</div><div class="line">9 rows in set (7.06 sec)</div><div class="line"></div><div class="line">#23.查询薪水发放时间在1986-06-26 ~ 1987-06-25薪水高于46145号雇员并且工种与他相同的雇员情况。</div><div class="line">select e.*  from employees e,titles t,salaries s  where e.emp_no = t.emp_no  and e.emp_no = t.emp_no  and t.title = (select title from titles where emp_no = 46135)  and s.salary &gt; (select s.salary from salaries s where s.from_date &gt; str_to_date(&apos;1986-06-26&apos;,&apos;%Y-%m-%d&apos;) and s.to_date &lt; str_to_date(&apos;1987-06-2 25&apos;,&apos;%Y-%m-%d&apos;) and s.emp_no = &apos;46135&apos;)  and s.from_date &gt; str_to_date(&apos;1986-06-26&apos;,&apos;%Y-%m-%d&apos;) and s.to_date &lt; str_to_date(&apos;1987-06-2 25&apos;,&apos;%Y-%m-%d&apos;) limit 10;</div><div class="line">+--------+------------+------------+------------+--------+------------+</div><div class="line">| emp_no | birth_date | first_name | last_name  | gender | hire_date  |</div><div class="line">+--------+------------+------------+------------+--------+------------+</div><div class="line">|  10004 | 1954-05-01 | Chirstian  | Koblick    | M      | 1986-12-01 |</div><div class="line">|  10009 | 1952-04-19 | Sumant     | Peac       | F      | 1985-02-18 |</div><div class="line">|  10010 | 1963-06-01 | Duangkaew  | Piveteau   | F      | 1989-08-24 |</div><div class="line">|  10012 | 1960-10-04 | Patricio   | Bridgland  | M      | 1992-12-18 |</div><div class="line">|  10014 | 1956-02-12 | Berni      | Genin      | M      | 1987-03-11 |</div><div class="line">|  10018 | 1954-06-19 | Kazuhide   | Peha       | F      | 1987-04-03 |</div><div class="line">|  10020 | 1952-12-24 | Mayuko     | Warwick    | M      | 1991-01-26 |</div><div class="line">|  10022 | 1952-07-08 | Shahaf     | Famili     | M      | 1995-08-22 |</div><div class="line">|  10023 | 1953-09-29 | Bojan      | Montemayor | F      | 1989-12-17 |</div><div class="line">|  10026 | 1953-04-03 | Yongqiao   | Berztiss   | M      | 1995-03-20 |</div><div class="line">+--------+------------+------------+------------+--------+------------+</div><div class="line">10 rows in set, 2 warnings (0.05 sec)</div><div class="line"></div><div class="line"></div><div class="line">#24.查询工资在10000到50000之间的雇员所在部门的所有人员的信息。</div><div class="line">mysql&gt; select e.*,d.dept_no,d.dept_name from employees e,dept_emp de,departments d where e.emp_no = de.emp_no and de.dept_no =d.dept_no and e.emp_no in (select distinct s.emp_no from salaries s where s.salary between 10000 and 50000) limit 10;</div><div class="line">+--------+------------+-------------+-----------+--------+------------+---------+------------------+</div><div class="line">| emp_no | birth_date | first_name  | last_name | gender | hire_date  | dept_no | dept_name        |</div><div class="line">+--------+------------+-------------+-----------+--------+------------+---------+------------------+</div><div class="line">|  10011 | 1953-11-07 | Mary        | Sluis     | F      | 1990-01-22 | d009    | Customer Service |</div><div class="line">|  10038 | 1960-07-20 | Huan        | Lortz     | M      | 1989-09-20 | d009    | Customer Service |</div><div class="line">|  10049 | 1961-04-24 | Basil       | Tramer    | F      | 1992-05-04 | d009    | Customer Service |</div><div class="line">|  10098 | 1961-09-23 | Sreekrishna | Servieres | F      | 1985-05-13 | d009    | Customer Service |</div><div class="line">|  10112 | 1963-08-13 | Yuichiro    | Swick     | F      | 1985-10-08 | d009    | Customer Service |</div><div class="line">|  10115 | 1964-12-25 | Chikara     | Rissland  | M      | 1986-01-23 | d009    | Customer Service |</div><div class="line">|  10126 | 1954-08-07 | Kayoko      | Valtorta  | M      | 1985-09-08 | d009    | Customer Service |</div><div class="line">|  10128 | 1958-02-15 | Babette     | Lamba     | F      | 1988-06-06 | d009    | Customer Service |</div><div class="line">|  10137 | 1959-07-30 | Maren       | Hutton    | M      | 1985-02-18 | d009    | Customer Service |</div><div class="line">|  10154 | 1957-01-17 | Abdulah     | Thibadeau | F      | 1990-12-12 | d009    | Customer Service |</div><div class="line">+--------+------------+-------------+-----------+--------+------------+---------+------------------+</div><div class="line">10 rows in set (1.28 sec)</div><div class="line"></div><div class="line">#25.查询出在薪水发放时间在1986-06-26 ~ 1987-06-25的员工信息</div><div class="line">###（工号，姓名，性别，薪水，职位）</div><div class="line">mysql&gt; select e.emp_no,concat(e.first_name,&quot; &quot;,e.last_name) name,e.gender,s.salary,t.title from employees e,salaries s,titles t where e.emp_no = s.emp_no and e.emp_no = t.emp_no and s.from_date &gt; str_to_date(&apos;1986-06-26&apos;,&apos;%Y-%m-%d&apos;) and s.to_date &lt; str_to_date(&apos;1987-06-2 25&apos;,&apos;%Y-%m-%d&apos;) limit 10;</div><div class="line">+--------+-------------------+--------+--------+-----------------+</div><div class="line">| emp_no | name              | gender | salary | title           |</div><div class="line">+--------+-------------------+--------+--------+-----------------+</div><div class="line">|  13543 | Tua Garigliano    | F      |  78646 | Staff           |</div><div class="line">|  13589 | Arfst Munck       | F      |  44306 | Staff           |</div><div class="line">|  14085 | Jiafu Constantine | F      |  43575 | Staff           |</div><div class="line">|  14613 | Kien Herath       | M      |  54124 | Staff           |</div><div class="line">|  19083 | Nobuyoshi Asmuth  | M      |  40000 | Engineer        |</div><div class="line">|  19135 | Leaf Soicher      | M      |  40000 | Senior Engineer |</div><div class="line">|  19761 | Vasiliy Niizuma   | M      |  65098 | Staff           |</div><div class="line">|  19769 | Bezalel Holburn   | M      |  53118 | Engineer        |</div><div class="line">|  22892 | Giao Monkewich    | M      |  79554 | Senior Staff    |</div><div class="line">|  24101 | Yakichi Manderick | F      |  45092 | Engineer        |</div><div class="line">+--------+-------------------+--------+--------+-----------------+</div><div class="line">10 rows in set, 1 warning (0.07 sec)</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> sql </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux查看日志文件常用命令]]></title>
      <url>/20170407-linux%E6%9F%A5%E7%9C%8B%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>linux查看日志文件内容命令tail、cat、tac、head、echo</p><p>tail -f test.log</p><p>你会看到屏幕不断有内容被打印出来. 这时候中断第一个进程Ctrl-C,</p><p>cat -n hisen.log | grep ‘907’</p><p>在文件当中查找指定的内容，这里是查询：907</p><hr><p>linux 如何显示一个文件的某几行(中间几行)</p><p>从第3000行开始，显示1000行。即显示3000~3999行<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat filename | tail -n +3000 | head -n 1000</div></pre></td></tr></table></figure><p></p><p>显示1000行到3000行<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat filename| head -n 3000 | tail -n +1000</div></pre></td></tr></table></figure><p></p><p>*注意两种方法的顺序<br>分解：</p><ol><li>tail -n 1000：显示最后1000行</li><li>tail -n +1000：从1000行开始显示，显示1000行以后的</li><li>head -n 1000：显示前面1000行</li></ol><p>用sed命令<br>sed -n ‘5,10p’ filename 这样你就可以只查看文件的第5行到第10行。</p><p>例：cat mylog.log | tail -n 1000 #输出mylog.log 文件最后一千行</p><hr><p>cat主要有三大功能：</p><p>1.一次显示整个文件。$ cat filename</p><p>2.从键盘创建一个文件。$ cat &gt; filename</p><p>只能创建新文件,不能编辑已有文件.</p><p>3.将几个文件合并为一个文件： $cat file1 file2 &gt; file</p><p>参数：</p><p>-n 或 –number 由 1 开始对所有输出的行数编号</p><p>-b 或 –number-nonblank 和 -n 相似，只不过对于空白行不编号</p><p>-s 或 –squeeze-blank 当遇到有连续两行以上的空白行，就代换为一行的空白行</p><p>-v 或 –show-nonprinting</p><p>例：</p><p>把 textfile1 的档案内容加上行号后输入 textfile2 这个档案里<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat -n textfile1 &gt; textfile2</div></pre></td></tr></table></figure><p></p><p>把 textfile1 和 textfile2 的档案内容加上行号（空白行不加）之后将内容附加到 textfile3 里。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat -b textfile1 textfile2 &gt;&gt; textfile3</div></pre></td></tr></table></figure><p></p><p>把test.txt文件扔进垃圾箱，赋空值test.txt<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /dev/null &gt; /etc/test.txt</div></pre></td></tr></table></figure><p></p><p>注意：&gt;意思是创建，&gt;&gt;是追加。千万不要弄混了。</p><hr><p>tac (反向列示)</p><p>tac 是将 cat 反写过来，所以他的功能就跟 cat 相反， cat 是由第一行到最后一行连续显示在萤幕上，</p><p>而 tac 则是由最后一行到第一行反向在萤幕上显示出来！</p><hr><p>在Linux中echo命令用来在标准输出上显示一段字符，比如：<br>echo “the echo command test!”</p><p>这个就会输出“the echo command test!”这一行文字！</p><p>echo “the echo command test!”&gt;a.sh</p><p>这个就会在a.sh文件中输出“the echo command test!”这一行文字！</p><p>该命令的一般格式为： echo [ -n ] 字符串其中选项n表示输出文字后不换行；字符串能加引号，也能不加引号。</p><p>用echo命令输出加引号的字符串时，将字符串原样输出；</p><p>用echo命令输出不加引号的字符串时，将字符串中的各个单词作为字符串输出，各字符串之间用一个空格分割。</p><h2 id="一些实例"><a href="#一些实例" class="headerlink" title="一些实例"></a>一些实例</h2><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">#在整个文件搜索含有907的内容</div><div class="line">hisen@ubuntu:~/dl$ cat -n hisen.log | grep &apos;907&apos;</div><div class="line">    25	[2017-04-07 03:49:04,907] Artifact ssm_study:war exploded: Art</div><div class="line">    26	[2017-04-07 03:49:04,907] Artifact ssm_study:war exploded: Dep</div><div class="line"></div><div class="line">#从第3行开始,显示10行 即：3~12 并且显示行号</div><div class="line">hisen@ubuntu:~/dl$ cat -n hisen.log | tail -n +3 | head -n 10</div><div class="line">     3	07-Apr-2017 15:48:50.072 信息 [main] org.apache.coyote.Abstrac</div><div class="line">     4	07-Apr-2017 15:48:50.137 信息 [main] Using a shared selector f</div><div class="line">     5	07-Apr-2017 15:48:50.172 测试 [main] Initializing ProtocolHand</div><div class="line">     6	07-Apr-2017 15:48:50.186 信息 [main] Using a shared selector f</div><div class="line">     7	07-Apr-2017 15:48:50.187 你猜 [main] load Initialization proce</div><div class="line">     8	07-Apr-2017 15:48:50.261 信息 [main] StandardService.startInte</div><div class="line">     9	07-Apr-2017 15:48:50.261 信息 [main] Servlet Engine: Apache To</div><div class="line">    10	07-Apr-2017 15:48:50.293 信息 [main] Starting ProtocolHandler</div><div class="line">    11	07-Apr-2017 15:48:50.318 哪里 [main] ProtocolHandler [ajp-nio-</div><div class="line">    12	07-Apr-2017 15:48:50.328 信息 [main] start Server startup in 1</div><div class="line">#显示10行前三行</div><div class="line">hisen@ubuntu:~/dl$ cat -n hisen.log | head -n +10 | tail -n 3</div><div class="line">     8	07-Apr-2017 15:48:50.261 信息 [main] StandardService.startInte</div><div class="line">     9	07-Apr-2017 15:48:50.261 信息 [main] Servlet Engine: Apache To</div><div class="line">    10	07-Apr-2017 15:48:50.293 信息 [main] Starting ProtocolHandler</div><div class="line"></div><div class="line">#显示3-10行</div><div class="line">hisen@ubuntu:~/dl$ cat -n hisen.log | head -n 10 | tail -n +3</div><div class="line">     3	07-Apr-2017 15:48:50.072 信息 [main] org.apache.coyote.Abstrac</div><div class="line">     4	07-Apr-2017 15:48:50.137 信息 [main] Using a shared selector f</div><div class="line">     5	07-Apr-2017 15:48:50.172 测试 [main] Initializing ProtocolHand</div><div class="line">     6	07-Apr-2017 15:48:50.186 信息 [main] Using a shared selector f</div><div class="line">     7	07-Apr-2017 15:48:50.187 你猜 [main] load Initialization proce</div><div class="line">     8	07-Apr-2017 15:48:50.261 信息 [main] StandardService.startInte</div><div class="line">     9	07-Apr-2017 15:48:50.261 信息 [main] Servlet Engine: Apache To</div><div class="line">    10	07-Apr-2017 15:48:50.293 信息 [main] Starting ProtocolHandler</div><div class="line"></div><div class="line">#显示倒数第二行</div><div class="line">hisen@ubuntu:~/dl$ cat -n hisen.log | tail -n 2</div><div class="line">    25	[2017-04-07 03:49:04,907] Artifact ssm_study:war exploded: Art</div><div class="line">    26	[2017-04-07 03:49:04,907] Artifact ssm_study:war exploded: Dep</div><div class="line"></div><div class="line">#从24行开始，显示到最后</div><div class="line">hisen@ubuntu:~/dl$ cat -n hisen.log | tail -n +24</div><div class="line">    24	07-Apr-2017 15:49:04.585 信息 during time.</div><div class="line">    25	[2017-04-07 03:49:04,907] Artifact ssm_study:war exploded: Art</div><div class="line">    26	[2017-04-07 03:49:04,907] Artifact ssm_study:war exploded: Dep</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo next主题添加本地搜索 - 不使用第三方服务]]></title>
      <url>/20170407-Hexo%20next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2%20-%20%E4%B8%8D%E4%BD%BF%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E6%9C%8D%E5%8A%A1/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>之前安装过第三方的搜索服务，贼蛋疼。都不免费了。</p><p>也有自己安装插件，然后写js的，麻烦</p><p>后来找到两个插件，安装之后就搞定了</p><p>感谢开发的作者！！！</p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>记得要在站点根目录执行下面的安装操作</p><p>1.安装 hexo-generator-search<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-searchdb --save</div></pre></td></tr></table></figure><p></p><p>2.安装 hexo-generator-searchdb<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-searchdb --save</div></pre></td></tr></table></figure><p></p><a id="more"></a><h2 id="启用搜索"><a href="#启用搜索" class="headerlink" title="启用搜索"></a>启用搜索</h2><p>编辑站点文件<strong>_config.yml</strong>，添加以下内容开启搜索<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">search:</div><div class="line">  path: search.xml</div><div class="line">  field: post</div><div class="line">  format: html</div><div class="line">  limit: 10000</div></pre></td></tr></table></figure><p></p><p>编辑主题文件<strong>_config.yml</strong>，启用本地搜索功能：</p><pre><code># Local search
local_search:
  enable: true
</code></pre><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p><img src="http://wx2.sinaimg.cn/mw690/b2e389b6ly1fedxu45zqcj20p10i4409.jpg"></p><h2 id="小缺点"><a href="#小缺点" class="headerlink" title="小缺点"></a>小缺点</h2><p>第一次点击搜索的时候反应会比较慢</p><p>因为是要加载一个xml文件</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[DBeaver-连接全部数据库工具-DBeaver快捷键]]></title>
      <url>/20170402-DBeaver-%E8%BF%9E%E6%8E%A5%E5%85%A8%E9%83%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B7%A5%E5%85%B7-DBeaver%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>Windows、Linux、Mac OS X多个平台都可以用</p><p>据我观察这个数据库可视化工具很不错，基于java</p><p>以各种驱动来连接数据库，也就是说java支持的数据库都可以用他连接</p><p>挺好用的，免费！！！</p><p>安装之后新建连接，选择你要链接的数据库，配置一下就好了。</p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="http://dbeaver.jkiss.org/download/" target="_blank">官网下载地址</a></p><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#Shift + Home选中当前光标到行首</div><div class="line">#Shift + End选中当前光标到行尾</div><div class="line">#Shift + ↑/↓/←/→ 移动光标并且选中</div><div class="line">#Alt + X 执行选中的sql</div><div class="line">#Ctrl + Enter 执行当前光标所在行的sql</div><div class="line">#Ctrl + Alt + F 格式化SQL（file -&gt; properties -&gt; +SQL Editor -&gt; SQL formatting）</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> sql </category>
            
        </categories>
        
        
        <tags>
            
            <tag> sql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mysql数据库安装官方自带employees测试库]]></title>
      <url>/20170401-mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85%E5%AE%98%E6%96%B9%E8%87%AA%E5%B8%A6employees%E6%B5%8B%E8%AF%95%E8%A1%A8/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>mysql官方是有一个自带的数据库，名为：Employees Sample Database</p><p>官网介绍：<a href="https://dev.mysql.com/doc/employee/en/" target="_blank">Employees Sample Database</a></p><table><thead><tr><th style="text-align:left">表名</th><th style="text-align:left">中文</th></tr></thead><tbody><tr><td style="text-align:left">department</td><td style="text-align:left">部门表</td></tr><tr><td style="text-align:left">dept_emp</td><td style="text-align:left">部门员工任职期表(按部门&amp;时期)</td></tr><tr><td style="text-align:left">dept_manager</td><td style="text-align:left">部门经理任职期表(按时期)</td></tr><tr><td style="text-align:left">employees</td><td style="text-align:left">员工详情表</td></tr><tr><td style="text-align:left">salaries</td><td style="text-align:left">员工薪资表(按时期)</td></tr><tr><td style="text-align:left">title</td><td style="text-align:left">员工职称表(按时期)</td></tr></tbody></table><p><img src="http://wx2.sinaimg.cn/mw690/b2e389b6ly1fe7b71pwupj20m80muabj.jpg"><br>导入的操作过程，在ubuntu上进行操作<br><a id="more"></a></p><h2 id="一、导入数据库操作过程"><a href="#一、导入数据库操作过程" class="headerlink" title="一、导入数据库操作过程"></a>一、导入数据库操作过程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line">#ubuntu apt-get 安装的mysql默认的配置文件</div><div class="line">#添加一行：default-storage-engine=InnoDB</div><div class="line">hisen@ubuntu:/$ sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf</div><div class="line">#获取root权限</div><div class="line">hisen@ubuntu:/var/lib$ su</div><div class="line">Password: </div><div class="line">#进数据库目录</div><div class="line">root@ubuntu:# cd /var/lib/mysql</div><div class="line">#删除两个文件</div><div class="line">root@ubuntu:/var/lib/mysql# rm ib_logfile0 </div><div class="line">root@ubuntu:/var/lib/mysql# rm ib_logfile1</div><div class="line">#重启数据库</div><div class="line">root@ubuntu:/# service mysql restart</div><div class="line">#下载Employees database</div><div class="line">hisen@ubuntu:~/dl$ wget https://codeload.github.com/datacharmer/test_db/zip/master</div><div class="line">#解压</div><div class="line">hisen@ubuntu:~/dl$ unzip master</div><div class="line">#查看</div><div class="line">hisen@ubuntu:~/dl$ ll</div><div class="line">total 35840</div><div class="line">drwxrwxr-x  3 hisen hisen     4096 Apr  1 16:50 ./</div><div class="line">drwxr-xr-x 10 hisen hisen     4096 Apr  1 16:40 ../</div><div class="line">-rw-rw-r--  1 hisen hisen 36687570 Apr  1 16:30 master</div><div class="line">drwxrwxr-x  4 hisen hisen     4096 Oct 14  2015 test_db-master/</div><div class="line">#进目录</div><div class="line">hisen@ubuntu:~/dl$ cd test_db-master/</div><div class="line">#导入数据库</div><div class="line">hisen@ubuntu:~/dl/test_db-master$ mysql -u root -p &lt; employees.sql</div><div class="line">Enter password: </div><div class="line">INFO</div><div class="line">CREATING DATABASE STRUCTURE</div><div class="line">INFO</div><div class="line">storage engine: InnoDB</div><div class="line">INFO</div><div class="line">LOADING departments</div><div class="line">INFO</div><div class="line">LOADING employees</div><div class="line">INFO</div><div class="line">LOADING dept_emp</div><div class="line">INFO</div><div class="line">LOADING dept_manager</div><div class="line">INFO</div><div class="line">LOADING titles</div><div class="line">INFO</div><div class="line">LOADING salaries</div><div class="line">data_load_time_diff</div><div class="line">00:01:11</div><div class="line">#导入成功</div><div class="line">#验证是否导入成功</div><div class="line">hisen@ubuntu:~/dl/test_db-master$ mysql -u root -p &lt; test_employees_md5.sql</div><div class="line">Enter password: </div><div class="line">INFO</div><div class="line">TESTING INSTALLATION</div><div class="line">table_name	expected_records	expected_crc</div><div class="line">employees	300024	4ec56ab5ba37218d187cf6ab09ce1aa1</div><div class="line">departments	9	d1af5e170d2d1591d776d5638d71fc5f</div><div class="line">dept_manager	24	8720e2f0853ac9096b689c14664f847e</div><div class="line">dept_emp	331603	ccf6fe516f990bdaa49713fc478701b7</div><div class="line">titles	443308	bfa016c472df68e70a03facafa1bc0a8</div><div class="line">salaries	2844047	fd220654e95aea1b169624ffe3fca934</div><div class="line">table_name	found_records   	found_crc</div><div class="line">employees	300024	4ec56ab5ba37218d187cf6ab09ce1aa1</div><div class="line">departments	9	d1af5e170d2d1591d776d5638d71fc5f</div><div class="line">dept_manager	24	8720e2f0853ac9096b689c14664f847e</div><div class="line">dept_emp	331603	ccf6fe516f990bdaa49713fc478701b7</div><div class="line">titles	443308	bfa016c472df68e70a03facafa1bc0a8</div><div class="line">salaries	2844047	fd220654e95aea1b169624ffe3fca934</div><div class="line">table_name	records_match	crc_match</div><div class="line">employees	OK	ok</div><div class="line">departments	OK	ok</div><div class="line">dept_manager	OK	ok</div><div class="line">dept_emp	OK	ok</div><div class="line">titles	OK	ok</div><div class="line">salaries	OK	ok</div><div class="line">computation_time</div><div class="line">00:00:22</div><div class="line">summary	result</div><div class="line">CRC	OK</div><div class="line">count	OK</div></pre></td></tr></table></figure><h2 id="二、数据库练习"><a href="#二、数据库练习" class="headerlink" title="二、数据库练习"></a>二、数据库练习</h2><p><strong>练习题</strong>：<a href="http://hisen.me/20170410-Mysql%20Employees%20%20Database%E7%BB%83%E4%B9%A0%E9%A2%98&%E7%AD%94%E6%A1%88/" target="_blank"><strong>点击查看练习题</strong></a></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> mysql </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[su  Authentication failure]]></title>
      <url>/20170401-su%20%20Authentication%20failure/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>想要获取root权限，提示如下<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hisen@ubuntu:/var/lib$ su</div><div class="line">Password: </div><div class="line">su: Authentication failure</div></pre></td></tr></table></figure><p></p><p>解决办法<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">hisen@ubuntu:$ sudo passwd root</div><div class="line">Enter new UNIX password: </div><div class="line">Retype new UNIX password: </div><div class="line">passwd: password updated successfully</div><div class="line">hisen@ubuntu:$ su</div><div class="line">Password: </div><div class="line">root@ubuntu:# cd mysql</div></pre></td></tr></table></figure><p></p><p>重新设置一下密码即可，我这边装的时候设置的用户是：hisen</p><p>刚刚重新设置的密码就是你装系统的时候设置的用户密码。</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IDEA设置intellij-java-google-style]]></title>
      <url>/20170401-IDEA%E8%AE%BE%E7%BD%AEintellij-java-google-style/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>一直想弄个格式化代码，后来发现很多人用谷歌的，于是也来整一份</p><p>保存一份google code的xml，链接有最新的<br><a href="https://github.com/google/styleguide/blob/gh-pages/intellij-java-google-style.xml" target="_blank">intellij-java-google-style.xml</a><br>设置方法如下：Setting -&gt; Editor -&gt; Code Stytle -&gt; Java<br><img src="http://wx3.sinaimg.cn/mw690/b2e389b6ly1fe713rpzl2j20tq0h30v7.jpg"><br>最后一步就选择你存放之前保存的xml</p><p>然后就大功告成，来个对比<br>前<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">package com.hisen.json;</div><div class="line"></div><div class="line">import com.alibaba.fastjson.JSON;</div><div class="line">import com.alibaba.fastjson.JSONObject;</div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by hisenyuan on 2017/3/23 at 18:02.</div><div class="line"> */</div><div class="line">public class test &#123;</div><div class="line">    public static void main(String[] args) &#123;String s = &quot;&#123;&apos;A&apos;:&apos;a&apos;&#125;&quot;;</div><div class="line">        JSONObject obj= JSON.parseObject(s);</div><div class="line">        System.out.println(obj.get(&quot;A&quot;));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>后<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">package com.hisen.json;</div><div class="line"></div><div class="line">import com.alibaba.fastjson.JSON;</div><div class="line">import com.alibaba.fastjson.JSONObject;</div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by hisenyuan on 2017/3/23 at 18:02.</div><div class="line"> */</div><div class="line">public class test &#123;</div><div class="line"></div><div class="line">  public static void main(String[] args) &#123;</div><div class="line">    String s = &quot;&#123;&apos;A&apos;:&apos;a&apos;&#125;&quot;;</div><div class="line">    JSONObject obj = JSON.parseObject(s);</div><div class="line">    System.out.println(obj.get(&quot;A&quot;));</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> idea </category>
            
        </categories>
        
        
        <tags>
            
            <tag> intellij-java-google-style </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java判断全角半角字符以及相互转换]]></title>
      <url>/20170401-Java%E5%88%A4%E6%96%AD%E5%85%A8%E8%A7%92%E5%8D%8A%E8%A7%92%E5%AD%97%E7%AC%A6%E4%BB%A5%E5%8F%8A%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>在计算机屏幕上，一个汉字要占两个英文字符的位置，人们把一个英文字符所占的位置称为”半角”，</p><p>相对地把一个汉字所占的位置称为”全角”。在汉字输入时，系统提供”半角”和”全角”两种不同的输入状态，</p><p>但是对于英文字母、符号和数字这些通用字符就不同于汉字，在半角状态它们被作为英文字符处理；</p><p>而在全角状态，它们又可作为中文字符处理。</p><p>半角和全角切换方法：单击输入法工具条上的按钮或按键盘上的Shift+Space键来切换。</p><p>1、全角：指一个字符占用两个标准字符位置。</p><p>汉字字符和规定了全角的英文字符及国标GB2312-80中的图形符号和特殊字符都是全角字符。一般的系统命令是不用全角字符的，只是在作文字处理时才会使用全角字符。</p><hr><p>2、半角：指一字符占用一个标准的字符位置。</p><p>通常的英文字母、数字键、符号键都是半角的，半角的显示内码都是一个字节。在系统内部，以上三种字符是作为基本代码处理的，所以用户输入命令和参数时一般都使用半角。</p><hr><p>3、全角与半角各在什么情况下使用？</p><p>全角占两个字节，半角占一个字节。</p><p>半角全角主要是针对标点符号来说的，全角标点占两个字节，半角占一个字节，而不管是半角还是全角，汉字都还是要占两个字节。</p><p>在编程序的源代码中只能使用半角标点（不包括字符串内部的数据）</p><p>在不支持汉字等语言的计算机上只能使用半角标点（其实这种情况根本就不存在半角全角的概念）</p><p>对于大多数字体来说，全角看起来比半角大，当然这不是本质区别了。</p><hr><p>4、全角和半角的区别<br>全角就是字母和数字等与汉字占等宽位置的字。半角就是ASCII方式的字符，</p><p>在没有汉字输入法起做用的时候输入的字母数字和字符都是半角的。</p><p>在汉字输入法出现的时候，输入的字母数字默认为半角，但是标点则是默认为全角，</p><p>可以通过鼠标点击输入法工具条上的相应按钮来改变。</p><hr><p>5、关于“全角”和“半角”：</p><p>全角：是指中GB2312-80（《信息交换用汉字编码字符集·基本集》）中的各种符号。</p><p>半角：是指英文件ASCII码中的各种符号。</p><p>全角状态下字母、数字符号等都会占两个字节的位置，也就是一个汉字那么宽，半角状态下，</p><p>字母数字符号一般会占一个字节，也就是半个汉字的位置，全角半角对汉字没有影响。</p><p>有两种方式可以判断:</p><p>1:通过正则表达式来进行判断 [^\x00-\xff]</p><p>2: 通过字符编码的范围进行判断.</p><p>通过打印所有的字符发现：</p><ol><li>半角字符是从33开始到126结束</li><li>与半角字符对应的全角字符是从65281开始到65374结束</li><li>其中半角的空格是32.对应的全角空格是12288</li><li>半角和全角的关系很明显,除空格外的字符偏移量是65248(65281-33 = 65248)</li></ol><p>具体的代码如下：<br><a id="more"></a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div></pre></td><td class="code"><pre><div class="line">package com.hisen.String;</div><div class="line"></div><div class="line">/**</div><div class="line"> * 半角字符和全角字符的转换 以及 判断</div><div class="line"> * Created by hisenyuan on 2017/4/1 at 10:37.</div><div class="line"> */</div><div class="line">public class FullHalf &#123;</div><div class="line">    /**</div><div class="line">     * ASCII表中可见字符从!开始，偏移位值为33(Decimal)</div><div class="line">     */</div><div class="line">    static final char DBC_CHAR_START = 33; // 半角!</div><div class="line"></div><div class="line">    /**</div><div class="line">     * ASCII表中可见字符到~结束，偏移位值为126(Decimal)</div><div class="line">     */</div><div class="line">    static final char DBC_CHAR_END = 126; // 半角~</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 全角对应于ASCII表的可见字符从！开始，偏移值为65281</div><div class="line">     */</div><div class="line">    static final char SBC_CHAR_START = 65281; // 全角！</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 全角对应于ASCII表的可见字符到～结束，偏移值为65374</div><div class="line">     */</div><div class="line">    static final char SBC_CHAR_END = 65374; // 全角～</div><div class="line"></div><div class="line">    /**</div><div class="line">     * ASCII表中除空格外的可见字符与对应的全角字符的相对偏移</div><div class="line">     */</div><div class="line">    static final int CONVERT_STEP = 65248; // 全角半角转换间隔</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 全角空格的值，它没有遵从与ASCII的相对偏移，必须单独处理</div><div class="line">     */</div><div class="line">    static final char SBC_SPACE = 12288; // 全角空格 12288</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 半角空格的值，在ASCII中为32(Decimal)</div><div class="line">     */</div><div class="line">    static final char DBC_SPACE = &apos; &apos;; // 半角空格</div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        String s = &quot;123456&quot;;</div><div class="line">        //半角转换成全角字符</div><div class="line">        String s1 = bj2qj(s);</div><div class="line">        //全角转换成半角</div><div class="line">        String s2 = qj2bj(s1);</div><div class="line">        System.out.println(&quot;全角：&quot;+s1 +&quot; -&gt; 半角：&quot;+s2);</div><div class="line">        System.out.println(&quot;--------------------------&quot;);</div><div class="line">        String fh = s1+s2;</div><div class="line">        //判断全角还是半角</div><div class="line">        fullOrHalf(fh);</div><div class="line">        //打印ASCII表中所有字符</div><div class="line">        printAllChar();</div><div class="line">    &#125;</div><div class="line">    /**</div><div class="line">     * &lt;PRE&gt;</div><div class="line">     * 半角字符-&gt;全角字符转换</div><div class="line">     * 只处理空格，!到˜之间的字符，忽略其他</div><div class="line">     * &lt;/PRE&gt;</div><div class="line">     */</div><div class="line">    private static String bj2qj(String src) &#123;</div><div class="line">        if (src == null) &#123;</div><div class="line">            return src;</div><div class="line">        &#125;</div><div class="line">        StringBuilder buf = new StringBuilder(src.length());</div><div class="line">        char[] ca = src.toCharArray();</div><div class="line">        for (int i = 0; i &lt; ca.length; i++) &#123;</div><div class="line">            if (ca[i] == DBC_SPACE) &#123; // 如果是半角空格，直接用全角空格替代</div><div class="line">                buf.append(SBC_SPACE);</div><div class="line">            &#125; else if ((ca[i] &gt;= DBC_CHAR_START) &amp;&amp; (ca[i] &lt;= DBC_CHAR_END)) &#123; // 字符是!到~之间的可见字符</div><div class="line">                buf.append((char) (ca[i] + CONVERT_STEP));</div><div class="line">            &#125; else &#123; // 不对空格以及ascii表中其他可见字符之外的字符做任何处理</div><div class="line">                buf.append(ca[i]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return buf.toString();</div><div class="line">    &#125;</div><div class="line">    /**</div><div class="line">     * &lt;PRE&gt;</div><div class="line">     * 全角字符-&gt;半角字符转换</div><div class="line">     * 只处理全角的空格，全角！到全角～之间的字符，忽略其他</div><div class="line">     * &lt;/PRE&gt;</div><div class="line">     */</div><div class="line">    public static String qj2bj(String src) &#123;</div><div class="line">        if (src == null) &#123;</div><div class="line">            return src;</div><div class="line">        &#125;</div><div class="line">        StringBuilder buf = new StringBuilder(src.length());</div><div class="line">        char[] ca = src.toCharArray();</div><div class="line">        for (int i = 0; i &lt; src.length(); i++) &#123;</div><div class="line">            if (ca[i] &gt;= SBC_CHAR_START &amp;&amp; ca[i] &lt;= SBC_CHAR_END) &#123; // 如果位于全角！到全角～区间内</div><div class="line">                buf.append((char) (ca[i] - CONVERT_STEP));</div><div class="line">            &#125; else if (ca[i] == SBC_SPACE) &#123; // 如果是全角空格</div><div class="line">                buf.append(DBC_SPACE);</div><div class="line">            &#125; else &#123; // 不处理全角空格，全角！到全角～区间外的字符</div><div class="line">                buf.append(ca[i]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return buf.toString();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 使用正则表达式判断字符是否为全角</div><div class="line">     * @param str</div><div class="line">     */</div><div class="line">    public static void fullOrHalf(String str)&#123;</div><div class="line">        char[] chars = str.toCharArray();</div><div class="line">        for (int i = 0; i &lt; chars.length; i++) &#123;</div><div class="line">            String temp = String.valueOf(chars[i]);</div><div class="line">            // 正则判断是全角字符</div><div class="line">            if (temp.matches(&quot;[^\\x00-\\xff]&quot;)) &#123;</div><div class="line">                System.out.println(&quot;全角 -&gt; &quot; + temp);</div><div class="line">            &#125;</div><div class="line">            // 判断是半角字符</div><div class="line">            else &#123;</div><div class="line">                System.out.println(&quot;半角 -&gt; &quot; + temp);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 打印所有字符</div><div class="line">     */</div><div class="line">    public static void printAllChar()&#123;</div><div class="line">        for (int i = Character.MIN_VALUE; i &lt;= Character.MAX_VALUE; ++i) &#123;</div><div class="line">            System.out.println(&quot;ASCII：&quot;+i + &quot; -&gt; &quot; + &quot;字符：&quot;+(char)i);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IDEA部署tomcat项目前台传输的json到后台乱码 - IDEA乱码解决]]></title>
      <url>/20170330-IDEA%E9%83%A8%E7%BD%B2tomcat%E9%A1%B9%E7%9B%AE%E5%89%8D%E5%8F%B0%E4%BC%A0%E8%BE%93%E7%9A%84json%E5%88%B0%E5%90%8E%E5%8F%B0%E4%B9%B1%E7%A0%81/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>idea涉及编码的地方都改了<br>主要是编译时候的编码，tomcat的编码，以及idea配置里面的编码</p><p>一、idea配置文件<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">\HOME\IntelliJ IDEA 2016.3.4\bin\idea64.exe.vmoptions</div></pre></td></tr></table></figure><p></p><p>增加一行：-Dfile.encoding=UTF-8</p><p>二、编译参数<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">File -&gt; Settings -&gt; Build, Execution, Deployment</div><div class="line">-&gt; Compiler -&gt; Java Compiler -&gt; Addition command line parameters</div></pre></td></tr></table></figure><p></p><p>在空格里面添加：-encoding utf-8<br><img src="http://wx1.sinaimg.cn/mw690/b2e389b6ly1fe57tlrhrhj20n10fa3zl.jpg"><br>三、工程编码<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">File -&gt; Settings -&gt; Editor -&gt; File Encodings</div></pre></td></tr></table></figure><p></p><p>此页面三个地方都选择UTF-8<br><img src="http://wx3.sinaimg.cn/mw690/b2e389b6ly1fe57tmo745j20qw0jbmys.jpg"><br>四、tomcat参数<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Run/debug Configuration tomcat</div></pre></td></tr></table></figure><p></p><p>VM options：-Dfile.encoding=UTF-8<br><img src="http://wx3.sinaimg.cn/mw690/b2e389b6ly1fe57tn7v93j20k60atmxt.jpg"></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> idea </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> idea </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Unable to ping server at localhost 1099 - 出现的原因]]></title>
      <url>/20170330-Unable%20to%20ping%20server%20at%20localhost%201099%20-%20%E5%87%BA%E7%8E%B0%E7%9A%84%E5%8E%9F%E5%9B%A0/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>之前老是出现<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Application Server was not connected before run configuration stop, </div><div class="line">reason: Unable to ping server at localhost:1099</div></pre></td></tr></table></figure><p></p><p>我遇到这个问题一般是这些原因：</p><ol><li>这个端口被占用，一般进程管理把所有java进程杀了可以解决</li><li>由于在IDEA中错误的给tomcat添加了参数,比如下面这个。去掉即可</li></ol><p>这是下VM option中加了：-URIEncoding=UTF-8<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Error: Could not create the Java Virtual Machine.</div><div class="line">Error: A fatal exception has occurred. Program will exit.</div><div class="line">Unrecognized option: -URIEncoding=UTF-8</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> idea </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> idea </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle性能优化常用的SQL]]></title>
      <url>/20170329-Oracle%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%B8%B8%E7%94%A8%E7%9A%84SQL/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>使用如下sql能查出相应的信息，oracle博大精深要掌握得花时间</p><p>太长了，来个阅读全文吧<br><a id="more"></a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div></pre></td><td class="code"><pre><div class="line">--显示数据库当前连接数</div><div class="line">select count(*) from v$process;</div><div class="line"></div><div class="line">--显示数据库最大连接数</div><div class="line">select value from v$parameter where name =&apos;processes&apos;;</div><div class="line"></div><div class="line">--修改最大Oracle最大连接数:</div><div class="line">alter system set processes = 300 scope = spfile;</div><div class="line"></div><div class="line">--显示当前session连接数</div><div class="line">select count(*) from v$session;</div><div class="line"></div><div class="line">--查看当前有哪些用户正在使用数据</div><div class="line">SELECT osuser, a.username,cpu_time/executions/1000000||&apos;s&apos;, sql_fulltext,machine from v$session a, v$sqlarea b where a.sql_address =b.address order by cpu_time/executions desc;</div><div class="line"></div><div class="line">--查看连接oracle的所有机器的连接数</div><div class="line">select machine,count(*) from v$session group by machine;</div><div class="line"></div><div class="line">--查看连接oracle的所有机器的连接数和状态</div><div class="line">select machine,status,count(*) from v$session group by machine,status order by status;</div><div class="line"></div><div class="line">--查看消耗磁盘读取最多的SQL Top 5：</div><div class="line">select disk_reads,sql_text,SQL_FULLTEXT</div><div class="line">from (select sql_text,disk_reads,SQL_FULLTEXT,</div><div class="line">   dense_rank() over</div><div class="line">     (order by disk_reads desc) disk_reads_rank</div><div class="line">   from v$sql)</div><div class="line">where disk_reads_rank &lt;=5;</div><div class="line"></div><div class="line">--开始</div><div class="line">--通过linux中消耗资源高的进程号获取oracle消耗资源的sql语句：</div><div class="line">--1.linux中使用top命名查看oracle进程中消耗资源最高的进程号；</div><div class="line">--2.oracle中使用命令：</div><div class="line">select c.spid,a.p1,a.p1raw,a.p2,a.event,b.sql_text,b.SQL_FULLTEXT,b.SQL_ID </div><div class="line">from v$session a,v$sql b,v$process c </div><div class="line">where a.wait_class&lt;&gt;&apos;Idle&apos; and a.sql_id=b.sql_id and a.PADDR=c.addr </div><div class="line">order by event;</div><div class="line">--3.查询结果显示出各个sql语句对应的进程号，从中找出top命令中对应消耗资源高的进程号即可找到相应的sql语句。</div><div class="line">--结束</div><div class="line"></div><div class="line">--判断回滚段竞争的SQL语句：（当Ratio大于2时存在回滚段竞争，需要增加更多的回滚段）</div><div class="line">select rn.name, rs.GETS, rs.WAITS, (rs.WAITS / rs.GETS) * 100 ratio</div><div class="line">from v$rollstat rs, v$rollname rn</div><div class="line">where rs.USN = rn.usn;</div><div class="line"></div><div class="line">---判断恢复日志竞争的SQL语句：（immediate_contention或wait_contention的值大于1时存在竞争）</div><div class="line">select name,</div><div class="line">(t.IMMEDIATE_MISSES / decode((t.IMMEDIATE_GETS + t.IMMEDIATE_MISSES),0,-1,(t.IMMEDIATE_GETS + t.IMMEDIATE_MISSES))) * 100 immediate_contention,</div><div class="line">(t.MISSES / decode((t.GETS + t.MISSES), 0, -1, (t.GETS + t.MISSES))) * 100 wait_contention</div><div class="line">from v$latch t</div><div class="line">where name in (&apos;redo copy&apos;, &apos;redo allocation&apos;);</div><div class="line"></div><div class="line">--判断表空间碎片：（如果最大空闲空间占总空间很大比例则可能不存在碎片，如果比例较小，且有许多空闲空间，则可能碎片很多）</div><div class="line">select t.tablespace_name,</div><div class="line">sum(t.bytes),</div><div class="line">max(t.bytes),</div><div class="line">count(*),</div><div class="line">max(t.bytes) / sum(t.bytes) radio</div><div class="line">from dba_free_space t</div><div class="line">group by t.tablespace_name</div><div class="line">order by t.tablespace_name;</div><div class="line"></div><div class="line">--确定命中排序域的次数：</div><div class="line">select t.NAME, t.VALUE from v$sysstat t where t.NAME like &apos;sort%&apos;</div><div class="line"></div><div class="line">--查看当前SGA值：SGA(System Global Area)系统全局区。这是一个非常庞大的内存区间</div><div class="line">select * from v$sga;</div><div class="line"></div><div class="line">--确定高速缓冲区命中率：（如果命中率低于70％，则应该加大init.ora参数中的DB_BLOCK_BUFFER的值）</div><div class="line">select 1 - sum(decode(name, &apos;physical reads&apos;, value, 0)) /</div><div class="line">(sum(decode(name, &apos;db block gets&apos;, value, 0)) +</div><div class="line">sum(decode(name, &apos;consistent gets&apos;, value, 0))) hit_ratio</div><div class="line">from v$sysstat t</div><div class="line">where name in (&apos;physical reads&apos;, &apos;db block gets&apos;, &apos;consistent gets&apos;);</div><div class="line"></div><div class="line">--确定共享池中的命中率：（如果ratio1大于1时，需要加大共享池，如果ratio2大于10％时，需要加大共享池SHARED_POOL_SIZE）</div><div class="line">select * from</div><div class="line">(</div><div class="line">  select sum(pins) pins,</div><div class="line">  sum(reloads) reloads,</div><div class="line">  (sum(reloads) / sum(pins)) * 100 ratio1</div><div class="line">  from v$librarycache</div><div class="line">),</div><div class="line">(</div><div class="line">  select sum(gets) gets,</div><div class="line">  sum(getmisses) getmisses,</div><div class="line">  (sum(getmisses) / sum(gets)) * 100 ratio2</div><div class="line">  from v$rowcache</div><div class="line">)</div><div class="line"></div><div class="line">--查询INIT.ORA参数：</div><div class="line">select * from v$parameter;</div><div class="line"></div><div class="line">--求当前会话的SID，SERIAL#</div><div class="line">SELECT Sid, Serial# FROM V$session</div><div class="line">WHERE Audsid = Sys_Context(&apos;USERENV&apos;, &apos;SESSIONID&apos;);</div><div class="line"></div><div class="line">--查询session的OS进程ID(有输入)</div><div class="line">SELECT p.Spid &quot;OS Thread&quot;, b.NAME &quot;Name-User&quot;, s.Program, s.Sid, s.Serial#,s.Osuser, s.Machine</div><div class="line">FROM V$process p, V$session s, V$bgprocess b</div><div class="line">WHERE p.Addr = s.Paddr</div><div class="line">AND p.Addr = b.Paddr And (s.sid=&amp;1 or p.spid=&amp;1)</div><div class="line">UNION ALL</div><div class="line">SELECT p.Spid &quot;OS Thread&quot;, s.Username &quot;Name-User&quot;, s.Program, s.Sid,s.Serial#, s.Osuser, s.Machine</div><div class="line">FROM V$process p, V$session s</div><div class="line">WHERE p.Addr = s.Paddr</div><div class="line">And (s.sid=&amp;1 or p.spid=&amp;1)</div><div class="line">AND s.Username IS NOT NULL;</div><div class="line"></div><div class="line">--查看锁（lock）情况</div><div class="line">SELECT /*+ RULE */ Ls.Osuser Os_User_Name, Ls.Username User_Name,Decode(Ls.TYPE,</div><div class="line">&apos;RW&apos;, &apos;Row wait enqueue lock&apos;, &apos;TM&apos;, &apos;DML enqueue lock&apos;,&apos;TX&apos;, &apos;Transaction enqueue lock&apos;, &apos;UL&apos;, &apos;User supplied lock&apos;) Lock_Type,o.Object_Name OBJECT,Decode(Ls.Lmode,1, NULL, 2, &apos;Row Share&apos;, 3, &apos;Row Exclusive&apos;,</div><div class="line">4, &apos;Share&apos;, 5, &apos;Share Row Exclusive&apos;, 6, &apos;Exclusive&apos;,NULL) Lock_Mode,o.Owner, Ls.Sid, Ls.Serial# Serial_Num, Ls.Id1, Ls.Id2 FROM Sys.Dba_Objects o, </div><div class="line">(SELECT s.Osuser, s.Username, l.TYPE, l.Lmode, s.Sid, s.Serial#, l.Id1,l.Id2 FROM V$session s, V$lock l</div><div class="line">WHERE s.Sid = l.Sid) Ls</div><div class="line">WHERE o.Object_Id = Ls.Id1</div><div class="line">AND o.Owner &lt;&gt; &apos;SYS&apos;</div><div class="line">ORDER BY o.Owner, o.Object_Name;</div><div class="line"></div><div class="line">--查看等待（wait）情况</div><div class="line">SELECT Ws.CLASS, Ws.COUNT COUNT, SUM(Ss.VALUE) Sum_Value</div><div class="line">FROM V$waitstat Ws, V$sysstat Ss</div><div class="line">WHERE Ss.NAME IN (&apos;db block gets&apos;, &apos;consistent gets&apos;)</div><div class="line">GROUP BY Ws.CLASS, Ws.COUNT;</div><div class="line"></div><div class="line">--求process/session的状态</div><div class="line">SELECT p.Pid, p.Spid, s.Program, s.Sid, s.Serial#</div><div class="line">FROM V$process p, V$session s</div><div class="line">WHERE s.Paddr = p.Addr;</div><div class="line"></div><div class="line">--查看表空间的名称及大小</div><div class="line">select t.tablespace_name, round(sum(bytes/(1024*1024)),0) ts_size</div><div class="line">from dba_tablespaces t, dba_data_files d</div><div class="line">where t.tablespace_name = d.tablespace_name</div><div class="line">group by t.tablespace_name;</div><div class="line"></div><div class="line">--查看表空间物理文件的名称及大小</div><div class="line">select tablespace_name, file_id, file_name,</div><div class="line">round(bytes/(1024*1024),0) total_space</div><div class="line">from dba_data_files</div><div class="line">order by tablespace_name;</div><div class="line"></div><div class="line">--查看回滚段名称及大小</div><div class="line">select segment_name, tablespace_name, r.status,</div><div class="line">(initial_extent/1024) InitialExtent,(next_extent/1024) NextExtent,</div><div class="line"></div><div class="line">--查看控制文件</div><div class="line">select name from v$controlfile;</div><div class="line"></div><div class="line">--查看日志文件</div><div class="line">select member from v$logfile;</div><div class="line"></div><div class="line">--查看表空间的使用情况</div><div class="line">select sum(bytes)/(1024*1024) as free_space,tablespace_name</div><div class="line">from dba_free_space</div><div class="line">group by tablespace_name;</div><div class="line">SELECT A.TABLESPACE_NAME,A.BYTES TOTAL,B.BYTES USED, C.BYTES FREE,</div><div class="line">(B.BYTES*100)/A.BYTES &quot;% USED&quot;,(C.BYTES*100)/A.BYTES &quot;% FREE&quot;</div><div class="line">FROM SYS.SM$TS_AVAIL A,SYS.SM$TS_USED B,SYS.SM$TS_FREE C</div><div class="line">WHERE A.TABLESPACE_NAME=B.TABLESPACE_NAME AND A.TABLESPACE_NAME=C.TABLESPACE_NAME;</div><div class="line"></div><div class="line">--捕捉运行很久的SQL</div><div class="line">select username,sid,opname,</div><div class="line">round(sofar*100 / totalwork,0) || &apos;%&apos; as progress,</div><div class="line">time_remaining,sql_text</div><div class="line">from v$session_longops , v$sql</div><div class="line">where time_remaining &lt;&gt; 0</div><div class="line">and sql_address = address</div><div class="line">and sql_hash_value = hash_value</div><div class="line"></div><div class="line">--耗资源的进程（top session）</div><div class="line">select s.schemaname schema_name, decode(sign(48 - command), 1,</div><div class="line">to_char(command), &apos;Action Code #&apos; || to_char(command) ) action, status</div><div class="line">session_status, s.osuser os_user_name, s.sid, p.spid , s.serial# serial_num,</div><div class="line">nvl(s.username, &apos;[Oracle process]&apos;) user_name, s.terminal terminal,</div><div class="line">s.program program, st.value criteria_value from v$sesstat st, v$session s , v$process p</div><div class="line">where st.sid = s.sid and st.statistic# = to_number(&apos;38&apos;) and (&apos;ALL&apos; = &apos;ALL&apos;</div><div class="line">or s.status = &apos;ALL&apos;) and p.addr = s.paddr order by st.value desc, p.spid asc, s.username asc, s.osuser asc</div><div class="line"></div><div class="line">--查看有哪些实例在运行：</div><div class="line">select * from v$active_instances;</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> oracle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IDEA智能补全快捷键更改为Ctrl + 逗号]]></title>
      <url>/20170328-IDEA%E6%99%BA%E8%83%BD%E8%A1%A5%E5%85%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%9B%B4%E6%94%B9%E4%B8%BACtrl%20+%20%E9%80%97%E5%8F%B7/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>一直就听说idea的智能补全很厉害，但是Ctrl + 空格 被万恶的输入法给占用了<br>网上搜也不是很清晰，这里就写个博客记录一下</p><p>快捷键设置：file－&gt;setting-&gt;Keymap-&gt;Main menu-&gt;Code-&gt;Completion-&gt;Basic<br>找到之后右键Add keyboard Shortcut，然后按下：Ctrl + 逗号<br><img src="http://wx4.sinaimg.cn/mw690/b2e389b6ly1fe2n3f9lgcj20pq0k1ab3.jpg"></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> idea </category>
            
        </categories>
        
        
        <tags>
            
            <tag> idea </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle中exists在update中无法限制住条件，在select中可以]]></title>
      <url>/20170323-Oracle%E4%B8%ADexists%E5%9C%A8update%E4%B8%AD%E6%97%A0%E6%B3%95%E9%99%90%E5%88%B6%E4%BD%8F%E6%9D%A1%E4%BB%B6%EF%BC%8C%E5%9C%A8select%E4%B8%AD%E5%8F%AF%E4%BB%A5/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>这个问题是自己写的一个bug，标示不知道原因是什么</p><p>现在暂时使用 in 代替解决了</p><p>下面的查询是能限制住acct_type<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT ew.customer_id,cf.acct_type</div><div class="line">FROM ew_quota_info ew,</div><div class="line">     cf_customer cf</div><div class="line">WHERE cf.acct_type in(2,3)</div><div class="line">  AND ew.customer_id = cf.id</div></pre></td></tr></table></figure><p></p><p>但是在update的时候,会把acct_type=1的也更新了<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">update ew_quota_info ew</div><div class="line">set ew.all_amt = 100000</div><div class="line">where exists(</div><div class="line">SELECT ew.customer_id</div><div class="line">FROM ew_quota_info ew,</div><div class="line">     cf_customer cf</div><div class="line">WHERE cf.acct_type in(2,3)</div><div class="line">  AND ew.customer_id = cf.id</div><div class="line">)</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> sql </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
            <tag> oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Intellij IDEA中使用MyBatis-generator 自动生成MyBatis代码]]></title>
      <url>/20170322-Intellij%20IDEA%E4%B8%AD%E4%BD%BF%E7%94%A8MyBatis-generator%20%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90MyBatis%E4%BB%A3%E7%A0%81/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>MyBatis Generator是一个非常方便的代码生成工具，</p><p>可以根据数据库中表结构自动生成CRUD代码，可以满足大部分需求。</p><p>MyBatis Generator (MBG) 是一个Mybatis的代码生成器 ，</p><p>可以根据数据库中表结构自动生成简单的CRUD（插入，查询，更新，删除）操作。</p><p>但联合查询和存储过程，需手动手写SQL和对象。</p><p><strong>PS:配置过程中请注意自己的工程目录结构</strong></p><h2 id="一、pom-xml添加插件"><a href="#一、pom-xml添加插件" class="headerlink" title="一、pom.xml添加插件"></a>一、pom.xml添加插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;plugin&gt;</div><div class="line">                &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</div><div class="line">                &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</div><div class="line">                &lt;version&gt;1.3.2&lt;/version&gt;</div><div class="line">                &lt;dependencies&gt;</div><div class="line">                    &lt;dependency&gt;</div><div class="line">                        &lt;groupId&gt;mysql&lt;/groupId&gt;</div><div class="line">                        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</div><div class="line">                        &lt;version&gt;5.1.5&lt;/version&gt;</div><div class="line">                    &lt;/dependency&gt;</div><div class="line">                &lt;/dependencies&gt;</div><div class="line">                &lt;configuration&gt;</div><div class="line">                    &lt;overwrite&gt;true&lt;/overwrite&gt;</div><div class="line">                &lt;/configuration&gt;</div><div class="line">            &lt;/plugin&gt;</div></pre></td></tr></table></figure><h2 id="二、配置generatorConfig-xml"><a href="#二、配置generatorConfig-xml" class="headerlink" title="二、配置generatorConfig.xml"></a>二、配置generatorConfig.xml</h2><a id="more"></a><p>resources下建generatorConfig.xml,作为mybatis-generator-maven-plugin插件的执行目标。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;!DOCTYPE generatorConfiguration</div><div class="line">        PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</div><div class="line">        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</div><div class="line"></div><div class="line">&lt;generatorConfiguration&gt;</div><div class="line"></div><div class="line">    &lt;context id=&quot;mysqlgenerator&quot; targetRuntime=&quot;MyBatis3&quot;&gt;</div><div class="line">        &lt;!--数据库连接信息--&gt;</div><div class="line">        &lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot;</div><div class="line">                        connectionURL=&quot;jdbc:mysql://127.0.0.1:3306/ssm&quot;</div><div class="line">                        userId=&quot;root&quot;</div><div class="line">                        password=&quot;hisen&quot; /&gt;</div><div class="line">        &lt;!--代码相关路径和包--&gt;</div><div class="line">        &lt;javaModelGenerator targetPackage=&quot;com.hisen.mybatis.model&quot; targetProject=&quot;src/main/java&quot; /&gt;</div><div class="line"></div><div class="line">        &lt;sqlMapGenerator targetPackage=&quot;com.hisen.mybatis.mapper&quot; targetProject=&quot;src/main/resources&quot; /&gt;</div><div class="line"></div><div class="line">        &lt;javaClientGenerator type=&quot;XMLMAPPER&quot; targetPackage=&quot;com.hisen.mybatis.mapper&quot; targetProject=&quot;src/main/java&quot; /&gt;</div><div class="line">        &lt;!--表名--&gt;</div><div class="line">        &lt;table tableName=&quot;appointment&quot;/&gt;</div><div class="line">        &lt;table tableName=&quot;book&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;/context&gt;</div><div class="line"></div><div class="line">&lt;/generatorConfiguration&gt;</div></pre></td></tr></table></figure><p></p><h2 id="三、Intellij配置"><a href="#三、Intellij配置" class="headerlink" title="三、Intellij配置"></a>三、Intellij配置</h2><p>MyBatis Generator生成代码的运行方式：命令行、使用Ant、使用Maven、Java编码。</p><p>本文采用Maven插件mybatis-generator-maven-plugin来运行MyBatis Generator，用的是命令行的方式。</p><p>配置插件<br><img src="http://wx1.sinaimg.cn/mw690/b2e389b6ly1fdvexcbif9j20cs0670sz.jpg"><br>选择目录，输入命令：mybatis-generator:generate -e<br><img src="http://wx4.sinaimg.cn/mw690/b2e389b6ly1fdvexcxg0fj20pa0kt404.jpg"><br>找到插件。双击执行<br><img src="http://wx3.sinaimg.cn/mw690/b2e389b6ly1fdvexdf3u2j20dc0dft9x.jpg"><br>即可看到生成的文件<br><img src="http://wx1.sinaimg.cn/mw690/b2e389b6ly1fdvf14o2y3j20du0bot92.jpg"></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> idea </tag>
            
            <tag> mybatis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu安装nginx]]></title>
      <url>/20170321-Ubuntu%E5%AE%89%E8%A3%85nginx/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>Nginx (“engine x”) 是一个高性能的 HTTP 和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器。</p><p>Nginx 是由 Igor Sysoev 为俄罗斯访问量第二的 Rambler.ru 站点开发的，</p><p>第一个公开版本0.1.0发布于2004年10月4日。其将源代码以类BSD许可证的形式发布，</p><p>因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。</p><p>说明：这只是一个初步的安装，后续进一步实践</p><h2 id="安装Nginx依赖库"><a href="#安装Nginx依赖库" class="headerlink" title="安装Nginx依赖库"></a>安装Nginx依赖库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">#安装gcc g++的依赖库</div><div class="line">sudo apt-get install build-essential</div><div class="line">sudo apt-get install libtool</div><div class="line">#安装 pcre依赖库</div><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install libpcre3 libpcre3-dev</div><div class="line">#安装 zlib依赖库（http://www.zlib.net）</div><div class="line">sudo apt-get install zlib1g-dev</div><div class="line">#安装 ssl依赖库</div><div class="line">sudo apt-get install openssl</div><div class="line">#下载最新版本：</div><div class="line">wget http://nginx.org/download/nginx-1.9.9.tar.gz</div><div class="line">#解压</div><div class="line">tar -zxvf nginx-1.9.9.tar.gz</div><div class="line">#进入解压目录：</div><div class="line">cd nginx-1.9.9</div><div class="line">#配置：</div><div class="line">sudo ./configure --prefix=/usr/local/nginx </div><div class="line">#编辑nginx：</div><div class="line">sudo make</div><div class="line">#注意：这里可能会报错，提示“pcre.h No such file or directory”,具体详见：http://stackoverflow.com/questions/22555561/error-building-fatal-error-pcre-h-no-such-file-or-directory</div><div class="line">#需要安装 libpcre3-dev,命令为：sudo apt-get install libpcre3-dev</div><div class="line">#安装nginx：</div><div class="line">sudo make install</div><div class="line">#启动nginx：</div><div class="line">sudo /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</div><div class="line">#注意：-c 指定配置文件的路径，不加的话，nginx会自动加载默认路径的配置文件，可以通过 -h查看帮助命令。</div><div class="line">#查看nginx进程：</div><div class="line">ps -ef|grep nginx</div></pre></td></tr></table></figure><h2 id="Nginx常用命令"><a href="#Nginx常用命令" class="headerlink" title="Nginx常用命令"></a>Nginx常用命令</h2><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">#启动</div><div class="line">sudo /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</div><div class="line">#进入目录</div><div class="line">cd /usr/local/nginx/</div><div class="line">#关闭</div><div class="line">sudo ./sbin/nginx -s quit</div><div class="line">#Nginx重新加载配置</div><div class="line">sudo ./sbin/nginx -s reload</div><div class="line">#指定配置文件</div><div class="line">sudo ./sbin/nginx -c /usr/local/nginx/conf/nginx.conf</div><div class="line">#查看版本</div><div class="line">sudo ./sbin/nginx -v</div><div class="line">#显示帮助</div><div class="line">sudo ./sbin/nginx -h</div></pre></td></tr></table></figure><p>安装之后就直接监听80端口，浏览器打开127.0.0.1即可访问出现如下页面：<br><img src="http://wx4.sinaimg.cn/mw690/b2e389b6ly1fdup21igsjj20g007ijrq.jpg"></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> 软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[log4j日志信息插入mysql数据库]]></title>
      <url>/20170321-log4j%E6%97%A5%E5%BF%97%E4%BF%A1%E6%81%AF%E6%8F%92%E5%85%A5mysql%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>以前不知道这玩意还能直接插入MySQL数据库</p><p>我是使用IDEA，maven</p><p>具体的目录结果见github：<a href="https://github.com/hisen-yuan/IDEAPractice/tree/master/src/main/java/com/hisen/log4j/log4j2MySQL" target="_blank">github</a></p><h2 id="log4j配置文件"><a href="#log4j配置文件" class="headerlink" title="log4j配置文件"></a>log4j配置文件</h2><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">#可以设置级别：debug&gt;info&gt;error</div><div class="line">#debug：显示debug、info、error</div><div class="line">#info：显示info、error</div><div class="line">#error：只error</div><div class="line">log4j.rootLogger=debug,info,database</div><div class="line">#注意的地方database 对应 log4j.appender.database.URL的database 若认log4j.rootLogger=debug,info,db 那么 log4j.appender.database.URL的database 要改成db</div><div class="line">#log4j.appender.logfile=org.apache.log4j.DailyRollingFileAppender</div><div class="line">#log4j.appender.logfile.DatePattern=.yyyy-MM-dd</div><div class="line">#log4j.appender.logfile.layout=org.apache.log4j.PatternLayout</div><div class="line">#输出到控制台</div><div class="line">#log4j.appender.appender1=org.apache.log4j.ConsoleAppender</div><div class="line">#样式为TTCCLayout</div><div class="line">#log4j.appender.appender1.layout=org.apache.log4j.TTCCLayout</div><div class="line">#设置级别：</div><div class="line">#log4j.rootLogger=debug,appender1</div><div class="line"></div><div class="line">#输出到文件(这里默认为追加方式)</div><div class="line">#log4j.appender.appender1=org.apache.log4j.FileAppender</div><div class="line">#设置文件输出路径</div><div class="line">#【1】文本文件</div><div class="line">#log4j.appender.appender1.File=c:/Log4JDemo02.log</div><div class="line">#【2】HTML文件</div><div class="line">log4j.appender.appender1.File=c:/Log4JDemo02.html   </div><div class="line">#设置文件输出样式</div><div class="line">#log4j.appender.appender1.layout=org.apache.log4j.TTCCLayout</div><div class="line">log4j.appender.appender1.layout=org.apache.log4j.HTMLLayout  </div><div class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.stdout.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH:mm:ss&#125; %p [%c] - - &lt;%m&gt;%n</div><div class="line">log4j.appender.logfile=org.apache.log4j.DailyRollingFileAppender</div><div class="line">log4j.appender.logfile.DatePattern=.yyyy-MM-dd</div><div class="line">log4j.appender.logfile.layout=org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.logfile.layout.ConversionPattern=%d %p [%c] wang- &lt;%m&gt;%n</div><div class="line">#下面是配置将日志信息插入数据库，</div><div class="line">#配置输出目标为数据库（假如要将日志在控制台输出，配置为log4j.appender. stdout =org.apache.log4j.ConsoleAppender；将日志写入文件，配置为log4j.appender.logfile=org.apache.log4j.DailyRollingFileAppender</div><div class="line">#这样的配置在许多地方都要有，需要可查有关资料）,当然你也可以自己扩展org.apache.log4j.jdbc.JDBCAppender这个类，只需要在这里配置就可以了例如我们配置我自己扩展的MyJDBCAppender，配置为#log4j.appender.db=com.neam.commons.MyJDBCAppender</div><div class="line">log4j.appender.database.Threshold=info</div><div class="line">#定义什么级别的错误将写入到数据库中</div><div class="line">log4j.appender.database.BufferSize=1</div><div class="line">#设置缓存大小，就是当有1条日志信息是才往数据库插一次</div><div class="line">log4j.appender.database=org.apache.log4j.jdbc.JDBCAppender</div><div class="line">log4j.appender.database.driver=com.mysql.jdbc.Driver</div><div class="line">#设置要将日志插入到数据库的驱动</div><div class="line">log4j.appender.database.URL=jdbc:mysql://127.0.0.1:3306/log4j?useUnicode=true&amp;characterEncoding=UTF-8</div><div class="line">log4j.appender.database.user=root</div><div class="line">log4j.appender.database.password=hisen</div><div class="line"></div><div class="line">log4j.appender.database.sql=insert into log (Class,Mothod,createTime,LogLevel,MSG) values (&apos;%C&apos;,&apos;%M&apos;,&apos;%d&#123;yyyy-MM-dd HH:mm:ss&#125;&apos;,&apos;%p&apos;,&apos;%m&apos;)</div><div class="line">log4j.appender.database.layout=org.apache.log4j.PatternLayout</div></pre></td></tr></table></figure><h2 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">package com.hisen.log4j.log4j2MySQL;</div><div class="line"></div><div class="line">import org.apache.log4j.Logger;</div><div class="line"></div><div class="line">/**</div><div class="line"> * 测试一下log4j把日志插入到mysql数据库</div><div class="line"> * 插入语句和数据库配置在log4j的配置文件中</div><div class="line"> * Created by hisenyuan on 2017/3/21 at 14:23.</div><div class="line"> */</div><div class="line">public class Log4jDemo &#123;</div><div class="line">    private static Logger logger = Logger.getLogger(Log4jDemo.class);</div><div class="line"></div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        logger.debug(&quot;这是debug信息&quot;);</div><div class="line">        // 记录info级别的信息</div><div class="line">        logger.info(&quot;这是info信息&quot;);</div><div class="line">        logger.info(&quot;这里做了一个XX操作，入库，做操作日志&quot;);</div><div class="line">        // 记录error级别的信息</div><div class="line">        logger.error(&quot;这是error信息&quot;);</div><div class="line">        hisen();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static void hisen() &#123;</div><div class="line">        logger.debug(&quot;这是方法中debug信息&quot;);</div><div class="line">        // 记录info级别的信息</div><div class="line">        logger.info(&quot;这是方法中info信息&quot;);</div><div class="line">        // 记录error级别的信息</div><div class="line">        logger.error(&quot;这是方法中error信息&quot;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[企业邮箱签名模版]]></title>
      <url>/20170317-%E4%BC%81%E4%B8%9A%E9%82%AE%E7%AE%B1%E7%AD%BE%E5%90%8D%E6%A8%A1%E7%89%88/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>下面是源码，有些邮箱可以直接用html源码设置。</p><p>我用得是网易邮箱大师，把代码存为本地网页打开全选复制</p><p>粘贴到邮箱大师的签名里面即可！亲测有效，还挺好看的<br><img src="http://wx3.sinaimg.cn/mw690/b2e389b6ly1fdptblhmqoj20f90iojt1.jpg"></p><p><strong>代码如下：</strong><br><a id="more"></a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">&lt;html&gt;</div><div class="line"> &lt;head&gt;&lt;/head&gt;</div><div class="line"> &lt;body&gt;</div><div class="line">  &lt;div&gt;</div><div class="line">   &lt;style&gt;.g &#123;clear:both; height:0;&#125;.mailsign &#123;font-size:12px; color:#808080; margin:0 35px; line-height:22px;&#125;.logo &#123;width:305px; height:35px; margin:20px 0 10px -15px;&#125;.name &#123;font-weight:700; font-size:14px; float:left; color:#808080; height:30px; line-height:30px;&#125;.position &#123;float:left; margin-left:15px; color:#808080; height:30px; line-height:30px;&#125;.company1 &#123;clear:both; font-weight:700; font-size:14px; color:#808080; margin-top:10px;&#125;.company2 &#123;clear:both; font-weight:700; font-size:14px; color:#808080; margin-bottom:10px;&#125;.add&#123;&#125;.add .zip &#123; margin-left:5px; color:#a0a0a0; font-size:10px;&#125;.tel &#123;&#125;.fax &#123;&#125;.phone &#123;&#125;.website &#123;&#125;.website a &#123;color:#808080; text-decoration:none !important;&#125;.eng &#123;&#125;.state &#123;color:#a0a0a0; margin-top:20px; padding:15px; border:1px solid #CCC; border-radius:10px&#125;.state h4 &#123; margin:0;&#125;.state p &#123;margin:0; font-size:7.5pt;&#125;&lt;/style&gt;</div><div class="line">   </div><div class="line">   &lt;div class=&quot;mailsign&quot;&gt;</div><div class="line">   &lt;hr /&gt;</div><div class="line">    &lt;div class=&quot;g&quot;&gt;</div><div class="line">     &lt;div class=&quot;name&quot;&gt;</div><div class="line">      &lt;t id=&quot;tname&quot;&gt;</div><div class="line">       HiSEN</div><div class="line">      &lt;/t&gt;</div><div class="line">     &lt;/div&gt;</div><div class="line">     &lt;div class=&quot;position&quot;&gt;</div><div class="line">      &lt;t id=&quot;tposition&quot;&gt;</div><div class="line">       中级java开发工程师</div><div class="line">      &lt;/t&gt;</div><div class="line">     &lt;/div&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class=&quot;g&quot;&gt;&lt;/div&gt;</div><div class="line">    &lt;div class=&quot;company1&quot;&gt;</div><div class="line">     HiSEN网络在线技术有限公司</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class=&quot;company2&quot;&gt;</div><div class="line">     &lt;t id=&quot;tcompany&quot;&gt;</div><div class="line">      技术部</div><div class="line">     &lt;/t&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class=&quot;add&quot;&gt;</div><div class="line">     &lt;span&gt;地址/Add ：&lt;/span&gt;</div><div class="line">     &lt;t id=&quot;tadd&quot;&gt;</div><div class="line">      北京朝阳区xxx</div><div class="line">     &lt;/t&gt;</div><div class="line">    &lt;div class=&quot;mob&quot;&gt;</div><div class="line">     &lt;span&gt;手机/Mob：&lt;/span&gt;</div><div class="line">     &lt;t id=&quot;tmob&quot;&gt;</div><div class="line">      15555555555</div><div class="line">     &lt;/t&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class=&quot;website&quot;&gt;</div><div class="line">     &lt;span&gt;网址/URL    ：&lt;/span&gt;</div><div class="line">     &lt;a href=&quot;http://hisen.me/&quot; target=&quot;_blank&quot;&gt;hisen.me&lt;/a&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;div class=&quot;state&quot;&gt;</div><div class="line">     &lt;h4&gt;保密声明：&lt;/h4&gt;</div><div class="line">     &lt;p&gt;此文件中可能含有机密类信息，仅限于上方提到的人员使用。若非以上人员或负责将该信息传送给上述人员的职员或代理人，严禁对此文件作任何形式的汇报、散布、传播及复制。若非此文件的指定收件人，请立即以邮件形式联系发件人并销毁所有原始文件的拷贝。&lt;/p&gt;</div><div class="line">     &lt;h4&gt;CONFIDENTIALITY NOTICE:&lt;/h4&gt;</div><div class="line">     &lt;p&gt;The information contained in this transmission may contain privileged and confidential information and is intended only for the use of the person(s) named above. If you are not the intended recipient, or an employee or agent responsible for delivering this message to the intended recipient, any review, dissemination, distribution or duplication of this communication is strictly prohibited. If you are not the intended recipient, please contact the sender immediately by reply e-mail and destroy all copies of the original message.&lt;/p&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">   &lt;/div&gt;</div><div class="line">  &lt;/div&gt; </div><div class="line"> &lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> 其他 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 模版 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JAVA中几种常用的RPC框架]]></title>
      <url>/20170317-JAVA%E4%B8%AD%E5%87%A0%E7%A7%8D%E5%B8%B8%E7%94%A8%E7%9A%84RPC%E6%A1%86%E6%9E%B6/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>RPC是远程过程调用的简称，广泛应用在大规模分布式应用中，</p><p>作用是有助于系统的垂直拆分，使系统更易拓展。</p><p>Java中的RPC框架比较多，各有特色，广泛使用的有RMI、Hessian、Dubbo等。</p><p>RPC还有一个特点就是能够跨语言，本文只以JAVA语言里的RPC为例。</p><p>其他的框架结构也类似，区别在于对象的序列化方法，传输对象的通讯协议，</p><p>以及注册中心的管理与failover设计（利用zookeeper）。</p><p>客户端和服务端可以运行在不同的JVM中，Client只需要引入接口，</p><p>接口的实现以及运行时需要的数据都在Server端，RPC的主要依赖技术是序列化、反序列化和传输协议，</p><p>JAVA里对应的就是对象的序列化、反序列化以及序列化后数据的传输。</p><p>RMI的序列化和反序列化是JAVA自带的，Hessian里的序列化和反序列化是私有的，传输协议则是HTTP，</p><p>Dubbo的序列化可以多种选择，一般使用Hessian的序列化协议，传输则是TCP协议，使用了高性能的NIO框架Netty。</p><p>对于序列化，我还了解一些，像Google的ProBuffer、JBoss Marshalling和Apache Thrift等</p><h2 id="1-RMI"><a href="#1-RMI" class="headerlink" title="1.RMI"></a>1.RMI</h2><p><img src="http://wx3.sinaimg.cn/mw690/b2e389b6ly1fdpngkrst0j20iq0dajs2.jpg" alt="rmi"><br>JAVA自带的远程方法调用工具，不过有一定的局限性，</p><p>毕竟是JAVA语言最开始时的设计，后来很多框架的原理都基于RMI，RMI的使用如下：</p><p>对外接口<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">public interface IService extends Remote &#123;  </div><div class="line">    public String queryName(String no) throws RemoteException;  </div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>服务实现<br><a id="more"></a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">import java.rmi.RemoteException;</div><div class="line">import java.rmi.server.UnicastRemoteObject;</div><div class="line"></div><div class="line">// 服务实现</div><div class="line">public class ServiceImpl extends UnicastRemoteObject implements IService &#123;</div><div class="line"></div><div class="line">    /**</div><div class="line">     */</div><div class="line">    private static final long serialVersionUID = 682805210518738166L;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * @throws RemoteException</div><div class="line">     */</div><div class="line">    protected ServiceImpl() throws RemoteException &#123;</div><div class="line">        super();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /* (non-Javadoc)</div><div class="line">     * @see com.suning.ebuy.wd.web.IService#queryName(java.lang.String)</div><div class="line">     */</div><div class="line">    @Override</div><div class="line">    public String queryName(String no) throws RemoteException &#123;</div><div class="line">        // 方法的具体实现</div><div class="line">        System.out.println(&quot;hello&quot; + no);</div><div class="line">        return String.valueOf(System.currentTimeMillis());</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>RMI客户端<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">import java.rmi.AccessException;</div><div class="line">import java.rmi.NotBoundException;</div><div class="line">import java.rmi.RemoteException;</div><div class="line">import java.rmi.registry.LocateRegistry;</div><div class="line">import java.rmi.registry.Registry;</div><div class="line"></div><div class="line">// RMI客户端</div><div class="line">public class Client &#123;</div><div class="line"></div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        // 注册管理器</div><div class="line">        Registry registry = null;</div><div class="line">        try &#123;</div><div class="line">            // 获取服务注册管理器</div><div class="line">            registry = LocateRegistry.getRegistry(&quot;127.0.0.1&quot;,8088);</div><div class="line">            // 列出所有注册的服务</div><div class="line">            String[] list = registry.list();</div><div class="line">            for(String s : list)&#123;</div><div class="line">                System.out.println(s);</div><div class="line">            &#125;</div><div class="line">        &#125; catch (RemoteException e) &#123;</div><div class="line">            </div><div class="line">        &#125;</div><div class="line">        try &#123;</div><div class="line">            // 根据命名获取服务</div><div class="line">            IService server = (IService) registry.lookup(&quot;vince&quot;);</div><div class="line">            // 调用远程方法</div><div class="line">            String result = server.queryName(&quot;ha ha ha ha&quot;);</div><div class="line">            // 输出调用结果</div><div class="line">            System.out.println(&quot;result from remote : &quot; + result);</div><div class="line">        &#125; catch (AccessException e) &#123;</div><div class="line">            </div><div class="line">        &#125; catch (RemoteException e) &#123;</div><div class="line">            </div><div class="line">        &#125; catch (NotBoundException e) &#123;</div><div class="line">            </div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>RMI服务端<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">import java.rmi.RemoteException;</div><div class="line">import java.rmi.registry.LocateRegistry;</div><div class="line">import java.rmi.registry.Registry;</div><div class="line"></div><div class="line">// RMI服务端</div><div class="line">public class Server &#123;</div><div class="line"></div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        // 注册管理器</div><div class="line">        Registry registry = null;</div><div class="line">        try &#123;</div><div class="line">            // 创建一个服务注册管理器</div><div class="line">            registry = LocateRegistry.createRegistry(8088);</div><div class="line"></div><div class="line">        &#125; catch (RemoteException e) &#123;</div><div class="line">            </div><div class="line">        &#125;</div><div class="line">        try &#123;</div><div class="line">            // 创建一个服务</div><div class="line">            ServiceImpl server = new ServiceImpl();</div><div class="line">            // 将服务绑定命名</div><div class="line">            registry.rebind(&quot;vince&quot;, server);</div><div class="line">            </div><div class="line">            System.out.println(&quot;bind server&quot;);</div><div class="line">        &#125; catch (RemoteException e) &#123;</div><div class="line">            </div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>服务注册管理器写在了Server里，当然也可以抽出来单独作为一个服务，</p><p>在其他一些框架中，往往用Zookeeper充当注册管理角色。</p><h2 id="2-Hessian（基于HTTP的远程方法调用）"><a href="#2-Hessian（基于HTTP的远程方法调用）" class="headerlink" title="2.Hessian（基于HTTP的远程方法调用）"></a>2.Hessian（基于HTTP的远程方法调用）</h2><p><img src="http://wx3.sinaimg.cn/mw690/b2e389b6ly1fdpngkehxqj20i306xaa2.jpg" alt="Hessian"><br>基于HTTP协议传输，在性能方面还不够完美，负载均衡和失效转移依赖于应用的负载均衡器，</p><p>Hessian的使用则与RMI类似，区别在于淡化了Registry的角色，通过显示的地址调用，</p><p>利用HessianProxyFactory根据配置的地址create一个代理对象，另外还要引入Hessian的Jar包。</p><h2 id="3、Dubbo（淘宝开源的基于TCP的RPC框架）"><a href="#3、Dubbo（淘宝开源的基于TCP的RPC框架）" class="headerlink" title="3、Dubbo（淘宝开源的基于TCP的RPC框架）"></a>3、Dubbo（淘宝开源的基于TCP的RPC框架）</h2><p><img src="http://wx4.sinaimg.cn/mw690/b2e389b6ly1fdpngjv276j20ik0cxwf5.jpg" alt="Dubbo"></p><p>基于Netty的高性能RPC框架，是阿里巴巴开源的，总体原理如下：</p><p>在了解Dubbo之前，要先对Zookeeper有深入的理解，当理解了zookeeper后，Dubbo也就了无秘密了。</p><p>Dubbo的详细说明在淘宝开源里说的非常详细，在工作中很多生产项目都用了Dubbo，过程中也发现了很多需要注意的地方.</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mybatis：No constructor found in xxx matching]]></title>
      <url>/20170317-mybatis%EF%BC%9ANo%20constructor%20found%20in%20xxx%20matching%20%5Bjava.lang.Integer,%20java.lang.String,%20java.lang.Integer%5D/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>如下错误提示：</p><p>mybatis：No constructor found in xxx matching [java.lang.Integer, java.lang.String, java.lang.Integer]</p><p>原因：xxx 这个bean缺少一个默认的构造方法！</p><hr><p>解决：加上默认的构造方法即可</p><hr><p>我是在单元测试的时候遇到这个问题</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux cal date命令详解]]></title>
      <url>/20170314-linux%20cal%20date%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line">##显示当月的日历</div><div class="line">hisen@ubuntu:~$ cal</div><div class="line">     March 2017       </div><div class="line">Su Mo Tu We Th Fr Sa  </div><div class="line">          1  2  3  4  </div><div class="line"> 5  6  7  8  9 10 11  </div><div class="line">12 13 14 15 16 17 18  </div><div class="line">19 20 21 22 23 24 25  </div><div class="line">26 27 28 29 30 31     </div><div class="line"></div><div class="line">##指定显示1997年11月当月的日历</div><div class="line">hisen@ubuntu:~$ cal 11 1997</div><div class="line">   November 1997      </div><div class="line">Su Mo Tu We Th Fr Sa  </div><div class="line">                   1  </div><div class="line"> 2  3  4  5  6  7  8  </div><div class="line"> 9 10 11 12 13 14 15  </div><div class="line">16 17 18 19 20 21 22  </div><div class="line">23 24 25 26 27 28 29  </div><div class="line">30   </div><div class="line">##显示2018年全年12个月的日历</div><div class="line">hisen@ubuntu:~$ cal -m 12 -y 2018</div><div class="line">                            2018</div><div class="line">      January               February               March          </div><div class="line">Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  </div><div class="line">    1  2  3  4  5  6               1  2  3               1  2  3  </div><div class="line"> 7  8  9 10 11 12 13   4  5  6  7  8  9 10   4  5  6  7  8  9 10  </div><div class="line">14 15 16 17 18 19 20  11 12 13 14 15 16 17  11 12 13 14 15 16 17  </div><div class="line">21 22 23 24 25 26 27  18 19 20 21 22 23 24  18 19 20 21 22 23 24  </div><div class="line">28 29 30 31           25 26 27 28           25 26 27 28 29 30 31  </div><div class="line">                                                                  </div><div class="line"></div><div class="line">       April                  May                   June          </div><div class="line">Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  </div><div class="line"> 1  2  3  4  5  6  7         1  2  3  4  5                  1  2  </div><div class="line"> 8  9 10 11 12 13 14   6  7  8  9 10 11 12   3  4  5  6  7  8  9  </div><div class="line">15 16 17 18 19 20 21  13 14 15 16 17 18 19  10 11 12 13 14 15 16  </div><div class="line">22 23 24 25 26 27 28  20 21 22 23 24 25 26  17 18 19 20 21 22 23  </div><div class="line">29 30                 27 28 29 30 31        24 25 26 27 28 29 30  </div><div class="line">                                                                  </div><div class="line"></div><div class="line">        July                 August              September        </div><div class="line">Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  </div><div class="line"> 1  2  3  4  5  6  7            1  2  3  4                     1  </div><div class="line"> 8  9 10 11 12 13 14   5  6  7  8  9 10 11   2  3  4  5  6  7  8  </div><div class="line">15 16 17 18 19 20 21  12 13 14 15 16 17 18   9 10 11 12 13 14 15  </div><div class="line">22 23 24 25 26 27 28  19 20 21 22 23 24 25  16 17 18 19 20 21 22  </div><div class="line">29 30 31              26 27 28 29 30 31     23 24 25 26 27 28 29  </div><div class="line">                                            30                    </div><div class="line"></div><div class="line">      October               November              December        </div><div class="line">Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  </div><div class="line">    1  2  3  4  5  6               1  2  3                     1  </div><div class="line"> 7  8  9 10 11 12 13   4  5  6  7  8  9 10   2  3  4  5  6  7  8  </div><div class="line">14 15 16 17 18 19 20  11 12 13 14 15 16 17   9 10 11 12 13 14 15  </div><div class="line">21 22 23 24 25 26 27  18 19 20 21 22 23 24  16 17 18 19 20 21 22  </div><div class="line">28 29 30 31           25 26 27 28 29 30     23 24 25 26 27 28 29  </div><div class="line">                                            30 31                 </div><div class="line">##输出当前日期</div><div class="line">hisen@ubuntu:~$ date</div><div class="line">Tue Mar 14 11:48:14 CST 2017</div><div class="line">##格式化输出年月日</div><div class="line">hisen@ubuntu:~$ date &quot;+%Y-%m-%d&quot;</div><div class="line">2017-03-14</div><div class="line">##格式化输出当前时间</div><div class="line">hisen@ubuntu:~$ date &quot;+%H:%M:%S&quot;</div><div class="line">11:49:10</div><div class="line">##格式化输出年月日时间</div><div class="line">hisen@ubuntu:~$ date &quot;+%Y-%m-%d %H:%M:%S&quot; </div><div class="line">2017-03-14 11:49:18</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[1103 host 'xxx' is not allowed to connect to this mysql]]></title>
      <url>/20170311-1103%20host%20%E2%80%98xxx%E2%80%99%20is%20not%20allowed%20to%20connect%20to%20this%20mysql/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>出现原因：<br>这是由于mysql服务端root用户所对应的客户端权限设置问题。</p><p>默认所对应的客户端地址只有localhost（也就是服务端的机器），</p><p>我们目的是任何地址都可以用root访问mysql服务端。</p><p>解决办法：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ mysql -u root -p</div><div class="line">#进入mysql交互界面</div><div class="line">mysql&gt; use mysql;</div><div class="line">#使用mysql这个库</div><div class="line">mysql&gt; grant all privileges on *.* to &apos;root&apos;@&apos;%&apos; identified by &apos;hisen&apos;; </div><div class="line">#让root可以在任何ip登陆，密码为：hisen</div><div class="line">mysql&gt; flush privileges; </div><div class="line">#刷新</div><div class="line">mysql&gt; exit;</div><div class="line">#退出</div><div class="line">$ service mysql restart</div><div class="line">#重启mysql</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu虚拟机安装MySQL并且开启root远程访问]]></title>
      <url>/20170311-Ubuntu%E5%AE%89%E8%A3%85MySQL%E5%B9%B6%E4%B8%94%E5%BC%80%E5%90%AFroot%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>安装mysql很简单，关键是开启这个远程很坑！！！</p><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><p>1.安装<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install mysql-server</div></pre></td></tr></table></figure><p></p><p>等待完成即可，过程中需要设置密码</p><p>2.查看是否成功<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo netstat -tap | grep mysql</div></pre></td></tr></table></figure><p></p><p>3.登陆mysql<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -u root -p</div></pre></td></tr></table></figure><p></p><p>这条命令回车之后需要输入mysql密码</p><h2 id="二、开启远程访问"><a href="#二、开启远程访问" class="headerlink" title="二、开启远程访问"></a>二、开启远程访问</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf</div><div class="line">#找到bind-address=127.0.0.1直接注释</div><div class="line">$ mysql -u root -p -h</div><div class="line">#登陆mysql</div><div class="line">mysql&gt; use mysql;</div><div class="line">#使用mysql这个库</div><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO root@&quot;%&quot; IDENTIFIED BY &quot;hisen&quot;;</div><div class="line">#把root用户改成可以在任何ip上登陆，并且密码为：hisen</div><div class="line">mysql&gt; flush privileges;</div><div class="line">#刷新</div></pre></td></tr></table></figure><p>重启：service mysql restart</p><p>接下来就可以在navicat里面连接了</p><h2 id="三、注意事项"><a href="#三、注意事项" class="headerlink" title="三、注意事项"></a>三、注意事项</h2><p>因为在网上找的很多教程，都是说改这个配置文件：这个是错误的<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/mysql/my.cf</div></pre></td></tr></table></figure><p></p><p>如果是通过apt-get方式安装的，默认的是第二步那个配置文件</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> sql </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mybatis常用jdbctype]]></title>
      <url>/20170310-mybatis%E5%B8%B8%E7%94%A8jdbctype/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>Mybatis中javaType和jdbcType对应关系</p><table><thead><tr><th style="text-align:left">JDBC Type</th><th style="text-align:left">Java Type</th></tr></thead><tbody><tr><td style="text-align:left">CHAR</td><td style="text-align:left">String</td></tr><tr><td style="text-align:left">VARCHAR</td><td style="text-align:left">String</td></tr><tr><td style="text-align:left">LONGVARCHAR</td><td style="text-align:left">String</td></tr><tr><td style="text-align:left">NUMERIC</td><td style="text-align:left">java.math.BigDecimal</td></tr><tr><td style="text-align:left">DECIMAL</td><td style="text-align:left">java.math.BigDecimal</td></tr><tr><td style="text-align:left">BIT</td><td style="text-align:left">boolean</td></tr><tr><td style="text-align:left">BOOLEAN</td><td style="text-align:left">boolean</td></tr><tr><td style="text-align:left">TINYINT</td><td style="text-align:left">byte</td></tr><tr><td style="text-align:left">SMALLINT</td><td style="text-align:left">short</td></tr><tr><td style="text-align:left">INTEGER</td><td style="text-align:left">int</td></tr><tr><td style="text-align:left">BIGINT</td><td style="text-align:left">long</td></tr><tr><td style="text-align:left">REAL</td><td style="text-align:left">float</td></tr><tr><td style="text-align:left">FLOAT</td><td style="text-align:left">double</td></tr><tr><td style="text-align:left">DOUBLE</td><td style="text-align:left">double</td></tr><tr><td style="text-align:left">BINARY</td><td style="text-align:left">byte[]</td></tr><tr><td style="text-align:left">VARBINARY</td><td style="text-align:left">byte[]</td></tr><tr><td style="text-align:left">LONGVARBINARY</td><td style="text-align:left">byte[]</td></tr><tr><td style="text-align:left">DATE</td><td style="text-align:left">java.sql.Date</td></tr><tr><td style="text-align:left">TIME</td><td style="text-align:left">java.sql.Time</td></tr><tr><td style="text-align:left">TIMESTAMP</td><td style="text-align:left">java.sql.Timestamp</td></tr><tr><td style="text-align:left">CLOB</td><td style="text-align:left">Clob</td></tr><tr><td style="text-align:left">BLOB</td><td style="text-align:left">Blob</td></tr><tr><td style="text-align:left">ARRAY</td><td style="text-align:left">Array</td></tr><tr><td style="text-align:left">DISTINCT</td><td style="text-align:left">mapping of underlying type</td></tr><tr><td style="text-align:left">STRUCT</td><td style="text-align:left">Struct</td></tr><tr><td style="text-align:left">REF</td><td style="text-align:left">Ref</td></tr><tr><td style="text-align:left">DATALINK</td><td style="text-align:left">java.net.URL</td></tr></tbody></table><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> mybatis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SQL优化之小细节 - 点滴记录]]></title>
      <url>/20170309-SQL%E4%BC%98%E5%8C%96%E4%B9%8B%E5%B0%8F%E7%BB%86%E8%8A%82%20-%20%E7%82%B9%E6%BB%B4%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>不知道现在是不是还很多人首先就把关联的id放在where的第一位</p><p>这里有一个简单的对比，情况相同的时候，两个sql的时间相差八倍</p><p>优：0.077s<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">SELECT ew.all_amt ,</div><div class="line">       ew.customer_id,</div><div class="line">       cf.id,</div><div class="line">       cf.cert_id,</div><div class="line">       cf.acct_type</div><div class="line">FROM ew_quota_info ew,</div><div class="line">     cf_customer cf</div><div class="line">WHERE cf.acct_type in(2,3)</div><div class="line">  AND ew.customer_id = cf.id</div></pre></td></tr></table></figure><p></p><p>劣：0.630s<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">SELECT ew.all_amt ,</div><div class="line">       ew.customer_id,</div><div class="line">       cf.id,</div><div class="line">       cf.cert_id,</div><div class="line">       cf.acct_type</div><div class="line">FROM ew_quota_info ew,</div><div class="line">     cf_customer cf</div><div class="line">WHERE ew.customer_id = cf.id</div><div class="line">  AND cf.acct_type in(2,3)</div></pre></td></tr></table></figure><p></p><p>上述原因：where子句从后往前执行，应该把大的过滤条件放在后面<br>记录时间：2017年3月9日 10:44:59</p><hr><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> sql </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> sql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu重装系统 - 在ubuntu系统下重新安装]]></title>
      <url>/20170305-ubuntu%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F%20-%20%E5%9C%A8ubuntu%E7%B3%BB%E7%BB%9F%E4%B8%8B%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>有时候在linux环境下需要重新安装一下系统</p><p>这里我就说一下今天我安装的方法。</p><p>下载好ubuntu的镜像，随便放在一个非系统盘的根目录下</p><p>改名为：ubuntu.iso<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">sudo chmod 777 /boot/grub/grub.cfg</div><div class="line">sudo vi  /boot/grub/grub.cfg</div><div class="line">#在 export linux_gfx_mode 下面添加如下内容</div><div class="line">menuentry &quot;install  ubuntu powered by hisen&quot; &#123;</div><div class="line">  search --set -f /ubuntu.iso</div><div class="line">  loopback loop /ubuntu.iso</div><div class="line">  set root=(loop)</div><div class="line">  linux /casper/vmlinuz.efi boot=casper iso-scan/filename=/ubuntu.iso</div><div class="line">  initrd /casper/initrd.lz</div><div class="line">  boot</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>保存退出，重启就会进入系统。</p><p>桌面上点击那个安装的图标即可完成重装</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu 16 安装IDEA 并且设置快捷启动]]></title>
      <url>/20170304-Ubuntu%2016%20%E5%AE%89%E8%A3%85IDEA%20%E5%B9%B6%E4%B8%94%E8%AE%BE%E7%BD%AE%E5%BF%AB%E6%8D%B7%E5%90%AF%E5%8A%A8/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>安装简单，下载官网的文件(with java的比较方便)</p><p>解压之后在bin目录下执行<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo sh idea.sh</div></pre></td></tr></table></figure><p></p><p>就会进入安装程序，接下来会跳出图形界面，跟windows差不多的步骤</p><p>没有激活码可以看之前的文章</p><p>关键的一个是我发现网上说的建立桌面快捷方式不行</p><p>就这样弄个方便的<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cd ~</div><div class="line">ln -s /idea home/bin/idea.sh idea</div><div class="line">#接下来执行 idea &amp; 就可以打开，如果提示权限不够</div><div class="line">#就执行 sudo idea &amp;</div><div class="line">sudo idea &amp;</div><div class="line">#后面的 &amp; 代表后台运行的意思，不影响控制台</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> idea </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[idea jrebel 7.0 破解 - 获取JRebel激活码]]></title>
      <url>/20170303-idea%20jrebel%207.0%20%E7%A0%B4%E8%A7%A3%20-%20%E8%8E%B7%E5%8F%96JRebel%E6%BF%80%E6%B4%BB%E7%A0%81/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>其实这玩意完全不要破解，直接官网注册就会给一个注册码</p><p>注册地址：<a href="https://zeroturnaround.com/software/jrebel/download/" target="_blank">https://zeroturnaround.com</a></p><p>注册完了之后在IDEA里面去设置，会提醒激活。</p><p>tomcat部署了项目之后，点击JR启动是可以热部署的！！！</p><p>改了java代码都不要重新启动项目，哈哈！！！</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> idea </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IDEA failed to create jvm:error code -1]]></title>
      <url>/20170303-idea%20failed%20to%20create%20jvm%20error%20code%20-1/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>今天先更改了 idea64.exe.vmoptions 这个配置文件</p><p>一直么有重启，后来就安装了个插件重启一下，结果就泪崩了</p><p>一直出现这个错误<br><img src="http://wx4.sinaimg.cn/mw690/b2e389b6gy1fd9suz8h9dj20db06ujr9.jpg" alt="IDEA failed to create jvm:error code -1,jvm:error code -1"><br>总以为是环境变量配置的问题，或者是文件损坏了什么</p><p>重启，重装jdk，重新配置什么都试过，不管用。</p><p>后来替换了配置文件就好了！！！</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>配置文件路径：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">\IDEA HOME\bin\idea64.exe.vmoptions</div><div class="line">或者</div><div class="line">\IDEA HOME\bin\idea.exe.vmoptions</div></pre></td></tr></table></figure><p></p><p>默认配置文件内容如下：</p><p>32bit<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">-server</div><div class="line">-Xms128m</div><div class="line">-Xmx512m</div><div class="line">-XX:ReservedCodeCacheSize=240m</div><div class="line">-XX:+UseConcMarkSweepGC</div><div class="line">-XX:SoftRefLRUPolicyMSPerMB=50</div><div class="line">-ea</div><div class="line">-Dsun.io.useCanonCaches=false</div><div class="line">-Djava.net.preferIPv4Stack=true</div><div class="line">-XX:+HeapDumpOnOutOfMemoryError</div><div class="line">-XX:-OmitStackTraceInFastThrow</div></pre></td></tr></table></figure><p></p><p>64bit<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">-Xms128m</div><div class="line">-Xmx750m</div><div class="line">-XX:ReservedCodeCacheSize=240m</div><div class="line">-XX:+UseConcMarkSweepGC</div><div class="line">-XX:SoftRefLRUPolicyMSPerMB=50</div><div class="line">-ea</div><div class="line">-Dsun.io.useCanonCaches=false</div><div class="line">-Djava.net.preferIPv4Stack=true</div><div class="line">-XX:+HeapDumpOnOutOfMemoryError</div><div class="line">-XX:-OmitStackTraceInFastThrow</div></pre></td></tr></table></figure><p></p><p>by the way:</p><p>IDEA 写博客真是舒服啊~</p><p>完全不用切换来切换去的！</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[count函数效率问题 - 了解count函数]]></title>
      <url>/20170303-count%E5%87%BD%E6%95%B0%E6%95%88%E7%8E%87%E9%97%AE%E9%A2%98%20-%20%E4%BA%86%E8%A7%A3count%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><h2 id="count函数的作用"><a href="#count函数的作用" class="headerlink" title="count函数的作用"></a>count函数的作用</h2><p>想要真正的理解count函数，我们就必须明白count函数的作用。</p><p>作用一：统计某一列非空(not null)值得数量，即统计某列有值得结果数,使用count(col)。</p><p>作用二：统计结果集的行数，此时不用管某列是否为null值。即使用count(*).</p><p>明白了这点，我们就应该知道MySQL的count(*)并不是想象中的那样，统计每一列的值，而是直接忽视掉所有列，直接统计行数，那么它的效率肯定是很高的。</p><p>但是有一点，当col指定了该字段为NOT NULL时实际上，MySQL会自动将count(col)转为count(*),但是这样也同样耗费了些时间，如果col没有指定为NOT NULL的话，那么效率就更低了，MySQL就必须要判断每一行的值是否为空。</p><p>所以综上所述，如果是要统计行数最好优先使用select count(*)</p><p>当统计某一列等于多少的值得时候可以使用下面两种方法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SELECT SUM(IF(id = 23,1,0)) FROM table </div><div class="line">SELECT COUNT(id = 23 OR NULL) FROM table</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[利用IDEA写Hexo博客的一些技巧]]></title>
      <url>/20170303-%E5%88%A9%E7%94%A8IDEA%E5%86%99Hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%80%E4%BA%9B%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>今天偶然看到有人说用idea写博客</p><p>刚开始我觉得这样会很麻烦，后来想想以前写博客也是醉了</p><p>先新建一个 _post 的快捷方式</p><p>进去，然后到博客根目录</p><p>打开Git Bash，然后执行<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo n &quot;你要写的文章题目&quot;</div></pre></td></tr></table></figure><p></p><p>然后在 _post 快捷方式打开刚刚新建的markdown文件，用markdownpad打开编辑。。。</p><p>编辑完了回到Git Bash。。。。想想就很麻烦</p><hr><p>于是乎用IDEA打开博客根目录<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sources -&gt; _post -&gt; new -&gt; Edit File Templates</div></pre></td></tr></table></figure><p></p><a id="more"></a><p>name：markdown extension：md<br>内容：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: $&#123;NAME&#125;</div><div class="line">keywords: []</div><div class="line">date: $&#123;DATE&#125; $&#123;TIME&#125;</div><div class="line">tags: []</div><div class="line">categories:</div><div class="line">---</div></pre></td></tr></table></figure><p></p><p>接下来apply -&gt; *.md -&gt; 下面选择markdown</p><p>以后新建markdown文件就会默认带上这个模版</p><p>效果<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">title: 利用IDEA写Hexo博客的一些技巧</div><div class="line">keywords: []</div><div class="line">date: 2017/3/3 10:51</div><div class="line">tags: []</div><div class="line">categories: hexo</div></pre></td></tr></table></figure><p></p><p>接下来到了发布的时间，于是我们可以设置一下Terminal（在setting里面），设置为bash（git目录下）</p><p>设置完了之后Alt + F12 调出 Terminal 即可进行git操作</p><p>到此，大功告成，我要去更新博客了</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> idea </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IDEA 貌似注解失效 - 报错：cannot resolve method xxx]]></title>
      <url>/20170301-IDEA-%E8%B2%8C%E4%BC%BC%E6%B3%A8%E8%A7%A3%E5%A4%B1%E6%95%88-%E6%8A%A5%E9%94%99%EF%BC%9Acannot-resolve-method-xxx/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>在java平台上lombok提供了简单的注解的形式</p><p>来帮助我们消除一些必须有但看起来很臃肿的代码</p><p>比如属性的get/set，及对象的toString等方法，特别是相对于 POJO;</p><hr><h2 id="出现问题"><a href="#出现问题" class="headerlink" title="出现问题"></a>出现问题</h2><ol><li>各种log方法，set方法中红色波浪线</li><li>提示：cannot resolve method xxx</li><li>虽然出现错误但是编译是可以通过的</li></ol><h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>原来的代码用了lombok简单注解<br>比如maven的pom.xml文件有如下配置<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">	&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;lombok&lt;/artifactId&gt;</div><div class="line">	&lt;version&gt;1.16.8&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure><p></p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>安装<strong>lombok plugin</strong></p><hr><p>装完插件之后就舒服了，也不报错</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> idea </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IDEA Denpendencies红色波浪线报错,所有的包无法导入 - 一种解决办法]]></title>
      <url>/20170228-IDEA-Denpendencies%E7%BA%A2%E8%89%B2%E6%B3%A2%E6%B5%AA%E7%BA%BF%E6%8A%A5%E9%94%99-%E6%89%80%E6%9C%89%E7%9A%84%E5%8C%85%E6%97%A0%E6%B3%95%E5%AF%BC%E5%85%A5-%E4%B8%80%E7%A7%8D%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">failed to read artifact descriptor for xxx：jar</div></pre></td></tr></table></figure><p>一下午那代码里面是各种报错</p><p>凡是引入的大部分都报错</p><p>原因就是maven管理的jar没有添加上依赖</p><p>最后在stackoverflow找到了良药</p><p>上面有图片，错误会详细一点，如果你的也相同，可以试一试<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">maven project -&gt; Execute Maven Goal -&gt; mvn -U clean install</div></pre></td></tr></table></figure><p></p><p>执行以上命令之后等待完成，应该就好了</p><p>参考自stackoverflow：<a href="http://stackoverflow.com/questions/11454822/import-maven-dependencies-in-intellij-idea" target="_blank">点击查看</a></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> idea </tag>
            
            <tag> Maven </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何学习NIO - NIO简单的例子]]></title>
      <url>/20170227-%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0NIO-NIO%E7%AE%80%E5%8D%95%E7%9A%84%E4%BE%8B%E5%AD%90/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>这里参照一些例子写了个简单的CS模型</p><p>例子代码：<a href="https://github.com/hisen-yuan/Practice/tree/master/src/com/hisen/nio/cs" target="_blank">NIO应用之简单的CS模型</a></p><p>可以用来简单的理解一下java nio</p><hr><p>深入的理解可以看看下面的链接。</p><p>Java NIO 系列教程:<a href="http://www.iteye.com/magazines/132-Java-NIO" target="_blank">点击查看</a></p><p>如何学习Java的NIO？:<a href="https://www.zhihu.com/question/29005375" target="_blank">点击查看</a></p><hr><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> nio </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[java.lang.IllegalArgumentException: addChild:  Child name '/hisen' is not unique]]></title>
      <url>/20170227-java-lang-IllegalArgumentException-addChild-Child-name-hisen-is-not-unique/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>报错如下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">27-Feb-2017 12:53:31.268 严重 [RMI TCP Connection(13)-127.0.0.1] org.apache.tomcat.util.modeler.BaseModelMBean.invoke Exception invoking method manageApp</div><div class="line"> java.lang.IllegalArgumentException: addChild:  Child name &apos;/hisen&apos; is not unique</div><div class="line">	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:738)</div><div class="line">	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:728)</div><div class="line">	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:734)</div><div class="line">	at org.apache.catalina.startup.HostConfig.manageApp(HostConfig.java:1702)</div><div class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</div><div class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)</div><div class="line">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</div><div class="line">	at java.lang.reflect.Method.invoke(Method.java:606)</div><div class="line">	at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:300)</div><div class="line">	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)</div><div class="line">	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)</div><div class="line">	at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:482)</div><div class="line">	at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:431)</div><div class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</div><div class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)</div><div class="line">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</div><div class="line">	at java.lang.reflect.Method.invoke(Method.java:606)</div><div class="line">	at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:300)</div><div class="line">	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)</div><div class="line">	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)</div><div class="line">	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1487)</div><div class="line">	at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:97)</div><div class="line">	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1328)</div><div class="line">	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1420)</div><div class="line">	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:848)</div><div class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</div><div class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)</div><div class="line">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</div><div class="line">	at java.lang.reflect.Method.invoke(Method.java:606)</div><div class="line">	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:322)</div><div class="line">	at sun.rmi.transport.Transport$1.run(Transport.java:177)</div><div class="line">	at sun.rmi.transport.Transport$1.run(Transport.java:174)</div><div class="line">	at java.security.AccessController.doPrivileged(Native Method)</div><div class="line">	at sun.rmi.transport.Transport.serviceCall(Transport.java:173)</div><div class="line">	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:556)</div><div class="line">	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:811)</div><div class="line">	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:670)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)</div><div class="line">	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)</div><div class="line">	at java.lang.Thread.run(Thread.java:744)</div></pre></td></tr></table></figure><p></p><p>重要的是：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">org.apache.tomcat.util.modeler.BaseModelMBean.invoke Exception invoking method manageApp</div><div class="line"> java.lang.IllegalArgumentException: addChild:  Child name &apos;/hisen&apos; is not unique</div></pre></td></tr></table></figure><p></p><h2 id="IDEA解决办法"><a href="#IDEA解决办法" class="headerlink" title="IDEA解决办法"></a>IDEA解决办法</h2><p>Project Structure -&gt; Artifacts</p><p>查看里面是否有配置相同的Artifacts</p><p>删除即可</p><!-- rebuild by neat -->]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[查看linux进程 - 多重方式]]></title>
      <url>/20170227-%E6%9F%A5%E7%9C%8Blinux%E8%BF%9B%E7%A8%8B-%E5%A4%9A%E9%87%8D%E6%96%B9%E5%BC%8F/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>可以使用ps命令。<br>它能显示当前运行中进程的相关信息，包括进程的PID。</p><p>Linux和UNIX都支持ps命令，显示所有运行中进程的相关信息。</p><p>ps命令能提供一份当前进程的<strong>快照</strong>。如果想状态可以自动刷新，可以使用top命令。</p><h2 id="ps命令"><a href="#ps命令" class="headerlink" title="ps命令"></a>ps命令</h2><p>输入下面的ps命令，显示所有运行中的进程：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps aux | less</div></pre></td></tr></table></figure><p></p><p><strong>这个命令按 q 退出</strong><br>后面加了“<strong>| less</strong>”就会分页显示，如果去掉会一次性显示出所有结果</p><p>输出：<br><a id="more"></a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">hisen@hisen-server:~$ ps aux | less</div><div class="line">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</div><div class="line">root         1  0.2  0.5  37956  6028 ?        Ss   09:03   0:02 /sbin/init</div><div class="line">root         2  0.0  0.0      0     0 ?        S    09:03   0:00 [kthreadd]</div><div class="line">root         3  0.0  0.0      0     0 ?        S    09:03   0:00 [ksoftirqd/0]</div><div class="line">root         4  0.0  0.0      0     0 ?        S    09:03   0:00 [kworker/0:0]</div><div class="line">root         5  0.0  0.0      0     0 ?        S&lt;   09:03   0:00 [kworker/0:0H]</div><div class="line">root         6  0.0  0.0      0     0 ?        S    09:03   0:00 [kworker/u2:0]</div><div class="line">root         7  0.0  0.0      0     0 ?        S    09:03   0:00 [rcu_sched]</div><div class="line">root         8  0.0  0.0      0     0 ?        S    09:03   0:00 [rcu_bh]</div><div class="line">root         9  0.0  0.0      0     0 ?        S    09:03   0:00 [migration/0]</div><div class="line">root        10  0.0  0.0      0     0 ?        S    09:03   0:00 [watchdog/0]</div><div class="line">root        11  0.0  0.0      0     0 ?        S    09:03   0:00 [kdevtmpfs]</div><div class="line">root        12  0.0  0.0      0     0 ?        S&lt;   09:03   0:00 [netns]</div><div class="line">root        13  0.0  0.0      0     0 ?        S&lt;   09:03   0:00 [perf]</div><div class="line">root        14  0.0  0.0      0     0 ?        S    09:03   0:00 [khungtaskd]</div><div class="line">root        15  0.0  0.0      0     0 ?        S&lt;   09:03   0:00 [writeback]</div><div class="line">root        16  0.0  0.0      0     0 ?        SN   09:03   0:00 [ksmd]</div><div class="line">root        17  0.0  0.0      0     0 ?        SN   09:03   0:00 [khugepaged]</div><div class="line">root        18  0.0  0.0      0     0 ?        S&lt;   09:03   0:00 [crypto]</div><div class="line">root        19  0.0  0.0      0     0 ?        S&lt;   09:03   0:00 [kintegrityd]</div><div class="line">root        20  0.0  0.0      0     0 ?        S&lt;   09:03   0:00 [bioset]</div><div class="line">root        21  0.0  0.0      0     0 ?        S&lt;   09:03   0:00 [kblockd]</div><div class="line">root        22  0.0  0.0      0     0 ?        S&lt;   09:03   0:00 [ata_sff]</div><div class="line">root        23  0.0  0.0      0     0 ?        S&lt;   09:03   0:00 [md]</div><div class="line">root        24  0.0  0.0      0     0 ?        S&lt;   09:03   0:00 [devfreq_wq]</div><div class="line">root        25  0.0  0.0      0     0 ?        S    09:03   0:00 [kworker/u2:1]</div><div class="line">root        26  0.0  0.0      0     0 ?        S    09:03   0:00 [kworker/0:1]</div><div class="line">root        28  0.0  0.0      0     0 ?        S    09:03   0:00 [kswapd0]</div><div class="line">root        29  0.0  0.0      0     0 ?        S&lt;   09:03   0:00 [vmstat]</div><div class="line">root        30  0.0  0.0      0     0 ?        S    09:03   0:00 [fsnotify_mark]</div><div class="line">root        31  0.0  0.0      0     0 ?        S    09:03   0:00 [ecryptfs-kthrea]</div><div class="line">:</div></pre></td></tr></table></figure><p></p><hr><h2 id="查看系统中的每个进程"><a href="#查看系统中的每个进程" class="headerlink" title="查看系统中的每个进程"></a>查看系统中的每个进程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ps -A</div><div class="line">ps -e</div></pre></td></tr></table></figure><p>-A：显示所有进程</p><p>a：显示终端中包括其它用户的所有进程</p><p>x：显示无控制终端的进程</p><h2 id="显示进程的树状图"><a href="#显示进程的树状图" class="headerlink" title="显示进程的树状图"></a>显示进程的树状图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pstree</div></pre></td></tr></table></figure><p>输出<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">hisen@hisen-server:~$ pstree</div><div class="line">systemd─┬─accounts-daemon─┬─&#123;gdbus&#125;</div><div class="line">        │                 └─&#123;gmain&#125;</div><div class="line">        ├─acpid</div><div class="line">        ├─agetty</div><div class="line">        ├─atd</div><div class="line">        ├─cron</div><div class="line">        ├─dbus-daemon</div><div class="line">        ├─dhclient</div><div class="line">        ├─2*[iscsid]</div><div class="line">        ├─java───14*[&#123;java&#125;]</div><div class="line">        ├─lvmetad</div><div class="line">        ├─lxcfs───2*[&#123;lxcfs&#125;]</div><div class="line">        ├─mdadm</div><div class="line">        ├─polkitd─┬─&#123;gdbus&#125;</div><div class="line">        │         └─&#123;gmain&#125;</div><div class="line">        ├─redis-server───2*[&#123;redis-server&#125;]</div><div class="line">        ├─rsyslogd─┬─&#123;in:imklog&#125;</div><div class="line">        │          ├─&#123;in:imuxsock&#125;</div><div class="line">        │          └─&#123;rs:main Q:Reg&#125;</div><div class="line">        ├─snapd───5*[&#123;snapd&#125;]</div><div class="line">        ├─sshd───sshd───sshd───bash───pstree</div><div class="line">        ├─systemd───(sd-pam)</div><div class="line">        ├─systemd-journal</div><div class="line">        ├─systemd-logind</div><div class="line">        ├─systemd-timesyn───&#123;sd-resolve&#125;</div><div class="line">        └─systemd-udevd</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java开发的一点思考]]></title>
      <url>/20170226-Java%E5%BC%80%E5%8F%91%E7%9A%84%E4%B8%80%E7%82%B9%E6%80%9D%E8%80%83/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>目前的形式来说java后台市场还是挺大，虽然也有很多python和php的系统。</p><p>要想从事企业级的项目开发，你必须掌握如下要点：</p><ol><li>掌握项目开发的基本步骤</li><li>具备极强的面向对象的分析与设计技巧</li><li>掌握用例驱动、以架构为核心的主流开发方法</li></ol><p>没有人愿意自己一辈子就满足于掌握了一些代码实现的技巧，</p><p>别人告诉你要实现什么，你就用代码堆砌来实现别人的要求！</p><p>你必须学会从整个项目的角度去思考！</p><p>你必须学会假如你是项目经理，你该如何思考！</p><p>你必须学会假如你是架构师，你该如何思考！</p><p>你必须掌握针对某个特定问题领域的分析方法！</p><h2 id="关于基础知识："><a href="#关于基础知识：" class="headerlink" title="关于基础知识："></a>关于基础知识：</h2><a id="more"></a><h2 id="JavaSE"><a href="#JavaSE" class="headerlink" title="JavaSE"></a>JavaSE</h2><ul><li><strong>基本语法、数据类型、操作符等</strong>：int、long、Integer、Long、if、else、for、while</li><li><strong>面向对象</strong>：class（类）、Object（对象）、instance（实例）、state（状态）、behavior（行为）、field、method、new、可见性（访问控制）、attribute、property、package、import、static variable、class variable、instance variable、heap、method area、stack、GC（垃圾回收）、override、overload、对象转型(casting)、多态、this、super</li><li><strong>异常处理</strong>：理解编译期错误和运行期错误的区别、Exception、RuntimeException、checked exception、unchecked exception、try、catch、finally、throw new XXXException、throws XXXException、异常处理的基本原则</li><li><strong>数组与集合</strong>：数组的定义和使用方法、Collection、List、Set、Map、ArrayList、HashSet、HashMap、Iterator、equals、hashCode、Comparable、Comparator</li><li><strong>常用类</strong>：String、intern、常量池、StringBuffer、java.util.Date、SimpleDateFormat、Regex（正则表达式）</li><li><strong>反射机制</strong>：Class、Method、Field、invoke、newInstance、BeanUtils（apache-commons）、PropertyUtils（apache-commons）</li><li><strong>输入输出流</strong>：InputStream、OutputStream、Reader、Writer、Adapter设计模式与原始流类、Decorator设计模式与包装流类、对象序列化和反序列化</li><li><strong>多线程</strong>：Thread、Runnable、sleep、wait、notify、synchronized、lock</li></ul><h2 id="Servlet和JSP"><a href="#Servlet和JSP" class="headerlink" title="Servlet和JSP"></a>Servlet和JSP</h2><ul><li><p>HttpServlet、doGet、doPost、HttpServletRequest、HttpServletResponse、request.getParameter()、request.setAttribute()、request.getAttribute()、request.getSession()、ServletContext、Filter、web.xml、tomcat、forward与redirect、http协议的无状态性、cookie、JSP Scope Object、<c:out …="">、<c:foreach …=""></c:foreach></c:out></p></li><li><p>HTML与JavaScript:你需要能够理解常见的网页标签、理解在网页中引入JavaScript的方法、以及JavaScript的基本语法与使用方法</p></li></ul><p>以上，就是你进一步学习Java所必备的基本知识。</p><p>特别是一些个专业术语和名词，看到这些名词，如果你像看到亲爹一样亲切，</p><p>那么说明你对Java的基础知识就很熟悉了,<strong>记住，仅仅是熟悉了</strong></p><h2 id="接下来是SSH"><a href="#接下来是SSH" class="headerlink" title="接下来是SSH"></a>接下来是SSH</h2><p>对于初学者来说，这三大框架被赋予了太多神秘的色彩，似乎它们是重中之重的知识！但是对于拥有多年Java开发经验的专业技术人员来说，对于那些Java牛人来说，却对这三大框架不太感冒！难道它们不重要吗？</p><p>现在很多企业都在用这三大框架，所以很多企业也把掌握这三大框架作为招聘的必备条件。不可否认的是，也有很多大型企业没有用这三大框架，这些企业经过多年发展，自身已经有一定的技术积累，也形成了自己独特的技术框架体系。这三大框架既可以说很重要，也可以说不重要。</p><p>说重要的原因在于：这三大框架对JavaEE开发中所存在的普遍的问题，提供了优美的解决方案，它们蕴含了这个行业中最NB的开发人员的努力和想法，所以，学习这三大框架，你就可以窥探到这些处于技术巅峰的牛人们究竟对一个问题是怎么想的，通过一种什么样的设计思路去解决问题的。所以，对于你来说，你没有太多项目开发的经验，经验是什么？经验就是你知道可能会遇到哪些问题，针对哪个问题可以有哪些解决方法，在某个情景下，哪种解决方法是较好的，哪种方法不太好等等！如果你没做过什么项目，你根本就不会去意识到你可能会遇到哪些问题，而这些问题往往又是非常关键的！解决得不好，会影响到你的程序的稳定性、可扩展性等等！三大框架就给初学者提供了了解你以后可能会遇到哪些问题，以及针对这些问题的解决方案！</p><p>当你了解了这三大框架为什么是重要的，那么你也就能理解，为什么这三大框架也可以说是不重要的。如果你曾经开发过很多项目，你碰到了各种各样的问题，凭着你的技术功底，逐个击破了这些问题，在这些人眼里，三大框架（是不是还有N个框架？呵呵）都是浮云！</p><p>你属于哪一种人呢？如果你没有太多项目开发经验，那么三大框架对于你来说就是非常重要的！而且，由此你也知道了该怎么去学这三大框架。对于三大框架的学习而言，着力点在于给你展示问题，并触发你自己主动的思考，我们鼓励你提出自己的想法，也许你的想法很白痴，但那毕竟是你自己的想法，如果你不知道牛人的想法，那你怎么知道自己的想法是很白痴的呢？在这种思想的碰撞过程中，你就会逐渐提高自己！所以，三大框架学完之后，你不应该只是看到一大堆配置文件，你不应该只是看到了一些Action，一些Service，一些映射文件，你不应该只知道session.save/update/delete，你不应该只是知道struts2中有一堆interceptor，你不应该只是看到一堆jar包……</p><p>如果你只是知道拷贝一堆jar包，定义一系列配置文件之后，SSH三大框架就能够运行起来了，也可以给你干活了，那么，很悲哀的是，<strong>你仍然没有掌握三大框架的精粹！</strong>请你回答以下问题：</p><hr><p><strong>Struts2</strong>：</p><ul><li>为什么每次请求都要创建一个Action对象？</li><li>ModelDriven拦截器的配置中refreshModelBeforeResult解决了什么问题？</li><li>为什么在web.xml中配置的StrutsPrepareAndExecuteFilter要过滤所有的请求？</li><li>请你给我谈谈ValueStack？</li><li>Struts2是如何实现MVC设计模式的？</li></ul><hr><p><strong>Spring</strong>：</p><ul><li>你为什么要用Spring？</li><li>请你聊一聊IOC/DI？</li><li>什么是声明式的事务管理？为什么要使用声明式的事务管理？Spring如何实现声明式的事务管理？</li><li>把spring和hibernate集成，定义事务管理特性的时候，为何要将除了添加、删除、更新操作之外的方法，即主要执行查询任务的方法定义为read-only？</li></ul><hr><p><strong>Hibernate</strong>：</p><ul><li>请你谈谈你对ORM映射的理解？</li><li>很多人说Hibernate不适合大项目，性能有问题，你是如何理解的？</li><li>Hibernate为什么一定要定义一个数据库标识？</li><li>为什么Hibernate建议你的实体类实现hashCode和equals方法？</li><li>谈谈你对Hibernate实体类中的数据库标识与数据库主键之间关系的认识？</li><li>谈谈你对Hibernate关联映射与数据库外键之间关系的认识？</li><li>调用session.save()方法，hibernate一定会发出insert语句吗？谈谈你的理解</li><li>调用session.update()方法，hibernate一定会发出update语句吗？谈谈你的理解</li><li>请你聊一下以下名词、概念或用法：lazy、lazy=”extra”、inverse、fetch、fetch=”join”、fetch=”subselect”、batch-size</li><li>配置了lazy=”true”一定会实现懒加载吗？</li><li>请你谈谈Hibernate中的“N+1”问题</li><li>请你谈谈Hibernate有哪些最佳实践？</li></ul><p>以上并非SSH中全部重点的问题，但它们能考察你能否灵活运用SSH框架！如果你能深刻理解这些问题，再配以合适的实战项目训练，你也会逐渐成为牛人！</p><h2 id="最后是项目开发能力-："><a href="#最后是项目开发能力-：" class="headerlink" title="最后是项目开发能力 ##："></a>最后是项目开发能力 ##：</h2><p>不管你是学Java还是别的技术，你的根本目的在于给客户创造价值！否则，你下大力气学习的东西，随着技术的进步和更新，很快就会过时！所以，技术的核心在于用技术创造有价值的成果！也就是说，客户需要什么，你就要用技术把客户需要的东西给他造出来！一个公司之所以要用各种福利条件极力挽留你，是因为你能够给公司带来极高的利益！那么，你有什么可以给公司利用的呢？公司最看重你的哪方面的能力呢？</p><p>做项目需要的能力很多，其中最核心最基础的就是建模能力（现在最主流的就是面向对象建模！）。什么是建模能力呢？</p><hr><p><strong>我给大家一个面试题</strong>：<br>一个保险公司的保险卡管理模块：销售人员领取保险卡信息（保险卡数量、卡号、领取日期），然后直接销售给客户，销售完毕后，将保险卡信息录入保险公司系统内部（销售人员信息、购买人信息、购买的保险卡数量、卡号等），客户登录保险公司网站激活保险卡，需要填写（保险卡卡号、激活密码、被保险人信息、受益人信息）</p><p>要求就是：如果这个模块交给你来做，你要怎么做？你要解决哪些问题？你可否画个图，给我描述一下你的想法是什么吗？</p><p>这只是一个面试题而已，因为只有简单几句话，所以我把它放到这里，让大家感受一下所谓建模要解决什么问题。而业务领域的问题实在是太多了！也许一个几十上百页的需求文档才能把某个业务领域的问题描述清楚，而你的职责就是要把它们实现出来！</p><p>某个公司要开发一个考勤管理系统，要求与现有的人力资源系统对接，你是主要的技术负责人，那么，你要做哪些工作呢？</p><p>某ERP项目要实现一个排班管理模块，交给你去完成，你如何去完成呢？</p><hr><p>不要抱怨项目经理给你的信息太少（只有几句话），不要抱怨客户没有描述清楚他们的需求……你的价值就在于理顺所有的问题，用各种手段获得你想要的信息，按照一定的思路汇总，并在特定的时间里逐个解决它！</p><p>你应该意识到学Java不是一个坦克大战、一个网络飞车、一个CMS、一个DRP、一个OA那么简单，你不要沉迷于那些技术细节（虽然也是有必要的，但不要钻牛角尖），不要满足于实现了CRUD式的项目需求（虽然这是基础中的基础），在你的前方，永远有一个目标在那里，需要你去努力追赶！</p><p>今后你将面对更加繁杂的需求，你学习项目的唯一目的，就是：学习如何将需求转化为实现，如何对需求进行分析，如何建立概念模型，如何理顺各种概念之间的关系，如何进行设计，如何选择合适的技术来实现你的设计方案，如何对你的实现进行测试，如何解决你所遇到的形形色色的问题（性能、需求变更等）。当你真正到公司里面从事了几年开发之后，你就会同意我的说法！</p><hr><p>利用Java找工作，需要的就是项目经验，项目经验就是理解项目开发的基本过程，理解项目的分析方法，理解项目的设计思路，理解项目的实现技巧，理解项目的测试方法，理解项目中各种问题的解决方案。</p><hr><p>码农只是复制粘贴，并不注重原理，说不出所以然，所以做了几年还只能是码农。</p><p>加油，共勉！</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu 16 LTS 安装zookeeper并开机启动]]></title>
      <url>/20170224-Ubuntu-16-LTS-%E5%AE%89%E8%A3%85zookeeper%E5%B9%B6%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><h1 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install zookeeper</div></pre></td></tr></table></figure><p>默认信息<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#安装路径</div><div class="line">/usr/share/zookeeper</div><div class="line">#配置文件</div><div class="line">/etc/zookeeper/conf/zoo.cfg</div></pre></td></tr></table></figure><p></p><h1 id="二、启动服务端"><a href="#二、启动服务端" class="headerlink" title="二、启动服务端"></a>二、启动服务端</h1><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hisen@hisen-server:/usr/share/zookeeper/bin$ sudo sh zkServer.sh</div></pre></td></tr></table></figure><p>如果报错<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">zkServer.sh: 81: /home/xxx/zookeeper-3.4.6/bin/zkEnv.sh: Syntax error: &quot;(&quot; unexpected (expecting &quot;fi&quot;)</div><div class="line">网上找了一圈原因，大概意思就是脚本里面用到的shell版本与系统当前使用的shell版本不兼容，导致异常。</div><div class="line">查看当前ubuntu系统的shell，默认是使用dash，但是脚本里面是使用的bash，问题就在这里了。</div><div class="line">解决步骤：</div><div class="line">修改当前系统的shell版本：</div><div class="line">dpkg-reconfigure dash</div><div class="line">Tab 移动到NO 回车即可(选择否)</div></pre></td></tr></table></figure><p></p><h1 id="三、验证是否成功"><a href="#三、验证是否成功" class="headerlink" title="三、验证是否成功"></a>三、验证是否成功</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hisen@hisen-server:/usr/share/zookeeper/bin$ sudozkCli.sh -server localhost:2181</div><div class="line">WatchedEvent state:SyncConnected type:None path:null</div><div class="line">[zk: localhost:2181(CONNECTED) 0]</div></pre></td></tr></table></figure><p>出现上面的信息说明成功了</p><h1 id="四、设置开机启动"><a href="#四、设置开机启动" class="headerlink" title="四、设置开机启动"></a>四、设置开机启动</h1><p>1.创建配置文件<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/init.d/zookeeper</div></pre></td></tr></table></figure><p></p><p>添加以下信息，注意自己的相关路径是否相同，不同修改之<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh</div><div class="line">#Configurations injected by install_server below....</div><div class="line">EXEC=/usr/share/zookeeper/bin/zkServer.sh</div><div class="line">ZOO_LOG_DIR=&quot;/var/zookeeper&quot;</div><div class="line">JAVA_HOME=/usr/hisen/soft/jdk8 </div><div class="line">PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</div><div class="line">###############</div><div class="line"># SysV Init Information</div><div class="line"># chkconfig: - 58 74</div><div class="line"># description: zookeeper is the zookeeper daemon.</div><div class="line">### BEGIN INIT INFO</div><div class="line"># Provides: zookeeper</div><div class="line"># Required-Start: $network $local_fs $remote_fs</div><div class="line"># Required-Stop: $network $local_fs $remote_fs</div><div class="line"># Default-Start: 2 3 4 5</div><div class="line"># Default-Stop: 0 1 6</div><div class="line"># Should-Start: $syslog $named</div><div class="line"># Should-Stop: $syslog $named</div><div class="line"># Short-Description: start and stop zookeeper</div><div class="line"># Description: zookeeper daemon</div><div class="line">### END INIT INFO</div><div class="line">case $1 in</div><div class="line">          start)  /usr/share/zookeeper/bin/zkServer.sh start;;</div><div class="line">          stop)   /usr/share/zookeeper/bin/zkServer.sh stop;;</div><div class="line">          status) /usr/share/zookeeper/bin/zkServer.sh status;;</div><div class="line">          restart) /usr/share/zookeeper/bin/zkServer.sh restart;;</div><div class="line">          *)  echo &quot;require start|stop|status|restart&quot;  ;;</div><div class="line">esac</div></pre></td></tr></table></figure><p></p><p>2.授权<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo chmod +x zookeeper</div></pre></td></tr></table></figure><p></p><p>3.安装开机启动管理软件(一般自带)<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install rcconf</div></pre></td></tr></table></figure><p></p><p>4.进入管理界面<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo rcconf</div></pre></td></tr></table></figure><p></p><p>↑ ↓ 移动光标，空格键选中zookeeper</p><p>Tab 使光标移动到OK 回车即可</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> zookeeper </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu 16 LTS 安装redis -  apt-get install redis-server]]></title>
      <url>/20170223-Ubuntu-16-LTS-%E5%AE%89%E8%A3%85redis-ape-get-install-redis-server/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>配置文件的路径： /etc/redis/redis.conf</p><p>redis服务路径: /etc/init.d/redis-server</p><p>默认是开机启动</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">#安装</div><div class="line">hisen@hisen-server:/$ sudo apt-get install redis-server</div><div class="line">#打开服务</div><div class="line">hisen@hisen-server:/$ service redis start</div><div class="line">==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-units ===</div><div class="line">Authentication is required to start &apos;redis-server.service&apos;.</div><div class="line">Authenticating as: hisen,,, (hisen)</div><div class="line">Password: </div><div class="line">==== AUTHENTICATION COMPLETE ===</div><div class="line">#打开客户端</div><div class="line">hisen@hisen-server:/$ redis-cli</div><div class="line">#操作数据库</div><div class="line">127.0.0.1:6379&gt; set hisen hisen.me</div><div class="line">OK</div><div class="line">#获取数据</div><div class="line">127.0.0.1:6379&gt; get hisen</div><div class="line">&quot;hisen.me&quot;</div><div class="line">127.0.0.1:6379&gt; </div><div class="line">#停止数据库</div><div class="line">hisen@hisen-server:/$ service redis stop</div><div class="line">==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-units ===</div><div class="line">Authentication is required to stop &apos;redis-server.service&apos;.</div><div class="line">Authenticating as: hisen,,, (hisen)</div><div class="line">Password: </div><div class="line">==== AUTHENTICATION COMPLETE ===</div><div class="line">hisen@hisen-server:/$</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> redis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[BeanCreationException: Error creating bean with name 'xxxService']]></title>
      <url>/20170223-BeanCreationException-Error-creating-bean-with-name-xxxService/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>出现的问题：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[platform] ERROR 2017-02-22 17:46:05,756 [RMI TCP Connection(4)-127.0.0.1] org.springframework.web.context.ContextLoader.() | Context initialization failed org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;pmTranLimitLiteServiceImpl&apos;: Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.msds.zkutil.ZkLockFactory] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: &#123;@javax.annotation.Resource(mappedName=, shareable=true, description=, name=, type=class java.lang.Object, authenticationType=CONTAINER, lookup=)&#125;</div><div class="line">	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:306) ~[spring-context-3.2.4.RELEASE.jar:3.2.4.RELEASE]</div><div class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1116) ~[spring-beans-3.2.4.RELEASE.jar:3.2.4.RELEASE]</div></pre></td></tr></table></figure><p></p><p>最重要的是这句<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">org.springframework.beans.factory.BeanCreationException:</div><div class="line">Error creating bean with name&apos;pmTranLimitLiteServiceImpl&apos;</div></pre></td></tr></table></figure><p></p><p>出现的原因：<br>缺少相关的jar包或者依赖</p><p>建议不要自己配置idea的module和artificts</p><p>直接在pom.xml文件添加<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;artifactId&gt;hisen-project&lt;/artifactId&gt;&lt;!--加在这句话后面--&gt;</div><div class="line">  &lt;packaging&gt;war&lt;/packaging&gt;&lt;!--加上这句话就会自动给你打war包--&gt;</div></pre></td></tr></table></figure><p></p><hr><p>其他原因</p><p>开始不知道什么问题，后来搜索这个服务。</p><p>发现这跟dubbo有关，于是百度搜索进了官网</p><p>没想到常见问题里面就有说这个事情<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">13. 出现org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;xxxService&apos;: Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: Method must not be null怎么办？</div><div class="line"></div><div class="line">通常是classpath下存在spring多个版本的jar包，排除掉不需要的spring包即可。</div></pre></td></tr></table></figure><p></p><p>更多dubbo问题：<a href="http://dubbo.io/FAQ-zh.htm" target="_blank">点击查看</a></p><!-- rebuild by neat -->]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[IDEA - Java.Lang.OutOfMemoryError: PermGen Space]]></title>
      <url>/20170222-Java-Lang-OutOfMemoryError-PermGen-Space/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>Java.Lang.OutOfMemoryError: PermGen Space</p><p>Tomcat只分配了非常小的PermGen内存，这里重新设置一下</p><p>直接在配置tomcat的时候,在VM options填入:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-XX:PermSize=97m -XX:MaxPermSize=256m</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> idea </tag>
            
            <tag> tomcat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Maven目录下*.lastupdated命令行批量删除]]></title>
      <url>/20170220-Maven%E7%9B%AE%E5%BD%95%E4%B8%8B-lastupdated%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>windows系统<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd %userprofile%\.m2\repository</div><div class="line">for /r %i in (*.lastUpdated) do del %i</div></pre></td></tr></table></figure><p></p><p>或者新建一个bat文件，批处理。就不用每次都在cmd敲命令了<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">@echo off</div><div class="line">echo 确认删除maven仓库下*.lastUpdated文件？</div><div class="line">pause</div><div class="line">::create by hisenyuan(hisenyuan@gmail.com)</div><div class="line"></div><div class="line">::这里写你的仓库路径</div><div class="line">set REPOSITORY_PATH=C:\hisenwork\soft\maven</div><div class="line">echo 正在搜索...</div><div class="line">for /f &quot;delims=&quot; %%i in (&apos;dir /b /s &quot;%REPOSITORY_PATH%\*lastUpdated*&quot;&apos;) do (</div><div class="line">    del /s /q %%i</div><div class="line">)</div><div class="line">echo 完毕</div><div class="line">pause</div></pre></td></tr></table></figure><p></p><p>linux系统<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find /app/maven/localRepository -name &quot;*.lastUpdated&quot; -exec grep -q &quot;Could not transfer&quot; &#123;&#125; \; -print -exec rm &#123;&#125; \;</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> maven </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IDEA maven项目通过mongo-java-driver折腾一下MongoDB]]></title>
      <url>/20170220-IDEA-maven%E9%A1%B9%E7%9B%AE%E9%80%9A%E8%BF%87mongo-java-driver%E6%8A%98%E8%85%BE%E4%B8%80%E4%B8%8BMongoDB/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>这几天折腾ubuntu然后安装了下mongodb</p><p>通过Oracle VM VirtualBox端口转发，连接了虚拟机的MongoDB</p><p>1.用idea创建一个maven项目</p><p>2.在pom.xml中添加mongodb java驱动<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">    &lt;groupId&gt;org.mongodb&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;mongodb-driver&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;3.2.2&lt;/version&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure><p></p><p>3.参考官方：<a href="http://mongodb.github.io/mongo-java-driver/3.2/driver/getting-started/quick-tour/" target="_blank">MongoDB Driver Quick Tour</a></p><p>本用例github地址：<a href="https://github.com/hisen-yuan/mongodbTest/blob/master/src/main/java/com/hisen/jdbc/QuickTour.java" target="_blank">mongodbTest</a></p><p>贴下代码：<br><a id="more"></a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div></pre></td><td class="code"><pre><div class="line">package com.hisen.jdbc;</div><div class="line"></div><div class="line">import com.mongodb.Block;</div><div class="line">import com.mongodb.MongoClient;</div><div class="line">import com.mongodb.client.MongoCollection;</div><div class="line">import com.mongodb.client.MongoCursor;</div><div class="line">import com.mongodb.client.MongoDatabase;</div><div class="line">import com.mongodb.client.result.DeleteResult;</div><div class="line">import com.mongodb.client.result.UpdateResult;</div><div class="line">import org.bson.Document;</div><div class="line"></div><div class="line">import java.util.ArrayList;</div><div class="line">import java.util.List;</div><div class="line"></div><div class="line">import static com.mongodb.client.model.Accumulators.sum;</div><div class="line">import static com.mongodb.client.model.Aggregates.group;</div><div class="line">import static com.mongodb.client.model.Filters.*;</div><div class="line">import static com.mongodb.client.model.Projections.excludeId;</div><div class="line">import static com.mongodb.client.model.Sorts.descending;</div><div class="line">import static com.mongodb.client.model.Updates.inc;</div><div class="line">import static com.mongodb.client.model.Updates.set;</div><div class="line">import static java.util.Collections.singletonList;</div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by hisenyuan on 2017/2/20 at 13:42.</div><div class="line"> */</div><div class="line">public class QuickTour &#123;</div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        MongoClient mongoClient = new MongoClient(&quot;localhost&quot;, 27017);</div><div class="line">        MongoDatabase database = mongoClient.getDatabase(&quot;mydb&quot;);</div><div class="line">        //gets the collection test</div><div class="line">        MongoCollection&lt;Document&gt; collection = database.getCollection(&quot;test&quot;);</div><div class="line">        //插入数据</div><div class="line">        //insert(collection);</div><div class="line">        //插入大量数据</div><div class="line">        insertMany(collection);</div><div class="line">        //统计条数</div><div class="line">        count(collection);</div><div class="line">        //打印查询到的第一条数据</div><div class="line">        print(collection);</div><div class="line">        //打印所有数据</div><div class="line">        findAll(collection);</div><div class="line">        //按条件查询一条数据</div><div class="line">        findOneWithFilter(collection);</div><div class="line">        //按条件查询一个Set集合</div><div class="line">        getSet(collection);</div><div class="line">        //排序，输出第一条</div><div class="line">        sortDocuments(collection);</div><div class="line">        //获取指定的field</div><div class="line">        projectingFields(collection);</div><div class="line">        aggregations(collection);</div><div class="line">        //更新</div><div class="line">        update(collection);</div><div class="line">        //删除数据</div><div class="line">        delete(collection);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 插入单个文档</div><div class="line">     * @param collection</div><div class="line">     */</div><div class="line">    public static void insert(MongoCollection&lt;Document&gt; collection) &#123;</div><div class="line">        //create document</div><div class="line">        Document doc = new Document(&quot;name&quot;, &quot;MongoDB&quot;)</div><div class="line">                .append(&quot;type&quot;, &quot;database&quot;)</div><div class="line">                .append(&quot;count&quot;, 1)</div><div class="line">                .append(&quot;info&quot;, new Document(&quot;x&quot;, 203).append(&quot;y&quot;, 102));</div><div class="line">        //insert the document into the collection</div><div class="line">        collection.insertOne(doc);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 一次性插入多条数据，用ArrayList拼装</div><div class="line">     * @param collection</div><div class="line">     */</div><div class="line">    public static void insertMany(MongoCollection&lt;Document&gt; collection) &#123;</div><div class="line">        //Create the documents in a loop</div><div class="line">        List&lt;Document&gt; documents = new ArrayList&lt;Document&gt;();</div><div class="line">        for (int i = 0; i &lt; 100; i++) &#123;</div><div class="line">            documents.add(new Document(&quot;i&quot;, i));</div><div class="line">        &#125;</div><div class="line">        collection.insertMany(documents);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 统计集合中的总条数</div><div class="line">     * @param collection</div><div class="line">     */</div><div class="line">    public static void count(MongoCollection&lt;Document&gt; collection) &#123;</div><div class="line">        //Count Documents in A Collection</div><div class="line">        System.out.println(&quot;总条数：&quot; + collection.count());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 打印查询到的第一条数据</div><div class="line">     * @param collection</div><div class="line">     */</div><div class="line">    public static void print(MongoCollection&lt;Document&gt; collection) &#123;</div><div class="line">        //prints the first document found in the collection</div><div class="line">        Document myDoc = collection.find().first();</div><div class="line">        System.out.println(myDoc.toJson());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 查询集合中所有的数据</div><div class="line">     * 不推荐使用foreach循环</div><div class="line">     * @param collection</div><div class="line">     */</div><div class="line">    public static void findAll(MongoCollection&lt;Document&gt; collection) &#123;</div><div class="line">        System.out.println(&quot;----------------输出所有数据----------------&quot;);</div><div class="line">        MongoCursor&lt;Document&gt; cursor = collection.find().iterator();</div><div class="line">        try &#123;</div><div class="line">            while (cursor.hasNext()) &#123;</div><div class="line">                System.out.println(cursor.next().toJson());</div><div class="line">            &#125;</div><div class="line">        &#125; finally &#123;</div><div class="line">            cursor.close();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 条件查询单条数据</div><div class="line">     * @param collection</div><div class="line">     */</div><div class="line">    public static void findOneWithFilter(MongoCollection&lt;Document&gt; collection) &#123;</div><div class="line">        //Get A Single Document with a Query Filter</div><div class="line">        Document myDoc = collection.find(eq(&quot;i&quot;, 71)).first();</div><div class="line">        System.out.println(myDoc.toJson());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 获得一个Set集合的数据</div><div class="line">     * @param collection</div><div class="line">     */</div><div class="line">    public static void getSet(MongoCollection&lt;Document&gt; collection) &#123;</div><div class="line">        // now use a range query to get a larger subset</div><div class="line">        Block&lt;Document&gt; printBlock = new Block&lt;Document&gt;() &#123;</div><div class="line">            public void apply(final Document document) &#123;</div><div class="line">                System.out.println(document.toJson());</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        //i的值大于98的数据</div><div class="line">        System.out.println(&quot;----------------i大于98的数据----------------&quot;);</div><div class="line">        collection.find(gt(&quot;i&quot;, 98)).forEach(printBlock);</div><div class="line">        //50 - 51 gt:大于 lte:小于等于</div><div class="line">        System.out.println(&quot;----------------50&lt;i&lt;=51的数据----------------&quot;);</div><div class="line">        collection.find(and(gt(&quot;i&quot;, 50), lte(&quot;i&quot;, 51))).forEach(printBlock);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 排序</div><div class="line">     * @param collection</div><div class="line">     */</div><div class="line">    public static void sortDocuments(MongoCollection&lt;Document&gt; collection) &#123;</div><div class="line">        //根据i的值进行排序</div><div class="line">        Document myDoc = collection.find(exists(&quot;i&quot;)).sort(descending(&quot;i&quot;)).first();</div><div class="line">        System.out.println(&quot;----------------排序，输出第一条----------------&quot;);</div><div class="line">        System.out.println(myDoc.toJson());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 获取想要的field(字段)</div><div class="line">     * @param collection</div><div class="line">     */</div><div class="line">    public static void projectingFields(MongoCollection&lt;Document&gt; collection) &#123;</div><div class="line">        System.out.println(&quot;----------------获取指定field，输出第一条----------------&quot;);</div><div class="line">        //排除ID字段</div><div class="line">        Document myDoc = collection.find().projection(excludeId()).first();</div><div class="line">        System.out.println(myDoc.toJson());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static void aggregations(MongoCollection&lt;Document&gt; collection) &#123;</div><div class="line">        /*</div><div class="line">        collection.aggregate(asList(</div><div class="line">                match(gt(&quot;i&quot;, 0)),</div><div class="line">                project(Document.parse(&quot;&#123;ITimes10: &#123;$multiply: [&apos;$i&apos;, 10]&#125;&#125;&quot;)))</div><div class="line">        ).forEach(printBlock);</div><div class="line">        */</div><div class="line">        //求和</div><div class="line">        Document myDoc = collection.aggregate(singletonList(group(null, sum(&quot;total&quot;, &quot;$i&quot;)))).first();</div><div class="line">        System.out.println(myDoc.toJson());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 更新document的方法</div><div class="line">     * @param collection</div><div class="line">     */</div><div class="line">    public static void update(MongoCollection&lt;Document&gt; collection) &#123;</div><div class="line">        //更新一个，如果不引入下面这个包，set方法会报错</div><div class="line">        //import static com.mongodb.client.model.Updates.*;</div><div class="line">        collection.updateOne(eq(&quot;i&quot;, 10), set(&quot;i&quot;, 110));</div><div class="line">        //更新多个，小于100的都加100</div><div class="line">        UpdateResult updateResult = collection.updateMany(lt(&quot;i&quot;, 190), inc(&quot;i&quot;, 100));</div><div class="line">        System.out.println(&quot;----------------更新条数----------------&quot;);</div><div class="line">        System.out.println(updateResult.getModifiedCount());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 删除数据的方法</div><div class="line">     * @param collection</div><div class="line">     */</div><div class="line">    public static void delete(MongoCollection&lt;Document&gt; collection) &#123;</div><div class="line">        collection.deleteOne(eq(&quot;i&quot;, 210));</div><div class="line">        //gte 大于等于100的都删除</div><div class="line">        DeleteResult deleteResult = collection.deleteMany(gte(&quot;i&quot;, 100));</div><div class="line">        System.out.println(&quot;----------------删除条数----------------&quot;);</div><div class="line">        System.out.println(deleteResult.getDeletedCount());</div><div class="line">    &#125;</div><div class="line">    /*</div><div class="line">    public static void bulk(MongoCollection&lt;Document&gt; collection) &#123;</div><div class="line">        // 2. Ordered bulk operation - order is guarenteed</div><div class="line">        collection.bulkWrite(</div><div class="line">                Arrays.asList(new InsertOneModel&lt;&gt;(new Document(&quot;_id&quot;, 4)),</div><div class="line">                        new InsertOneModel&lt;&gt;(new Document(&quot;_id&quot;, 5)),</div><div class="line">                        new InsertOneModel&lt;&gt;(new Document(&quot;_id&quot;, 6)),</div><div class="line">                        new UpdateOneModel&lt;&gt;(new Document(&quot;_id&quot;, 1),</div><div class="line">                                new Document(&quot;$set&quot;, new Document(&quot;x&quot;, 2))),</div><div class="line">                        new DeleteOneModel&lt;&gt;(new Document(&quot;_id&quot;, 2)),</div><div class="line">                        new ReplaceOneModel&lt;&gt;(new Document(&quot;_id&quot;, 3),</div><div class="line">                                new Document(&quot;_id&quot;, 3).append(&quot;x&quot;, 4))));</div><div class="line">        // 2. Unordered bulk operation - no guarantee of order of operation</div><div class="line">        collection.bulkWrite(</div><div class="line">                Arrays.asList(new InsertOneModel&lt;&gt;(new Document(&quot;_id&quot;, 4)),</div><div class="line">                        new InsertOneModel&lt;&gt;(new Document(&quot;_id&quot;, 5)),</div><div class="line">                        new InsertOneModel&lt;&gt;(new Document(&quot;_id&quot;, 6)),</div><div class="line">                        new UpdateOneModel&lt;&gt;(new Document(&quot;_id&quot;, 1),</div><div class="line">                                new Document(&quot;$set&quot;, new Document(&quot;x&quot;, 2))),</div><div class="line">                        new DeleteOneModel&lt;&gt;(new Document(&quot;_id&quot;, 2)),</div><div class="line">                        new ReplaceOneModel&lt;&gt;(new Document(&quot;_id&quot;, 3),</div><div class="line">                                new Document(&quot;_id&quot;, 3).append(&quot;x&quot;, 4))),</div><div class="line">                new BulkWriteOptions().ordered(false));</div><div class="line">    &#125;</div><div class="line">    */</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> mongo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Windows10开机bat启动VirtualBox虚拟机并且后台运行]]></title>
      <url>/20170220-Windows10%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8VirtualBox%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%B9%B6%E4%B8%94%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>1.制作启动脚本</p><p>新建一个start.bat文件，内容如下<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">@echo off</div><div class="line"></div><div class="line">echo 本命令可让us在后台运行</div><div class="line">echo 启动之后可以关闭本窗口</div><div class="line"></div><div class="line">::进入虚拟机目录</div><div class="line">cd C:\&quot;Program Files&quot;\Oracle\VirtualBox</div><div class="line"></div><div class="line">::执行相关命令 同时启动两台虚拟机</div><div class="line">VBoxManage startvm &quot;us&quot; --type headless</div><div class="line">::VBoxManage startvm &quot;ubuntu&quot; --type headless</div><div class="line"></div><div class="line">::执行完之后按回车退出窗口</div><div class="line">pause</div></pre></td></tr></table></figure><p></p><p>2.设置开机启动</p><p>把start.bat文件复制到[启动]文件夹里面</p><p>[启动]文件夹路径<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</div></pre></td></tr></table></figure><p></p><p>文件管理器地址栏显示大概是这样<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Windows &gt; [开始]菜单 &gt; 程序 &gt; 启动</div></pre></td></tr></table></figure><p></p><p>放进去之后就可以开机启动了！</p><p>启动之后Xshell连接即可</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> 软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> VirtualBox </tag>
            
            <tag> bat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu16.04使用阿里云镜像安装Mongodb &　配置]]></title>
      <url>/20170219-Ubuntu16-04%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E5%AE%89%E8%A3%85Mongodb-%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><h2 id="一、使用阿里云镜像安装Mongodb"><a href="#一、使用阿里云镜像安装Mongodb" class="headerlink" title="一、使用阿里云镜像安装Mongodb"></a>一、使用阿里云镜像安装Mongodb</h2><p>1 &gt; 添加 MongoDB 公共GPG钥匙<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927</div></pre></td></tr></table></figure><p></p><p>2 &gt; 创建列表文件</p><p>这里把官网repo.mongodb.org</p><p>换成了mirrors.aliyun.com<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo &quot;deb http://mirrors.aliyun.com/mongodb/apt/ubuntu xenial/mongodb-org/3.2 multiverse&quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list</div></pre></td></tr></table></figure><p></p><a id="more"></a><p>3 &gt; 重新加载本地包数据库<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div></pre></td></tr></table></figure><p></p><p>4 &gt; 安装MongoDB<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install -y mongodb-org</div></pre></td></tr></table></figure><p></p><p>5 &gt; 启动MongoDB<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service mongod start</div></pre></td></tr></table></figure><p></p><p>6 &gt; 打开MongoDB客户端<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mongo</div></pre></td></tr></table></figure><p></p><p>7 &gt; 关闭MongoDB<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service mongod stop</div></pre></td></tr></table></figure><p></p><p>展示一下<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">hisen@hisen-server:~$ sudo service mongod start</div><div class="line">hisen@hisen-server:~$ mongo</div><div class="line">MongoDB shell version: 3.2.12</div><div class="line">connecting to: test</div><div class="line">&gt; 1 + 1</div><div class="line">2</div><div class="line">&gt;</div></pre></td></tr></table></figure><p></p><p>安装成功</p><p>MongoDB默认的数据文件和日志文件分别存储在下面的位置</p><p>数据文件：/var/lib/mongodb</p><p>日志文件：/var/log/mongodb</p><p>你可以修改/etc/mongod.conf 文件来改变相应的存储位置。</p><p>如果你想改变运行MongoDB的用户</p><p>你必须把 /var/lib/mongodb</p><p>和 /var/log/mongodb 2个目录的访问权限付给该用户</p><h2 id="二、配置MongoDB"><a href="#二、配置MongoDB" class="headerlink" title="二、配置MongoDB"></a>二、配置MongoDB</h2><p>1允许远程访问</p><p>绑定ip<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo vim /etc/mongod.conf</div></pre></td></tr></table></figure><p></p><p>打开配置文件，添加需要增加的</p><p>不建议采用注释掉 bindIP 的方案，非常容易受到攻击<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># network interfaces  </div><div class="line">net:  </div><div class="line">  port: 27017  </div><div class="line">  bindIp: 0.0.0.0</div></pre></td></tr></table></figure><p></p><p>接受所有ip</p><p>重启<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo service mongod restart</div></pre></td></tr></table></figure><p></p><p>2.配置防火墙 （不配置也行）<br>Ubuntu16.04 桌面版默认没有安装好 ipTable，用如下命令安装<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line">sudo apt-get upgrade</div><div class="line">sudo apt-get install iptables-persistent</div></pre></td></tr></table></figure><p></p><p>安装过程中，弹窗选择YES</p><p>安装完成后：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo iptables -A INPUT -p tcp --dport 27017 -j ACCEPT</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle VM VirtualBox命令行打开虚拟机并且后台运行]]></title>
      <url>/20170219-Oracle-VM-VirtualBox%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%93%E5%BC%80%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%B9%B6%E4%B8%94%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>这几天在折腾Ubuntu虚拟机，想着也就让他做一台服务器罢了</p><p>没想到安装之后发现一直没法让VirtualBox隐藏到托盘</p><p>按正常程序走，打开一个虚拟机会出现两个GUI界面：</p><ol><li>VirtualBox界面</li><li>虚拟机界面</li></ol><p>第一个可以在打开虚拟机之后关闭，第二个不能关闭也不能隐藏到托盘</p><p>痛苦！！！</p><p>这里给出解决方案：通过cmd命令行启动并且后台运行</p><h2 id="一、进入VirtualBox安装目录，我这里是"><a href="#一、进入VirtualBox安装目录，我这里是" class="headerlink" title="一、进入VirtualBox安装目录，我这里是"></a>一、进入VirtualBox安装目录，我这里是</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\tool\Oracle\VirtualBox&gt;</div></pre></td></tr></table></figure><h2 id="二、列出所有安装的虚拟机"><a href="#二、列出所有安装的虚拟机" class="headerlink" title="二、列出所有安装的虚拟机"></a>二、列出所有安装的虚拟机</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">C:\tool\Oracle\VirtualBox&gt;VBoxManage list vms</div><div class="line">&quot;centos&quot; &#123;162f777f-e3c4-4717-8b5b-4a4e43a8b552&#125;</div><div class="line">&quot;debian&quot; &#123;48ebecba-77ec-483d-ab73-bf9ee777e2f6&#125;</div><div class="line">&quot;ubuntu&quot; &#123;d8050b3a-b04b-4fe9-8a90-16086dac0ae9&#125;</div></pre></td></tr></table></figure><p>前面是NAME，后面是UUID，之后的<strong>name</strong>用这连个代替都可以</p><h2 id="三、命令行启动虚拟机"><a href="#三、命令行启动虚拟机" class="headerlink" title="三、命令行启动虚拟机"></a>三、命令行启动虚拟机</h2><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">C:\tool\Oracle\VirtualBox&gt;VBoxManage startvm &quot;ubuntu&quot; --type headless</div><div class="line">Waiting for VM &quot;ubuntu&quot; to power on...</div><div class="line">VM &quot;ubuntu&quot; has been successfully started.</div></pre></td></tr></table></figure><p>headless是在后台运行，并且默认开启vrdp服务，可以通过远程桌面工具来访问</p><p>下面是打开ubuntu之后用Xshell链接的<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">Connecting to 127.0.0.1:2222...</div><div class="line">Connection established.</div><div class="line">To escape to local shell, press &apos;Ctrl+Alt+]&apos;.</div><div class="line"></div><div class="line">Welcome to Ubuntu 16.04 LTS (GNU/Linux 4.4.0-62-generic x86_64)</div><div class="line"></div><div class="line"> * Documentation:  https://help.ubuntu.com/</div><div class="line"></div><div class="line">362 个可升级软件包。</div><div class="line">0 个安全更新。</div><div class="line"></div><div class="line">Last login: Sat Feb 18 16:25:58 2017 from 10.0.2.2</div><div class="line">hisen@hisen-VirtualBox:~$ ls</div><div class="line">download  公共的  模板  视频  图片  文档  下载  音乐  桌面</div></pre></td></tr></table></figure><p></p><h2 id="四、所有相关的命令"><a href="#四、所有相关的命令" class="headerlink" title="四、所有相关的命令"></a>四、所有相关的命令</h2><p>下面所有的NAME都可以用二中的name和UUID代替<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"># 列出所有安装的虚拟机</div><div class="line">VBoxManage list vms</div><div class="line"></div><div class="line"># 后台打开，无界面</div><div class="line">VBoxManage startvm &quot;NAME&quot; --type headless </div><div class="line"></div><div class="line"># gui方式启动，跟桌面点击没有区别</div><div class="line">VBoxManage startvm NAME --type gui</div><div class="line"></div><div class="line"># 列出运行中的虚拟机</div><div class="line">VBoxManage list runningvms</div><div class="line"></div><div class="line"># 关闭虚拟机，等价于点击系统关闭按钮，正常关机</div><div class="line">VBoxManage controlvm NAME acpipowerbutton</div><div class="line"></div><div class="line"># 关闭虚拟机，等价于直接关闭电源，非正常关机</div><div class="line">VBoxManage controlvm NAME poweroff</div><div class="line"></div><div class="line"># 暂停虚拟机的运行</div><div class="line">VBoxManage controlvm NAME pause</div><div class="line"></div><div class="line"># 恢复暂停的虚拟机</div><div class="line">VBoxManage controlvm NAME resume</div><div class="line"></div><div class="line"># 保存当前虚拟机的运行状态</div><div class="line">VBoxManage controlvm NAME savestate</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu 16 LTS 关闭图形界面]]></title>
      <url>/20170218-Ubuntu-16-LTS-%E5%85%B3%E9%97%AD%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>有两个方法。</p><h2 id="第一个方法"><a href="#第一个方法" class="headerlink" title="第一个方法"></a>第一个方法</h2><p>到了图形化界面，打开terminal(终端)执行<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo init 3</div></pre></td></tr></table></figure><p></p><p>就会跳转到命令行界面，并且只有命令行</p><p>就是一个全屏的terminal。</p><h2 id="第二个方法"><a href="#第二个方法" class="headerlink" title="第二个方法"></a>第二个方法</h2><p>在安装ubuntu的时候，有选择是否安装图形化界面的选项，选择不安装，那么系统将不带有图形化界面而默认进入命令行界面。</p><h2 id="第三个方法"><a href="#第三个方法" class="headerlink" title="第三个方法"></a>第三个方法</h2><p><a href="http://hisen.me/20170219-Oracle-VM-VirtualBox%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%93%E5%BC%80%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%B9%B6%E4%B8%94%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C/" title="Oracle VM VirtualBox命令行打开虚拟机并且后台运行">http://hisen.me/20170219-Oracle-VM-VirtualBox%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%93%E5%BC%80%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%B9%B6%E4%B8%94%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C/</a></p><h2 id="第四个方法"><a href="#第四个方法" class="headerlink" title="第四个方法"></a>第四个方法</h2><p>直接安装Ubuntu Server，目前我就是这样</p><p>不过装了之后还是推荐第三个方法！！！</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[win下ssh连接VirtualBox Ubuntu 16虚拟机]]></title>
      <url>/20170218-win%E4%B8%8Bssh%E8%BF%9E%E6%8E%A5VirtualBox-Ubuntu-16%E8%99%9A%E6%8B%9F%E6%9C%BA/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>安装完虚拟机之后想在windows下用xshell链接Ubuntu虚拟机</p><p>这种配置下，虚拟机能上网，又能跟win连接，感觉很完美</p><p>VirtualBox的端口转发很不错，可以转发tomcat什么的</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>1.给Ubuntu安装openssh-server<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install openssh-server</div></pre></td></tr></table></figure><p></p><a id="more"></a><p>2.查看虚拟机ip 我的是：10.0.2.15(看上面那段)<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">hisen@hisen-VirtualBox:/$ ifconfig -a</div><div class="line">enp0s3    Link encap:以太网  硬件地址 08:00:27:45:f3:35  </div><div class="line">          inet 地址:10.0.2.15  广播:10.0.2.255  掩码:255.255.255.0</div><div class="line">          inet6 地址: fe80::ed57:82d2:60cb:7f96/64 Scope:Link</div><div class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  跃点数:1</div><div class="line">          接收数据包:169175 错误:0 丢弃:0 过载:0 帧数:0</div><div class="line">          发送数据包:34436 错误:0 丢弃:0 过载:0 载波:0</div><div class="line">          碰撞:0 发送队列长度:1000 </div><div class="line">          接收字节:210738565 (210.7 MB)  发送字节:3633455 (3.6 MB)</div><div class="line"></div><div class="line">lo        Link encap:本地环回  </div><div class="line">          inet 地址:127.0.0.1  掩码:255.0.0.0</div><div class="line">          inet6 地址: ::1/128 Scope:Host</div><div class="line">          UP LOOPBACK RUNNING  MTU:65536  跃点数:1</div><div class="line">          接收数据包:1718 错误:0 丢弃:0 过载:0 帧数:0</div><div class="line">          发送数据包:1718 错误:0 丢弃:0 过载:0 载波:0</div><div class="line">          碰撞:0 发送队列长度:1 </div><div class="line">          接收字节:234769 (234.7 KB)  发送字节:234769 (234.7 KB)</div></pre></td></tr></table></figure><p></p><h2 id="VirtualBox设置端口转发"><a href="#VirtualBox设置端口转发" class="headerlink" title="VirtualBox设置端口转发"></a>VirtualBox设置端口转发</h2><ol><li>在VirtualBox启动页面，右键Ubuntu —&gt;设置</li><li>网络 —&gt; 连接方式 —&gt; 网络地址转换(NAT)</li><li>高级 —&gt; 端口转发 —&gt; 点击添加按钮</li></ol><table><thead><tr><th style="text-align:left">名称</th><th style="text-align:left">协议</th><th style="text-align:left">主机IP</th><th style="text-align:left">主机端口</th><th style="text-align:left">子系统IP</th><th style="text-align:left">子系统端口</th></tr></thead><tbody><tr><td style="text-align:left">ssh</td><td style="text-align:left">TCP</td><td style="text-align:left">127.0.0.1</td><td style="text-align:left">2222</td><td style="text-align:left">10.0.2.15</td><td style="text-align:left">22</td></tr></tbody></table><p>子系统ip写你的虚拟机ip即可</p><h2 id="xshell链接Ubuntu虚拟机"><a href="#xshell链接Ubuntu虚拟机" class="headerlink" title="xshell链接Ubuntu虚拟机"></a>xshell链接Ubuntu虚拟机</h2><p>在xshell链接Ubuntu虚拟机的时候</p><p>ip写上麦的主机ip：127.0.0.1</p><p>端口写上面的主机端口：2222</p><p>然后上面配置的端口转发就可以转发到虚拟机上，顺利连接！！！</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> xshell连接Ubuntu虚拟机 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu 16 换阿里云源]]></title>
      <url>/20170218-Ubuntu-16-%E6%8D%A2%E9%98%BF%E9%87%8C%E4%BA%91%E6%BA%90/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><ol><li>sudo vi /etc/apt/sources.list</li><li>删除里面所有的内容，添加下面的内容</li><li>sudo apt-get update</li></ol><p>三步完成之后即可！</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiverse</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-proposed main restricted universe multiverse</div><div class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiverse</div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse</div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiverse</div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-proposed main restricted universe multiverse</div><div class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> 阿里云 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu安装JDK8 & Tomcat - 简单教程]]></title>
      <url>/20170218-Ubuntu%E5%AE%89%E8%A3%85JDK8-Tomcat-%E7%AE%80%E5%8D%95%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<!-- build time:Fri Apr 21 2017 10:23:05 GMT+0800 (中国标准时间) --><p>在网速搜索很多教程，感觉写的都太难了我去</p><p>准备工作：</p><ol><li>下载JDK，并解压(选择适合自己的版本：<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank">地址</a>)</li><li>下载Tomcat，并解压(选择适合自己的版本：<a href="http://tomcat.apache.org/download-80.cgi" target="_blank">地址</a>)</li></ol><p>目录约定：</p><ol><li>java路径：/usr/hisen/soft/java/jdk8</li><li>tomcat路径：/usr/hisen/soft/tomcat/tomcat8</li></ol><p>说明以上路径都是解压之后的，请解压之后自行重命名文件夹等工作</p><a id="more"></a><p>下面开始配置环境变量：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/profile</div></pre></td></tr></table></figure><p></p><p>底部添加：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#java的环境变量配置</div><div class="line">export JAVA_HOME=/usr/hisen/soft/java/jdk8</div><div class="line">export JRE_HOME=$JAVA_HOME/jre</div><div class="line">export CLASSPATH=.:$CLASSPATH:$JAVA_HOME/lib:$JRE_HOME/lib</div><div class="line">export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</div><div class="line"></div><div class="line">#tomcat的环境变量配置</div><div class="line">export CATALINA_HOME=/usr/hisen/soft/tomcat/tomcat8</div><div class="line">export CLASSPATH=.:$JAVA_HOME/lib:$CATALINA_HOME/lib</div><div class="line">export PATH=$PATH:$CATALINA_HOME/bin</div></pre></td></tr></table></figure><p></p><p>让刚刚的配置生效：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/profile</div></pre></td></tr></table></figure><p></p><p>查看java版本<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java -version</div></pre></td></tr></table></figure><p></p><p>如果还是默认的OpenJDK<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo update-alternatives --install /usr/bin/java java /usr/hisen/soft/java/jdk8/bin/java 300  </div><div class="line">sudo update-alternatives --install /usr/bin/javac javac /usr/hisen/soft/java/jdk8/bin/javac 300</div><div class="line"></div><div class="line">#选择默认JDK即可</div><div class="line">sudo update-alternatives --config java</div></pre></td></tr></table></figure><p></p><p>进入tomcat的bin目录<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi catalina.sh</div></pre></td></tr></table></figure><p></p><p>顶部添加<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#让tomcat知道java在哪里</div><div class="line">JAVA_HOME=/usr/hisen/soft/java/jdk8</div><div class="line">JRE_HOME=$JAVA_HOME/jre</div></pre></td></tr></table></figure><p></p><p>之后进入在tomcat bin目录执行<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">hisen@hisen:/usr/hisen/soft/tomcat/tomcat8/bin$ sudo sh startup.sh</div><div class="line">Using CATALINA_BASE:   /usr/hisen/soft/tomcat/tomcat8</div><div class="line">Using CATALINA_HOME:   /usr/hisen/soft/tomcat/tomcat8</div><div class="line">Using CATALINA_TMPDIR: /usr/hisen/soft/tomcat/tomcat8/temp</div><div class="line">Using JRE_HOME:        /usr/hisen/soft/java/jdk8/jre</div><div class="line">Using CLASSPATH:       /usr/hisen/soft/tomcat/tomcat8/bin/bootstrap.jar:/usr/hisen/soft/tomcat/tomcat8/bin/tomcat-juli.jar</div><div class="line">Tomcat started.</div></pre></td></tr></table></figure><p></p><h2 id="这样就启动了tomcat！！！！"><a href="#这样就启动了tomcat！！！！" class="headerlink" title="这样就启动了tomcat！！！！"></a>这样就启动了tomcat！！！！</h2><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>如果没有在 catalina.sh 添加java路径，会报错<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hisen@hisen-VirtualBox:/usr/hisen/soft/tomcat/tomcat8/bin$ sudo sh startup.sh</div><div class="line">Neither the JAVA_HOME nor the JRE_HOME environment variable is defined</div><div class="line">At least one of these environment variable is needed to run this program</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[centos更换yum源为阿里云 - 三步搞定]]></title>
      <url>/20170217-centos%E6%9B%B4%E6%8D%A2yum%E6%BA%90%E4%B8%BA%E9%98%BF%E9%87%8C%E4%BA%91-%E4%B8%89%E9%83%A8%E6%90%9E%E5%AE%9A/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>阿里云是最近新出的一个镜像源。得益于阿里云的高速发展，这么大的需求，肯定会推出自己的镜像源。<br>阿里云Linux安装镜像源地址：<a href="http://mirrors.aliyun.com/" target="_blank" rel="external">http://mirrors.aliyun.com/</a></p><p>CentOS系统更换软件安装源</p><p>第一步：备份你的原镜像文件，以免出错后可以恢复。</p><p>1、备份<br>mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</p><p>2、下载新的CentOS-Base.repo 到/etc/yum.repos.d/</p><p>（如果无wget命令，底部有具体说明）</p><p>CentOS 5<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-5.repo</div></pre></td></tr></table></figure><p></p><p>CentOS 6<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo</div></pre></td></tr></table></figure><p></p><p>CentOS 7<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</div></pre></td></tr></table></figure><p></p><p>3、之后运行yum makecache生成缓存</p><hr><p>ps：如果你跟我一样苦逼：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-bash: wget: command not found</div></pre></td></tr></table></figure><p></p><p>然后：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install wget #失败</div></pre></td></tr></table></figure><p></p><p>那么你可以直接选择上面对应系统的文件下载链接</p><p>下载好文件之后改名为CentOS-Base.repo</p><p>直接放到/etc/yum.repos.d/目录下即可</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> centos </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HashMap和Hashtable的区别]]></title>
      <url>/20170217-HashMap%E5%92%8CHashtable%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>在Java 2以前，一般使用Hashtable来映射键值和元素。为了使用Java集合框架，Java对Hashtable进行了重新设计，但是，为了向后兼容保留了所有的方法。Hashtable实现了Map接口，除了Hashtable具有同步功能之外，它与HashMap的用法是一样的。·在使用时一般是用ArrayList代替Vector，LinkedList代替Stack，HashMap代替HashTable，即使在多线程中需要同步，也是用同步包装类。</p><p>另外在使用上还有一些小的差异，比如：</p><ol><li>HashTable的key和value都不允许为null值，而HashMap的key和value则都是允许null值的。这个其实没有好坏之分，只是Sun为了统一Collection的操作特性而改进的。</li><li>HashTable有一个contains(Object value)方法，功能上与containsValue(Object value)一样，但是在实现上花销更大，现在已不推荐使用。而HashMap只有containsValue(Object value)方法。</li><li>HashTable使用Enumeration，HashMap使用Iterator。Iterator其实与Enmeration功能上很相似，只是多了删除的功能。用Iterator不过是在名字上变得更为贴切一些。模式的另外一个很重要的功用，就是能够形成一种交流的语言（或者说文化）。有时候，你说Enumeration大家都不明白，说Iterator就都明白了。</li></ol><p>在实现上两者已有一些差异，这里简单说明一下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">public Hashtable(int initialCapacity, float loadFactor) &#123;</div><div class="line">        if (initialCapacity &lt; 0)</div><div class="line">            throw new IllegalArgumentException(&quot;Illegal Capacity: &quot;+</div><div class="line">                                               initialCapacity);</div><div class="line">        if (loadFactor &lt;= 0 || Float.isNaN(loadFactor))</div><div class="line">            throw new IllegalArgumentException(&quot;Illegal Load: &quot;+loadFactor);</div><div class="line">        if (initialCapacity==0)</div><div class="line">            initialCapacity = 1;</div><div class="line">        this.loadFactor = loadFactor;</div><div class="line">        table = new Entry[initialCapacity];</div><div class="line">        threshold = (int)Math.min(initialCapacity * loadFactor, MAX_ARRAY_SIZE + 1);</div><div class="line">        initHashSeedAsNeeded(initialCapacity);</div><div class="line">    &#125;</div><div class="line">public Hashtable(int initialCapacity) &#123;</div><div class="line">        this(initialCapacity, 0.75f);</div><div class="line">    &#125;</div><div class="line">public Hashtable() &#123;</div><div class="line">        this(11, 0.75f);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">public HashMap(int initialCapacity, float loadFactor) &#123;</div><div class="line">        if (initialCapacity &lt; 0)</div><div class="line">            throw new IllegalArgumentException(&quot;Illegal initial capacity: &quot; +</div><div class="line">                                               initialCapacity);</div><div class="line">        if (initialCapacity &gt; MAXIMUM_CAPACITY)</div><div class="line">            initialCapacity = MAXIMUM_CAPACITY;</div><div class="line">        if (loadFactor &lt;= 0 || Float.isNaN(loadFactor))</div><div class="line">            throw new IllegalArgumentException(&quot;Illegal load factor: &quot; +</div><div class="line">                                               loadFactor);</div><div class="line">        this.loadFactor = loadFactor;</div><div class="line">        threshold = initialCapacity;</div><div class="line">        init();</div><div class="line">    &#125;</div><div class="line">public HashMap(int initialCapacity) &#123;</div><div class="line">        this(initialCapacity, DEFAULT_LOAD_FACTOR);</div><div class="line">    &#125;</div><div class="line">public HashMap() &#123;</div><div class="line">        this(DEFAULT_INITIAL_CAPACITY, DEFAULT_LOAD_FACTOR);</div><div class="line">    &#125;</div></pre></td></tr></table></figure><p></p><p>HashTable中构造hash数组时initialCapacity默认大小是11，增加的方式是 old*2+1。HashMap中构造hash数组时initialCapacity默认大小是16，而且一定是2的指数。对于哈希值的使用也有所不同，HashTable直接使用对象的hashCode，代码是这样的：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">int hash = key.hashCode();</div><div class="line">int index = (hash &amp; 0x7FFFFFFF) % tab.length;</div></pre></td></tr></table></figure><p></p><p>而HashMap重新计算hash值，而且用与代替求模：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">int hash = hash(k);</div><div class="line">int i = indexFor(hash, table.length);</div><div class="line"> </div><div class="line">static int hash(Object x) &#123;</div><div class="line">　　int h = x.hashCode();</div><div class="line"> </div><div class="line">　　h += ~(h &lt;&lt; 9);</div><div class="line">　　h ^= (h &gt;&gt;&gt; 14);</div><div class="line">　　h += (h &lt;&lt; 4);</div><div class="line">　　h ^= (h &gt;&gt;&gt; 10);</div><div class="line">　　return h;</div><div class="line">&#125;</div><div class="line">static int indexFor(int h, int length) &#123;</div><div class="line">　　return h &amp; (length-1);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>仅供参考，内容来源于互联网</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> HashMap </tag>
            
            <tag> Hashtable </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[java编译错误：程序包javax.servlet不存在javax.servlet.*]]></title>
      <url>/20170217-java%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%EF%BC%9A%E7%A8%8B%E5%BA%8F%E5%8C%85javax-servlet%E4%B8%8D%E5%AD%98%E5%9C%A8javax-servlet/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>之前用myeclipse开发的项目</p><p>今天导入到IDEA中去，发现编译出问题</p><p>ava编译错误：程序包javax.servlet不存在javax.servlet.*</p><hr><p>原因大概是myeclipse中可以选择Java EE项目</p><p>而idea没有，缺少 servlet-api.jar 这个jar包</p><hr><p>解决办法：</p><ol><li>复制tomcat文件夹下lib—&gt;servlet-api.jar 这个jar包</li><li>添加到IDEA项目中去：粘贴到External Library目录下</li></ol><p>即可</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo百度抓取失败解决办法]]></title>
      <url>/20170216-hexo%E7%99%BE%E5%BA%A6%E6%8A%93%E5%8F%96%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>上一篇帖子说明了一下百度抓取不到的原因是因为github把百度爬虫给屏蔽了</p><p>这里给出的解决办法是用hexo自动提交插件</p><p>需要获取一个自动提交的token</p><ol><li>注册百度站长工具：<a href="http://zhanzhang.baidu.com" target="_blank" rel="external">http://zhanzhang.baidu.com</a></li><li>添加你的hexo域名</li><li>找到网页抓取 - 链接提交 - 下拉选择你的hexo站点</li><li>数据提交方式 - 自动提交 - 主动推送(实时)</li><li>推送接口</li><li>接口调用地址： <a href="http://data.zz.baidu.com/urls?site=hisen.me&amp;token=XmxXyESxyz1hANxE" target="_blank" rel="external">http://data.zz.baidu.com/urls?site=hisen.me&amp;token=XmxXyESxyz1hANxE</a></li><li>复制上面token=后面的内容，那就是你的token</li></ol><p>安装自动提交插件：<br><a id="more"></a></p><ol><li>npm install hexo-baidu-url-submit –save</li><li>编辑站点配置文件_config.yml，添加一下内容<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">baidu_url_submit:</div><div class="line">  count: 1 ## 提交最新的一个链接</div><div class="line">  host: www.hui-wang.info ## 在百度站长平台中注册的域名</div><div class="line">  token: your_token ## 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</div><div class="line">  path: baidu_urls.txt ## 文本文档的地址， 新链接会保存在此文本文档里</div></pre></td></tr></table></figure></li></ol><p>加入新的deployer: 原来type前面是没有 - 的</p><p>但是不这样处理执行hexo g 会报错<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy: </div><div class="line">- type: git</div><div class="line">  repository: yoururl</div><div class="line">  branch: master</div><div class="line">- type: baidu_url_submitter</div></pre></td></tr></table></figure><p></p><p>生成效果如下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ hexo g</div><div class="line">INFO  Start processing</div><div class="line">INFO  Generating Baidu urls for last 1 posts</div><div class="line">INFO  Posts urls generated in baidu_urls.txt</div><div class="line">http://hisen.me/20170216-hexo百度抓取失败解决办法/</div><div class="line">INFO  Files loaded in 1.31 s</div><div class="line"></div><div class="line">$ hexo d</div><div class="line">INFO  Deploy done: git</div><div class="line">INFO  Deploying: baidu_url_submitter</div><div class="line">INFO  Submitting urls</div><div class="line">http://hisen.me/20170216-hexo百度抓取失败解决办法/</div><div class="line">&#123;&quot;remain&quot;:1,&quot;success&quot;:1&#125;</div><div class="line">INFO  Deploy done: baidu_url_submitter</div></pre></td></tr></table></figure><p></p><p>感谢插件作者：<a href="http://hui-wang.info/2016/10/23/Hexo%E6%8F%92%E4%BB%B6%E4%B9%8B%E7%99%BE%E5%BA%A6%E4%B8%BB%E5%8A%A8%E6%8F%90%E4%BA%A4%E9%93%BE%E6%8E%A5/" target="_blank">王辉的博客</a></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> 软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hexo优化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hxeo百度站长工具抓取失败的原因]]></title>
      <url>/20170216-Hxeot%E7%99%BE%E5%BA%A6%E7%AB%99%E9%95%BF%E5%B7%A5%E5%85%B7%E6%8A%93%E5%8F%96%E5%A4%B1%E8%B4%A5%E7%9A%84%E5%8E%9F%E5%9B%A0/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>近期在折腾下hexo博客</p><p>发现百度搜索网址都搜索不到自己的站点</p><p>我只把hexo传到github上，然而去百度站长工具提交网址几条后也没有反应</p><p>我就测试了一下百度站长工具 - 抓取诊断</p><p>结果是抓取失败:<strong>Github把百度的爬虫给干掉了</strong>！所以。。。</p><hr><p>具体内容如下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">提交网址：	http://hisen.me/20170214-maven%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</div><div class="line">抓取网址：	http://hisen.me/20170214-maven%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</div><div class="line">抓取UA：	Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)</div><div class="line">抓取时间：	2017-02-16 09:48:55</div><div class="line">网站IP：	151.***.***.133 已反馈，预计几分钟内完成更新</div><div class="line">下载时长：	0.331秒</div><div class="line">抓取异常信息：	拒绝访问  查看帮助</div></pre></td></tr></table></figure><p></p><p>返回HTTP头：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">HTTP/1.1 403 Forbidden</div><div class="line">Cache-Control: no-cache</div><div class="line">Content-Type: text/html</div><div class="line">Transfer-Encoding: chunked</div><div class="line">Accept-Ranges: bytes</div><div class="line">Date: Thu, 16 Feb 2017 01:48:55 GMT</div><div class="line">Via: 1.1 varnish</div><div class="line">Connection: close</div><div class="line">X-Served-By: cache-itm7421-ITM</div><div class="line">X-Cache: MISS</div><div class="line">X-Cache-Hits: 0</div><div class="line">X-Timer: S1487209735.687949,VS0,VE187</div><div class="line">Vary: Accept-Encoding</div><div class="line">X-Fastly-Request-ID: 3e528056d3333113dfb5da5c92a2421fa71f3705</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> 软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IDEA修改全局设置，如maven等]]></title>
      <url>/20170215-IDEA%E4%BF%AE%E6%94%B9%E5%85%A8%E5%B1%80%E8%AE%BE%E7%BD%AE%EF%BC%8C%E5%A6%82maven%E7%AD%89/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>这几天在折腾maven项目</p><p>我发现居然每次新open一个项目就得配置下maven</p><p>因为默认的maven配置文件不行，我自定义的文件用的是阿里云的镜像</p><p>那样快一点，于是很郁闷，决定要搞定他！！！</p><p>结果这样设置就可以了，全局设置。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">File---&gt;Other Setting---&gt;Default Setting</div></pre></td></tr></table></figure><p></p><p>接下来的设置就是一样的了，各种设置都可以，只要你想全局生效</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> 软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> idea </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[windows任务栏由底部改到左边，并自动隐藏]]></title>
      <url>/20170215-windows%E4%BB%BB%E5%8A%A1%E6%A0%8F%E7%94%B1%E5%BA%95%E9%83%A8%E6%94%B9%E5%88%B0%E5%B7%A6%E8%BE%B9%EF%BC%8C%E5%B9%B6%E8%87%AA%E5%8A%A8%E9%9A%90%E8%97%8F/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>windows默认是在底部的</p><p>在底部任务栏空白处：</p><p>右键—设置—任务栏—在桌面模式下自动隐藏任务栏(开)—任务栏在屏幕上的位置(上 | 下 | 左 | 右)</p><p>这样就设置完毕了，毕竟笔记本太小<br>用idea的时候居然有些界面很难点击OK什么的！！！</p><hr><p>知乎有专门讨论任务栏放置位置分析，有兴趣的可以看看:</p><p><a href="https://www.zhihu.com/question/20519087" target="_blank">Windows 任务栏放在窗口左边和下面哪一种更合理？各有什么利弊？</a></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> 软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> idea </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[idea启动tomcat服务失败 SEVERE [RMI TCP Connection(3)-127.0.0.1]]]></title>
      <url>/20170215-idea%E5%90%AF%E5%8A%A8tomcat%E6%9C%8D%E5%8A%A1%E5%A4%B1%E8%B4%A5-SEVERE-RMI-TCP-Connection-3-127-0-0-1/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>工程是从eclipse生成的，用idea开发。</p><p>重复了一遍以往正常的不能再正常了的导入配置，结果遇到了如下问题：</p><p>SEVERE [<strong>RMI TCP Connection(3)-127.0.0.1</strong>]<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">15-Feb-2017 11:05:25.993 严重 [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.core.StandardContext.listenerStart Skipped installing application listeners due to previous error(s)</div></pre></td></tr></table></figure><p></p><h2 id="删除导入项目中的web-xml文件"><a href="#删除导入项目中的web-xml文件" class="headerlink" title="删除导入项目中的web.xml文件"></a>删除导入项目中的web.xml文件</h2><p>因为idea要用的东西自己会自动生成</p><p>然后就搞定了这个纠结我一天的问题</p><p>我是百度搜索这个错误：<strong>RMI TCP Connection(3)-127.0.0.1</strong></p><p>得到的答案，感谢10100：<a href="http://www.cnblogs.com/A-QBlog/p/5865578.html" target="_blank">查看原文</a></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> idea </tag>
            
            <tag> tomcat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[maven环境搭建]]></title>
      <url>/20170214-maven%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><h2 id="一、环境的配置"><a href="#一、环境的配置" class="headerlink" title="一、环境的配置"></a>一、环境的配置</h2><ol><li>下载maven：<a href="http://maven.apache.org/download.cgi" target="_blank">http://maven.apache.org/download.cgi</a></li><li>解压到相关目录</li><li>配置环境变量：计算机—系统属性—高级系统设置—环境变量</li><li>系统变量新建：M2_HOME 变量值：C:\tool\JAVA\apache-maven-3.3.9</li><li>path中添加：%M2_HOME%\bin; (注意看看前面有没有分号隔开，没有添上)</li><li>启动cmd，输入mvm -v可以查看版本<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-11T00:41:47+08:00)</div><div class="line">Maven home: C:\tool\JAVA\apache-maven-3.3.9</div><div class="line">Java version: 1.7.0_51, vendor: Oracle Corporation</div><div class="line">Java home: C:\hisenwork\Java\jdk1.7.0_51\jre</div><div class="line">Default locale: zh_CN, platform encoding: GBK</div><div class="line">OS name: &quot;windows 8&quot;, version: &quot;6.2&quot;, arch: &quot;amd64&quot;, family: &quot;windows&quot;</div></pre></td></tr></table></figure></li></ol><h2 id="二、自定义设置-优化"><a href="#二、自定义设置-优化" class="headerlink" title="二、自定义设置(优化)"></a>二、自定义设置(优化)</h2><p>1.自定义下载目录，修改配置文件<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\hisenwork\soft\maven-3.3.9\conf\settings.xml</div></pre></td></tr></table></figure><p></p><p><strong>C:\hisenwork\soft\maven-3.3.9</strong>为你解压的maven路径</p><hr><p><strong>ps：</strong>如果不想自己设置，我有现成的settings.xml，直接复制粘贴，覆盖原来的即可<br>现成的settings.xml内容我放在底部<br><a id="more"></a><br>搜索：localRepository</p><p>在注释外添加以下代码，以后下载maven相关文件就会在这<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;!--自定义存放目录--&gt;</div><div class="line">  &lt;localRepository&gt;C:\hisenwork\soft\maven</div><div class="line">&lt;/localRepository&gt;</div></pre></td></tr></table></figure><p></p><p>2.自定义镜像(推荐阿里云，速度飞快)</p><p>搜索：mirrors</p><p>在里面添加：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;!--阿里云--&gt;</div><div class="line">&lt;mirror&gt;</div><div class="line">	&lt;id&gt;nexus-aliyun&lt;/id&gt;</div><div class="line">	&lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</div><div class="line">	&lt;name&gt;Nexus aliyun&lt;/name&gt;</div><div class="line">	&lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</div><div class="line">&lt;/mirror&gt;</div></pre></td></tr></table></figure><p></p><p>3.运行命令初始化maven<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn  help:system</div></pre></td></tr></table></figure><p></p><p>然后你会看到命令行飞快的移动，在你刚刚设置的目录下会出现很多东西</p><p>类似于这样<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">$ mvn  help:system</div><div class="line">[INFO] Scanning for projects...</div><div class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-clean-plugin/2.5/maven-clean-plugin-2.5.pom</div><div class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-clean-plugin/2.5/maven-clean-plugin-2.5.pom (4 KB at 1.8 KB/sec)</div><div class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-plugins/22/maven-plugins-22.pom</div><div class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-plugins/22/maven-plugins-22.pom (13 KB at 15.9 KB/sec)</div><div class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/21/maven-parent-21.pom</div><div class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/21/maven-parent-21.pom (26 KB at 15.5 KB/sec)</div><div class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/apache/10/apache-10.pom</div><div class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/apache/10/apache-10.pom (15 KB at 19.3 KB/sec)</div><div class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-clean-plugin/2.5/maven-clean-plugin-2.5.jar</div><div class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-clean-plugin/2.5/maven-clean-plugin-2.5.jar (25 KB at 30.6 KB/sec)</div><div class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-install-plugin/2.4/maven-install-plugin-2.4.pom</div><div class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-install-plugin/2.4/maven-install-plugin-2.4.pom (7 KB at 5.5 KB/sec)</div><div class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-plugins/23/maven-plugins-23.pom</div><div class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-plugins/23/maven-plugins-23.pom (9 KB at 8.2 KB/sec)</div><div class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/22/maven-parent-22.pom</div><div class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/maven/maven-parent/22/maven-parent-22.pom (30 KB at 7.9 KB/sec)</div><div class="line">Downloading: https://repo.maven.apache.org/maven2/org/apache/apache/11/apache-11.pom</div><div class="line">Downloaded: https://repo.maven.apache.org/maven2/org/apache/apache/11/apache-11.pom (15 KB at 12.8 KB/sec)</div><div class="line">[INFO] ------------------------------------------------------------------------</div><div class="line">[INFO] BUILD SUCCESS</div><div class="line">[INFO] ------------------------------------------------------------------------</div><div class="line">[INFO] Total time: 49.223 s</div><div class="line">[INFO] Finished at: 2017-02-14T13:09:33+08:00</div><div class="line">[INFO] Final Memory: 11M/152M</div><div class="line">[INFO] ------------------------------------------------------------------------</div></pre></td></tr></table></figure><p></p><h2 id="三、maven相关命令"><a href="#三、maven相关命令" class="headerlink" title="三、maven相关命令"></a>三、maven相关命令</h2><p>创建 Maven 项目<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn archetype:create</div></pre></td></tr></table></figure><p></p><p>编译源代码（编译到target文件夹中）<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn compile</div></pre></td></tr></table></figure><p></p><p>编译测试代码<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn test-compile</div></pre></td></tr></table></figure><p></p><p>运行应用程序中的单元测试<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn test</div></pre></td></tr></table></figure><p></p><p>生成项目相关信息的网站<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn site</div></pre></td></tr></table></figure><p></p><p>清除目标目录中的生成结果（把默认target文件夹中的数据清理）<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn clean</div></pre></td></tr></table></figure><p></p><p>项目打包<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn package</div></pre></td></tr></table></figure><p></p><p>将打包好的包安装到本地仓库中，以使其塔项目能够调用<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn install</div></pre></td></tr></table></figure><p></p><p>生成 Eclipse 项目文件<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn eclipse:eclipse</div></pre></td></tr></table></figure><p></p><p>忽略测试文档编译<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn -Dmaven.test.skip=true</div></pre></td></tr></table></figure><p></p><p>部署到私有服务器<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cargo:deploy</div></pre></td></tr></table></figure><p></p><h2 id="四、settings-xml"><a href="#四、settings-xml" class="headerlink" title="四、settings.xml"></a>四、settings.xml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;!--</div><div class="line">author：HiSEN</div><div class="line">website：http://hisen.me</div><div class="line">--&gt;</div><div class="line">&lt;!--</div><div class="line">Licensed to the Apache Software Foundation (ASF) under one</div><div class="line">or more contributor license agreements.  See the NOTICE file</div><div class="line">distributed with this work for additional information</div><div class="line">regarding copyright ownership.  The ASF licenses this file</div><div class="line">to you under the Apache License, Version 2.0 (the</div><div class="line">&quot;License&quot;); you may not use this file except in compliance</div><div class="line">with the License.  You may obtain a copy of the License at</div><div class="line"></div><div class="line">    http://www.apache.org/licenses/LICENSE-2.0</div><div class="line"></div><div class="line">Unless required by applicable law or agreed to in writing,</div><div class="line">software distributed under the License is distributed on an</div><div class="line">&quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</div><div class="line">KIND, either express or implied.  See the License for the</div><div class="line">specific language governing permissions and limitations</div><div class="line">under the License.</div><div class="line">--&gt;</div><div class="line"></div><div class="line">&lt;!--</div><div class="line"> | This is the configuration file for Maven. It can be specified at two levels:</div><div class="line"> |</div><div class="line"> |  1. User Level. This settings.xml file provides configuration for a single user,</div><div class="line"> |                 and is normally provided in $&#123;user.home&#125;/.m2/settings.xml.</div><div class="line"> |</div><div class="line"> |                 NOTE: This location can be overridden with the CLI option:</div><div class="line"> |</div><div class="line"> |                 -s /path/to/user/settings.xml</div><div class="line"> |</div><div class="line"> |  2. Global Level. This settings.xml file provides configuration for all Maven</div><div class="line"> |                 users on a machine (assuming they&apos;re all using the same Maven</div><div class="line"> |                 installation). It&apos;s normally provided in</div><div class="line"> |                 $&#123;maven.home&#125;/conf/settings.xml.</div><div class="line"> |</div><div class="line"> |                 NOTE: This location can be overridden with the CLI option:</div><div class="line"> |</div><div class="line"> |                 -gs /path/to/global/settings.xml</div><div class="line"> |</div><div class="line"> | The sections in this sample file are intended to give you a running start at</div><div class="line"> | getting the most out of your Maven installation. Where appropriate, the default</div><div class="line"> | values (values used when the setting is not specified) are provided.</div><div class="line"> |</div><div class="line"> |--&gt;</div><div class="line">&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</div><div class="line">          xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class="line">          xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&gt;</div><div class="line">  &lt;!-- localRepository</div><div class="line">   | The path to the local repository maven will use to store artifacts.</div><div class="line">   |</div><div class="line">   | Default: $&#123;user.home&#125;/.m2/repository</div><div class="line">  &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</div><div class="line">  --&gt;</div><div class="line">  &lt;!--自定义存放目录--&gt;</div><div class="line">  &lt;localRepository&gt;C:\hisenwork\soft\maven</div><div class="line">  &lt;/localRepository&gt;</div><div class="line"></div><div class="line">  &lt;!-- interactiveMode</div><div class="line">   | This will determine whether maven prompts you when it needs input. If set to false,</div><div class="line">   | maven will use a sensible default value, perhaps based on some other setting, for</div><div class="line">   | the parameter in question.</div><div class="line">   |</div><div class="line">   | Default: true</div><div class="line">  &lt;interactiveMode&gt;true&lt;/interactiveMode&gt;</div><div class="line">  --&gt;</div><div class="line"></div><div class="line">  &lt;!-- offline</div><div class="line">   | Determines whether maven should attempt to connect to the network when executing a build.</div><div class="line">   | This will have an effect on artifact downloads, artifact deployment, and others.</div><div class="line">   |</div><div class="line">   | Default: false</div><div class="line">  &lt;offline&gt;false&lt;/offline&gt;</div><div class="line">  --&gt;</div><div class="line"></div><div class="line">  &lt;!-- pluginGroups</div><div class="line">   | This is a list of additional group identifiers that will be searched when resolving plugins by their prefix, i.e.</div><div class="line">   | when invoking a command line like &quot;mvn prefix:goal&quot;. Maven will automatically add the group identifiers</div><div class="line">   | &quot;org.apache.maven.plugins&quot; and &quot;org.codehaus.mojo&quot; if these are not already contained in the list.</div><div class="line">   |--&gt;</div><div class="line">  &lt;pluginGroups&gt;</div><div class="line">    &lt;!-- pluginGroup</div><div class="line">     | Specifies a further group identifier to use for plugin lookup.</div><div class="line">    &lt;pluginGroup&gt;com.your.plugins&lt;/pluginGroup&gt;</div><div class="line">    --&gt;</div><div class="line">  &lt;/pluginGroups&gt;</div><div class="line"></div><div class="line">  &lt;!-- proxies</div><div class="line">   | This is a list of proxies which can be used on this machine to connect to the network.</div><div class="line">   | Unless otherwise specified (by system property or command-line switch), the first proxy</div><div class="line">   | specification in this list marked as active will be used.</div><div class="line">   |--&gt;</div><div class="line">  &lt;proxies&gt;</div><div class="line">    &lt;!-- proxy</div><div class="line">     | Specification for one proxy, to be used in connecting to the network.</div><div class="line">     |</div><div class="line">    &lt;proxy&gt;</div><div class="line">      &lt;id&gt;optional&lt;/id&gt;</div><div class="line">      &lt;active&gt;true&lt;/active&gt;</div><div class="line">      &lt;protocol&gt;http&lt;/protocol&gt;</div><div class="line">      &lt;username&gt;proxyuser&lt;/username&gt;</div><div class="line">      &lt;password&gt;proxypass&lt;/password&gt;</div><div class="line">      &lt;host&gt;proxy.host.net&lt;/host&gt;</div><div class="line">      &lt;port&gt;80&lt;/port&gt;</div><div class="line">      &lt;nonProxyHosts&gt;local.net|some.host.com&lt;/nonProxyHosts&gt;</div><div class="line">    &lt;/proxy&gt;</div><div class="line">    --&gt;</div><div class="line">  &lt;/proxies&gt;</div><div class="line"></div><div class="line">  &lt;!-- servers</div><div class="line">   | This is a list of authentication profiles, keyed by the server-id used within the system.</div><div class="line">   | Authentication profiles can be used whenever maven must make a connection to a remote server.</div><div class="line">   |--&gt;</div><div class="line">  &lt;servers&gt;</div><div class="line">    &lt;!-- server</div><div class="line">     | Specifies the authentication information to use when connecting to a particular server, identified by</div><div class="line">     | a unique name within the system (referred to by the &apos;id&apos; attribute below).</div><div class="line">     |</div><div class="line">     | NOTE: You should either specify username/password OR privateKey/passphrase, since these pairings are</div><div class="line">     |       used together.</div><div class="line">     |</div><div class="line">    &lt;server&gt;</div><div class="line">      &lt;id&gt;deploymentRepo&lt;/id&gt;</div><div class="line">      &lt;username&gt;repouser&lt;/username&gt;</div><div class="line">      &lt;password&gt;repopwd&lt;/password&gt;</div><div class="line">    &lt;/server&gt;</div><div class="line">    --&gt;</div><div class="line"></div><div class="line">    &lt;!-- Another sample, using keys to authenticate.</div><div class="line">    &lt;server&gt;</div><div class="line">      &lt;id&gt;siteServer&lt;/id&gt;</div><div class="line">      &lt;privateKey&gt;/path/to/private/key&lt;/privateKey&gt;</div><div class="line">      &lt;passphrase&gt;optional; leave empty if not used.&lt;/passphrase&gt;</div><div class="line">    &lt;/server&gt;</div><div class="line">    --&gt;</div><div class="line">  &lt;/servers&gt;</div><div class="line"></div><div class="line">  &lt;!-- mirrors</div><div class="line">   | This is a list of mirrors to be used in downloading artifacts from remote repositories.</div><div class="line">   |</div><div class="line">   | It works like this: a POM may declare a repository to use in resolving certain artifacts.</div><div class="line">   | However, this repository may have problems with heavy traffic at times, so people have mirrored</div><div class="line">   | it to several places.</div><div class="line">   |</div><div class="line">   | That repository definition will have a unique id, so we can create a mirror reference for that</div><div class="line">   | repository, to be used as an alternate download site. The mirror site will be the preferred</div><div class="line">   | server for that repository.</div><div class="line">   |--&gt;</div><div class="line">  &lt;mirrors&gt;</div><div class="line">    &lt;!-- mirror</div><div class="line">     | Specifies a repository mirror site to use instead of a given repository. The repository that</div><div class="line">     | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used</div><div class="line">     | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.</div><div class="line">     |</div><div class="line">    &lt;mirror&gt;</div><div class="line">      &lt;id&gt;mirrorId&lt;/id&gt;</div><div class="line">      &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;</div><div class="line">      &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</div><div class="line">      &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;</div><div class="line">    &lt;/mirror&gt;</div><div class="line">     --&gt;</div><div class="line">	&lt;!--阿里云--&gt;</div><div class="line">	&lt;mirror&gt;</div><div class="line">		&lt;id&gt;nexus-aliyun&lt;/id&gt;</div><div class="line">		&lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</div><div class="line">		&lt;name&gt;Nexus aliyun&lt;/name&gt;</div><div class="line">		&lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</div><div class="line">	&lt;/mirror&gt; </div><div class="line">  &lt;/mirrors&gt;</div><div class="line"></div><div class="line">  &lt;!-- profiles</div><div class="line">   | This is a list of profiles which can be activated in a variety of ways, and which can modify</div><div class="line">   | the build process. Profiles provided in the settings.xml are intended to provide local machine-</div><div class="line">   | specific paths and repository locations which allow the build to work in the local environment.</div><div class="line">   |</div><div class="line">   | For example, if you have an integration testing plugin - like cactus - that needs to know where</div><div class="line">   | your Tomcat instance is installed, you can provide a variable here such that the variable is</div><div class="line">   | dereferenced during the build process to configure the cactus plugin.</div><div class="line">   |</div><div class="line">   | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles</div><div class="line">   | section of this document (settings.xml) - will be discussed later. Another way essentially</div><div class="line">   | relies on the detection of a system property, either matching a particular value for the property,</div><div class="line">   | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a</div><div class="line">   | value of &apos;1.4&apos; might activate a profile when the build is executed on a JDK version of &apos;1.4.2_07&apos;.</div><div class="line">   | Finally, the list of active profiles can be specified directly from the command line.</div><div class="line">   |</div><div class="line">   | NOTE: For profiles defined in the settings.xml, you are restricted to specifying only artifact</div><div class="line">   |       repositories, plugin repositories, and free-form properties to be used as configuration</div><div class="line">   |       variables for plugins in the POM.</div><div class="line">   |</div><div class="line">   |--&gt;</div><div class="line">  &lt;profiles&gt;</div><div class="line">    &lt;!-- profile</div><div class="line">     | Specifies a set of introductions to the build process, to be activated using one or more of the</div><div class="line">     | mechanisms described above. For inheritance purposes, and to activate profiles via &lt;activatedProfiles/&gt;</div><div class="line">     | or the command line, profiles have to have an ID that is unique.</div><div class="line">     |</div><div class="line">     | An encouraged best practice for profile identification is to use a consistent naming convention</div><div class="line">     | for profiles, such as &apos;env-dev&apos;, &apos;env-test&apos;, &apos;env-production&apos;, &apos;user-jdcasey&apos;, &apos;user-brett&apos;, etc.</div><div class="line">     | This will make it more intuitive to understand what the set of introduced profiles is attempting</div><div class="line">     | to accomplish, particularly when you only have a list of profile id&apos;s for debug.</div><div class="line">     |</div><div class="line">     | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo.</div><div class="line">    &lt;profile&gt;</div><div class="line">      &lt;id&gt;jdk-1.4&lt;/id&gt;</div><div class="line"></div><div class="line">      &lt;activation&gt;</div><div class="line">        &lt;jdk&gt;1.4&lt;/jdk&gt;</div><div class="line">      &lt;/activation&gt;</div><div class="line"></div><div class="line">      &lt;repositories&gt;</div><div class="line">        &lt;repository&gt;</div><div class="line">          &lt;id&gt;jdk14&lt;/id&gt;</div><div class="line">          &lt;name&gt;Repository for JDK 1.4 builds&lt;/name&gt;</div><div class="line">          &lt;url&gt;http://www.myhost.com/maven/jdk14&lt;/url&gt;</div><div class="line">          &lt;layout&gt;default&lt;/layout&gt;</div><div class="line">          &lt;snapshotPolicy&gt;always&lt;/snapshotPolicy&gt;</div><div class="line">        &lt;/repository&gt;</div><div class="line">      &lt;/repositories&gt;</div><div class="line">    &lt;/profile&gt;</div><div class="line">    --&gt;</div><div class="line"></div><div class="line">    &lt;!--</div><div class="line">     | Here is another profile, activated by the system property &apos;target-env&apos; with a value of &apos;dev&apos;,</div><div class="line">     | which provides a specific path to the Tomcat instance. To use this, your plugin configuration</div><div class="line">     | might hypothetically look like:</div><div class="line">     |</div><div class="line">     | ...</div><div class="line">     | &lt;plugin&gt;</div><div class="line">     |   &lt;groupId&gt;org.myco.myplugins&lt;/groupId&gt;</div><div class="line">     |   &lt;artifactId&gt;myplugin&lt;/artifactId&gt;</div><div class="line">     |</div><div class="line">     |   &lt;configuration&gt;</div><div class="line">     |     &lt;tomcatLocation&gt;$&#123;tomcatPath&#125;&lt;/tomcatLocation&gt;</div><div class="line">     |   &lt;/configuration&gt;</div><div class="line">     | &lt;/plugin&gt;</div><div class="line">     | ...</div><div class="line">     |</div><div class="line">     | NOTE: If you just wanted to inject this configuration whenever someone set &apos;target-env&apos; to</div><div class="line">     |       anything, you could just leave off the &lt;value/&gt; inside the activation-property.</div><div class="line">     |</div><div class="line">    &lt;profile&gt;</div><div class="line">      &lt;id&gt;env-dev&lt;/id&gt;</div><div class="line"></div><div class="line">      &lt;activation&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">          &lt;name&gt;target-env&lt;/name&gt;</div><div class="line">          &lt;value&gt;dev&lt;/value&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">      &lt;/activation&gt;</div><div class="line"></div><div class="line">      &lt;properties&gt;</div><div class="line">        &lt;tomcatPath&gt;/path/to/tomcat/instance&lt;/tomcatPath&gt;</div><div class="line">      &lt;/properties&gt;</div><div class="line">    &lt;/profile&gt;</div><div class="line">    --&gt;</div><div class="line">  &lt;/profiles&gt;</div><div class="line"></div><div class="line">  &lt;!-- activeProfiles</div><div class="line">   | List of profiles that are active for all builds.</div><div class="line">   |</div><div class="line">  &lt;activeProfiles&gt;</div><div class="line">    &lt;activeProfile&gt;alwaysActiveProfile&lt;/activeProfile&gt;</div><div class="line">    &lt;activeProfile&gt;anotherAlwaysActiveProfile&lt;/activeProfile&gt;</div><div class="line">  &lt;/activeProfiles&gt;</div><div class="line">  --&gt;</div><div class="line">&lt;/settings&gt;</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> maven </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IDEA自定义注释模板(javadoc) - Jindent插件 - 安装&设置]]></title>
      <url>/20170214-IDEA%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E9%87%8A%E6%A8%A1%E6%9D%BF-javadoc-Jindent%E6%8F%92%E4%BB%B6-%E5%AE%89%E8%A3%85-%E8%AE%BE%E7%BD%AE/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>在线安装</p><ol><li>File—&gt;Settings—&gt;Plugin—&gt;Browse repositories…</li><li>搜索框输入：jindent</li><li>Jindent - Source Code Formatter 选中</li><li>右边 install</li><li>等待安装完成</li><li>apply之后会让你重启idea</li></ol><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> 软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javadoc </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IntelliJ IDEA 注册码 20171123到期]]></title>
      <url>/20170214-IntelliJ-IDEA-%E6%B3%A8%E5%86%8C%E7%A0%81-20171123%E5%88%B0%E6%9C%9F/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>IntelliJ IDEA 注册码</p><p>到期时间为2017年11月23日</p><p>打开的时候选择注册码激活,不用补丁或者破解</p><p>注册码<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">BIG3CLIK6F-eyJsaWNlbnNlSWQiOiJCSUczQ0xJSzZGIiwibGljZW5zZWVOYW1lIjoibGFuIHl1IiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiQUMiLCJwYWlkVXBUbyI6IjIwMTctMTEtMjMifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxNy0xMS0yMyJ9LHsiY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDE3LTExLTIzIn0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDE3LTExLTIzIn0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMTctMTEtMjMifSx7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMTctMTEtMjMifSx7ImNvZGUiOiJSQyIsInBhaWRVcFRvIjoiMjAxNy0xMS0yMyJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE3LTExLTIzIn0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMTctMTEtMjMifSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjAxNy0xMS0yMyJ9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDE3LTExLTIzIn0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMTctMTEtMjMifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxNy0xMS0yMyJ9XSwiaGFzaCI6IjQ3NzU1MTcvMCIsImdyYWNlUGVyaW9kRGF5cyI6MCwiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-iygsIMXTVeSyYkUxAqpHmymrgwN5InkOfeRhhPIPa88FO9FRuZosIBTY18tflChACznk3qferT7iMGKm7pumDTR4FbVVlK/3n1ER0eMKu2NcaXb7m10xT6kLW1Xb3LtuZEnuis5pYuEwT1zR7GskeNWdYZ0dAJpNDLFrqPyAPo5s1KLDHKpw+VfVd4uf7RMjOIzuJhAAYAG+amyivQt61I9aYiwpHQvUphvTwi0X0qL/oDJHAQbIv4Qwscyo4aYZJBKutYioZH9rgOP6Yw/sCltpoPWlJtDOcw/iEWYiCVG1pH9AWjCYXZ9AbbEBOWV71IQr5VWrsqFZ7cg7hLEJ3A==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==</div></pre></td></tr></table></figure><p></p><p>也可以自己搭建idea授权服务器，参考<a href="http://idea.lanyus.com/" target="_blank">点击查看</a></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> 软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PLSQL注册码 - 9999/12/31]]></title>
      <url>/20170214-PLSQL%E6%B3%A8%E5%86%8C%E7%A0%81-9999-12-31/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p><strong>PLSQL注册码</strong><br>过期时间为：9999/12/31<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Registration successful</div><div class="line"></div><div class="line">01.601769 - unlimited user licence</div><div class="line">service contract：9999/12/31</div></pre></td></tr></table></figure><p></p><hr><p>Product Code：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">4t46t6vydkvsxekkvf3fjnpzy5wbuhphqz</div></pre></td></tr></table></figure><p></p><p>serial Number：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">601769</div></pre></td></tr></table></figure><p></p><p>password：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xs374ca</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> 软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> PLSQL </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Intellij Idea 快捷键汇总&介绍]]></title>
      <url>/20170213-Intellij-Idea-%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%B1%87%E6%80%BB-%E4%BB%8B%E7%BB%8D/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>最常用快捷键(1~18)</p><ol><li>Ctrl＋E，可以显示最近编辑的文件列表</li><li>Shift＋Click可以关闭文件</li><li>Ctrl＋[或]可以跳到大括号的开头结尾</li><li>Ctrl＋Shift＋Backspace可以跳转到上次编辑的地方</li><li>Ctrl＋F12，可以显示当前文件的结构</li><li>Ctrl＋F7可以查询当前元素在当前文件中的引用，然后按F3可以选择</li><li>Ctrl＋N，可以快速打开类</li><li>Ctrl＋Shift＋N，可以快速打开文件</li><li>Alt＋Q可以看到当前方法的声明</li><li>Ctrl＋W可以选择单词继而语句继而行继而函数</li><li>Alt＋F1可以将正在编辑的元素在各个面板中定位</li><li>Ctrl＋P，可以显示参数信息</li><li>Ctrl＋Shift＋Insert可以选择剪贴板内容并插入</li><li>Alt＋Insert可以生成构造器/Getter/Setter等</li><li>Ctrl＋Alt＋V 可以引入变量。例如把括号内的SQL赋成一个变量</li><li>Ctrl＋Alt＋T可以把代码包在一块内，例如try/catch</li><li>Alt＋Up and Alt＋Down可在方法间快速移动</li><li>在一些地方按Alt＋Enter可以得到一些Intention Action，例如将”==”改为”equals()”</li><li>Ctrl＋Shift＋Alt＋N可以快速打开符号</li><li>Ctrl＋Shift＋Space在很多时候都能够给出Smart提示</li><li>Alt＋F3可以快速寻找</li><li>Ctrl＋/和Ctrl＋Shift＋/可以注释代码</li><li>Ctrl＋Alt＋B可以跳转到抽象方法的实现</li><li>Ctrl＋O可以选择父类的方法进行重写</li><li>Ctrl＋Q可以看JavaDoc</li><li>Ctrl＋Alt＋Space是类名自动完成</li><li>快速打开类/文件/符号时，可以使用通配符，也可以使用缩写</li><li>Live Templates! Ctrl＋J</li><li>Ctrl＋Shift＋F7可以高亮当前元素在当前文件中的使用</li><li>Ctrl＋Alt＋Up /Ctrl＋Alt＋Down可以快速跳转搜索结果</li><li>Ctrl＋Shift＋J可以整合两行</li><li>Alt＋F8是计算变量值</li></ol><a id="more"></a><p>Alt+回车 导入包,自动修正</p><p>Ctrl+N 查找类</p><p>Ctrl+Shift+N 查找文件</p><p>Ctrl+Alt+L 格式化代码</p><p>Ctrl+Alt+O 优化导入的类和包</p><p>Alt+Insert 生成代码(如get,set方法,构造函数等)</p><p>Ctrl+E或者Alt+Shift+C 最近更改的代码</p><p>Ctrl+R 替换文本</p><p>Ctrl+F 查找文本</p><p>Ctrl+Shift+Space 自动补全代码</p><p>Ctrl+空格 代码提示</p><p>Ctrl+Alt+Space 类名或接口名提示</p><p>Ctrl+P 方法参数提示</p><p>Ctrl+Shift+Alt+N 查找类中的方法或变量</p><p>Alt+Shift+C 对比最近修改的代码</p><p>Shift+F6 重构-重命名</p><p>Ctrl+Shift+先上键</p><p>Ctrl+X 删除行</p><p>Ctrl+D 复制行</p><p>Ctrl+/ 或 Ctrl+Shift+/ 注释（// 或者/<em>…</em>/ ）</p><p>Ctrl+J 自动代码</p><p>Ctrl+E 最近打开的文件</p><p>Ctrl+H 显示类结构图</p><p>Ctrl+Q 显示注释文档</p><p>Alt+F1 查找代码所在位置</p><p>Alt+1 快速打开或隐藏工程面板</p><p>Ctrl+Alt+ left/right 返回至上次浏览的位置</p><p>Alt+ left/right 切换代码视图</p><p>Alt+ Up/Down 在方法间快速移动定位</p><p>Ctrl+Shift+Up/Down 代码向上/下移动。</p><p>F2 或Shift+F2 高亮错误或警告快速定位</p><p>代码标签输入完成后，按Tab，生成代码。</p><p>选中文本，按Ctrl+Shift+F7 ，高亮显示所有该文本，按Esc高亮消失。</p><p>Ctrl+W 选中代码，连续按会有其他效果</p><p>选中文本，按Alt+F3 ，逐个往下查找相同文本，并高亮显示。</p><p>Ctrl+Up/Down 光标跳转到第一行或最后一行下</p><p>Ctrl+B 快速打开光标处的类或方法</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> 软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> idea </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[网关、快捷支付，代收代付，账户托管，二维码扫码支付]]></title>
      <url>/20170213-%E7%BD%91%E5%85%B3%E3%80%81%E5%BF%AB%E6%8D%B7%E6%94%AF%E4%BB%98%EF%BC%8C%E4%BB%A3%E6%94%B6%E4%BB%A3%E4%BB%98%EF%BC%8C%E8%B4%A6%E6%88%B7%E6%89%98%E7%AE%A1%EF%BC%8C%E4%BA%8C%E7%BB%B4%E7%A0%81%E6%89%AB%E7%A0%81%E6%94%AF%E4%BB%98/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><h2 id="一、网关支付"><a href="#一、网关支付" class="headerlink" title="一、网关支付"></a>一、网关支付</h2><p>这是在线支付的最普遍形式。<br>大致支付过程：第三方支付公司作为代理（网关），接入一堆银行。用户在网关页面（可以在商户端，也可以第三方支付平台端）选择银行，页面跳转到第三方支付平台，然后重定向到对应的银行，用户在银行电子银行官网，采用网银（个人网银或企业网银）完成支付。</p><p>网关支付分为：B2C、B2B两类。<br>涉及的概念：网银支付、银行卡支付。</p><p>我们一般说的网关支付是指在PC上的在线支付，由于国内银行基本上都要求安装对应的安全控件，且需要银行的网银客户端，这也是大家经常抱怨网银不支持MAC/Linux等操作系统、不支持除IE外的浏览器等兼容性问题。<br>在手机端也有类似网关支付的形态，但由于操作过程较为麻烦，体验不好，一般都采用快捷支付等支付形式。</p><h2 id="二、快捷支付"><a href="#二、快捷支付" class="headerlink" title="二、快捷支付"></a>二、快捷支付</h2><a id="more"></a><p>快捷支付一般是指首次需要验证卡要素，生成协议号或者TOKEN,后面支付直接凭协议号扣款。走的交易形式是消费。快捷支付相比于我们原先说的无磁无密支付[MOTO]在限额上有劣势，体验上有优势。<br>一个相当于长期关系，MOTO相当于一次性关系，每次来都要输入卡要素。</p><h2 id="三、代收代付"><a href="#三、代收代付" class="headerlink" title="三、代收代付"></a>三、代收代付</h2><p>代收代付业务是我社利用自身的结算便利，接受客户的委托代为办理指定款项的收付事宜的业务。</p><p>由中介公司或第三方代为收取和支付费用。</p><p>顾名思义，代收代付是指先付出去，然后再收回来，金额必须相等。</p><p>比如代办运输业务，如果是收取一定比率的手续费，就改变了性质。</p><p>代收代付业务分录：</p><p>代付时，借：其他应收款 贷：银行存款</p><p>收回时，借：银行存款 贷：其他应收款</p><h2 id="四、账户托管"><a href="#四、账户托管" class="headerlink" title="四、账户托管"></a>四、账户托管</h2><p>待完善</p><h2 id="五、二维码扫码支付"><a href="#五、二维码扫码支付" class="headerlink" title="五、二维码扫码支付"></a>五、二维码扫码支付</h2><p>微信扫码业务流程说明：</p><ol><li>商户后台系统根据用户选购的商品生成订单。</li><li>用户确认支付后调用微信支付【统一下单API】生成预支付交易；</li><li>微信支付系统收到请求后生成预支付交易单，并返回交易会话的二维码链接code_url。</li><li>商户后台系统根据返回的code_url生成二维码。</li><li>用户打开微信“扫一扫”扫描二维码，微信客户端将扫码内容发送到微信支付系统。</li><li>微信支付系统收到客户端请求，验证链接有效性后发起用户支付，要求用户授权。</li><li>用户在微信客户端输入密码，确认支付后，微信客户端提交授权。</li><li>微信支付系统根据用户授权完成支付交易。</li><li>微信支付系统完成支付交易后给微信客户端返回交易结果，并将交易结果通过短信、微信消息提示用户。微信客户端展示支付交易结果页面。</li><li>微信支付系统通过发送异步消息通知商户后台系统支付结果。商户后台系统需回复接收情况，通知微信后台系统不再发送该单的支付通知。</li><li>未收到支付通知的情况，商户后台系统调用【查询订单API】。</li><li>商户确认订单已支付后给用户发货。</li></ol><p>日后需要用到这方面的东西，先整理一番</p><p>系统的学习或者理解之后再来说说深层次的东西。</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> 三方支付 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 支付 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[阿里巴巴Java开发手册，摘要&下载链接]]></title>
      <url>/20170213-%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4Java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C%EF%BC%8C%E6%91%98%E8%A6%81-%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>阿里巴巴java开发手册</p><p>看了几个小时，感觉还是不错</p><p>都按规范来写，可以避免很多错误</p><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><a id="more"></a><p><a href="http://techforum-img.cn-hangzhou.oss-pub.aliyun-inc.com/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4Java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8Cv1.0.1.pdf" target="_target">点击下载</a></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MarkdownPad2注册码 20170213]]></title>
      <url>/20170213-MarkdownPad2%E6%B3%A8%E5%86%8C%E7%A0%81-20170213/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>MarkdownPad2注册码</p><p>亲测有效：2017年2月13日 18:07:25</p><hr><p>邮箱：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Soar360@live.com</div></pre></td></tr></table></figure><p></p><p>授权密钥：<br><a id="more"></a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> 软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MarkdownPad2注册码 </tag>
            
            <tag> 软件 </tag>
            
            <tag> MarkdownPad </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo提速优化 - 压缩html、css、js by hexo-neat插件]]></title>
      <url>/20170211-Hexo%E6%8F%90%E9%80%9F%E4%BC%98%E5%8C%96-%E5%8E%8B%E7%BC%A9html%E3%80%81css%E3%80%81js-by-hexo-neat%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>hexo博客生成的HTML代码留有大量的空白</p><p>通过搜索发现有不错的方法可以解决这个问题</p><p>那就是安装一个插件！名字叫：hexo-neat</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>命令行进入博客根目录，执行以下命令<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-neat --save</div></pre></td></tr></table></figure><p></p><p>如果使用的是淘宝的cnmp执行以下命令<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cnpm install hexo-neat --save</div></pre></td></tr></table></figure><p></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>打开站点配置文件<strong>_config.yml</strong>，添加以下内容：<br><a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">#hexo-neat 优化提速插件</div><div class="line">neat_enable: true</div><div class="line"></div><div class="line">neat_html:</div><div class="line">  enable: true</div><div class="line">  exclude:</div><div class="line">  </div><div class="line">neat_css:</div><div class="line">  enable: true</div><div class="line">  exclude:</div><div class="line">    - &apos;*.min.css&apos;</div><div class="line"></div><div class="line">neat_js:</div><div class="line">  enable: true</div><div class="line">  mangle: true</div><div class="line">  output:</div><div class="line">  compress:</div><div class="line">  exclude:</div><div class="line">    - &apos;*.min.js&apos;</div></pre></td></tr></table></figure><p>安装好之后，就直接正常使用(跟以前没有装的时候一样使用)，</p><p>重新生成博客就可以发现html源码已经压缩了</p><p>只是在生成博客的过程中可能要浪费一丁点时间</p><p>访问速度有所提升！</p><p>参考：<a href="https://segmentfault.com/a/1190000005799759" target="_blank">点击查看<a></a></a></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> 软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo优化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java静态代码块]]></title>
      <url>/20170211-Java%E9%9D%99%E6%80%81%E4%BB%A3%E7%A0%81%E5%9D%97/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>有时候重新回味一下以前的知识也很美妙</p><p>总能发现以前自己没有怎么在意的细节</p><hr><p>静态代码块是在类中独立于类成员的static语句块，可以有多个。</p><p>如果要初始化静态变量，可以声明一个静态块。</p><p>格式如下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">static &#123;</div><div class="line">	//块执行代码</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><p>静态块存在单独的内存中，仅在该类被加载时执行，示例如下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">package com.hisen.javaGaiShu.page91test20;</div><div class="line"></div><div class="line">public class JingTaiDaiMaKuai &#123;</div><div class="line">	private static String a;</div><div class="line">	private String b;</div><div class="line">	static &#123;</div><div class="line">		JingTaiDaiMaKuai.a = &quot;我学习了很多语言&quot;;</div><div class="line">		System.out.println(a);</div><div class="line">		JingTaiDaiMaKuai t = new JingTaiDaiMaKuai();</div><div class="line">		t.fina();</div><div class="line">		t.b=&quot;Java语言&quot;;</div><div class="line">		System.out.println(t.b);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	static &#123;</div><div class="line">		JingTaiDaiMaKuai.a = &quot;I Love Java&quot;;</div><div class="line">		System.out.println(a);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public static void main(String[] args) &#123;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	static &#123;</div><div class="line">		JingTaiDaiMaKuai.a = &quot;我还将继续学习下去&quot;;</div><div class="line">		System.out.println(a);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	private void fina() &#123;</div><div class="line">		System.out.println(&quot;但是我最喜欢的是：&quot;);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><hr><p>输出如下：<br><a id="more"></a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">我学习了很多语言</div><div class="line">但是我最喜欢的是：</div><div class="line">Java语言</div><div class="line">I Love Java</div><div class="line">我还将继续学习下去</div></pre></td></tr></table></figure><p></p><p>静态代码块在运行main方法时可以直接调用而不用创建实例。</p><p>静态代码块直接是按顺序执行的。</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> 练习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java三种创建对象的方式]]></title>
      <url>/20170210-Java%E4%B8%89%E7%A7%8D%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E5%BC%8F/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>有一个实现了Cloneable接口的Person类<br>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;使用new关键字创建对象&gt;</div><div class="line">hisen已成年</div><div class="line">体重为：50</div><div class="line">年龄为：23</div><div class="line">&lt;使用newInstance()方法创建对象&gt;</div><div class="line">体重为：0</div><div class="line">年龄为：0</div><div class="line">&lt;使用clone()方法创建对象&gt;</div><div class="line">hisen已成年</div><div class="line">体重为：50</div><div class="line">年龄为：23</div></pre></td></tr></table></figure><p>具体实现：<br><a id="more"></a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">package com.hisen.javaGaiShu.page73test5;</div><div class="line"></div><div class="line">/**</div><div class="line"> * 三种方式创建对象</div><div class="line"> * </div><div class="line"> * @author hisenyuan 2017年2月10日 下午10:27:14</div><div class="line"> */</div><div class="line">public class Person implements Cloneable &#123;</div><div class="line">	private String name;</div><div class="line">	private int weight;</div><div class="line">	private int age;</div><div class="line"></div><div class="line">	public Person() &#123;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public Person(String name, int weight, int age) &#123;</div><div class="line">		super();</div><div class="line">		this.name = name;</div><div class="line">		this.weight = weight;</div><div class="line">		this.age = age;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void young() &#123;</div><div class="line">		if (age &gt;= 18 &amp;&amp; age &lt;= 100)</div><div class="line">			System.out.println(name + &quot;已成年&quot;);</div><div class="line">		if (age &gt; 0 &amp;&amp; age &lt; 18)</div><div class="line">			System.out.println(name + &quot;未成年&quot;);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public String toString() &#123;</div><div class="line">		return &quot;体重为：&quot; + weight + &quot;\n年龄为：&quot; + age;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public static void main(String[] args) throws Exception &#123;</div><div class="line">		System.out.println(&quot;&lt;使用new关键字创建对象&gt;&quot;);</div><div class="line">		Person p1 = new Person(&quot;hisen&quot;, 50, 23);</div><div class="line">		p1.young();</div><div class="line">		System.out.println(p1);</div><div class="line"></div><div class="line">		System.out.println(&quot;&lt;使用newInstance()方法创建对象&gt;&quot;);</div><div class="line">		Class c = Class.forName(&quot;com.hisen.javaGaiShu.page73test5.Person&quot;);</div><div class="line">		Person p2 = (Person) c.newInstance();</div><div class="line">		p2.young();</div><div class="line">		System.out.println(p2);</div><div class="line"></div><div class="line">		System.out.println(&quot;&lt;使用clone()方法创建对象&gt;&quot;);</div><div class="line">		Person p3 = (Person) p1.clone();</div><div class="line">		p3.young();</div><div class="line">		System.out.println(p3);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> 对象 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java基本数据类型 - 以及相关内容]]></title>
      <url>/20170210-Java%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><table><thead><tr><th style="text-align:left">类型名称</th><th style="text-align:left">关键字</th><th style="text-align:left">占用内存</th><th style="text-align:left">取值范围</th><th style="text-align:left">包装类</th></tr></thead><tbody><tr><td style="text-align:left">字节型</td><td style="text-align:left">byte</td><td style="text-align:left">1</td><td style="text-align:left">-128~127</td><td style="text-align:left">Byte</td></tr><tr><td style="text-align:left">短整形</td><td style="text-align:left">short</td><td style="text-align:left">2</td><td style="text-align:left">-32768~32767</td><td style="text-align:left">Short</td></tr><tr><td style="text-align:left">整形</td><td style="text-align:left">int</td><td style="text-align:left">4</td><td style="text-align:left">-2147483648～2147483647</td><td style="text-align:left">Integer</td></tr><tr><td style="text-align:left">长整形</td><td style="text-align:left">long</td><td style="text-align:left">8</td><td style="text-align:left">-9223372036854775808L ~ 9223372036854775807L</td><td style="text-align:left">Long</td></tr><tr><td style="text-align:left">单精度浮点</td><td style="text-align:left">float</td><td style="text-align:left">4</td><td style="text-align:left">-3.4E38～3.4E38(6~7个有效位)</td><td style="text-align:left">Float</td></tr><tr><td style="text-align:left">双精度浮点</td><td style="text-align:left">double</td><td style="text-align:left">8</td><td style="text-align:left">-1.7E308～1.7E308(15个有效值)</td><td style="text-align:left">Double</td></tr><tr><td style="text-align:left">字符型</td><td style="text-align:left">char</td><td style="text-align:left">2</td><td style="text-align:left">ISO单一字符集，其表示范围是0～65535</td><td style="text-align:left">Charater</td></tr><tr><td style="text-align:left">布尔型</td><td style="text-align:left">boolean</td><td style="text-align:left">1</td><td style="text-align:left">true 或 false</td><td style="text-align:left">Boolean</td></tr></tbody></table><hr><p>所有基本数据类型的大小(所占用的字节数)都是明确规定好的，</p><p>在各种平台上都保持不变，这一特性有助于提高Java程序的可移植性。<br><a id="more"></a></p><hr><p>引用数据类型包括字符串、数组、类和接口。</p><p>引用数据类型是用户自定义、用来限制其他数据类型。</p><p>引用数据类型的变量在内存中存储的是数据的引用，并不是数据本身，</p><p>引用类型是使用间接方法去获取数据</p><hr><p><strong>java中int为什么占用4个字节？</strong></p><p><strong>回答1：</strong></p><p>现在流行的编译器，都是规定的int是四个字节～</p><p>像tc这样老版的编译器，int才是两个字节，</p><p>然后也是一样，由于一个字节占八位，最高为符号位，又人为规定，1000000000000000……这个补码编码为-2^31所以，范围就是-2^31~2^31-1</p><p><strong>回答2：</strong></p><p>JAVA是采用Unicode编码。每一个字节占8位。</p><p>你电脑系统应该是32位系统(工具)，这样每个int就是 4个字节</p><p>其中一个字节由8个二进制位组成</p><p><strong>回答3：</strong></p><p>int常见为4个字节，跟操作系统有关系。</p><p>turbo c（以及Turbo c的一些衍生编译器，他们用的一套编译程序）是dos时代的编译器，</p><p>是上世纪80年代的产物，严重过时，属于老掉牙的产品，</p><p>他们编译出来的程序是16位操作系统dos下的程序，所以长度为16位，即两个字节。</p><p>windows为了兼容dos，所以turbo c生成的文件也可以在windows中运行。</p><p>其他一般就都是4个字节了。</p><p>操作系统16位的时候，int 2字节，操作系统32位的时候，int 4字节，由于32位系统之前占主流地位，实际现在就算是64位系统，出于兼容性考虑，int也是4字节的</p><hr><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[windows10 专业版激活密钥]]></title>
      <url>/20170210-windows10-%E4%B8%93%E4%B8%9A%E7%89%88%E6%BF%80%E6%B4%BB%E5%AF%86%E9%92%A5/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>2017年2月10日 16:03:48<br>亲测可用，这比激活工具方便多了</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">VK7JG-NPHTM-C97JM-9MPGT-3V66T</div><div class="line"></div><div class="line">NPPR9-FWDCX-D2C8J-H872K-2YT43</div><div class="line"></div><div class="line">W269N-WFGWX-YVC9B-4J6C9-T83GX</div><div class="line"></div><div class="line">NYW94-47Q7H-7X9TT-W7TXD-JTYPM</div><div class="line"></div><div class="line">NJ4MX-VQQ7Q-FP3DB-VDGHX-7XM87</div><div class="line"></div><div class="line">MH37W-N47XK-V7XM9-C7227-GCQG9</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> 软件 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> windows10专业版激活密钥 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[20170209面试记录]]></title>
      <url>/20170210-20170209%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>上午那家公司约的是十一点面试</p><p>做完面试题等了好久技术负责人才来</p><p>这点差评，整个的题目感觉简单，技术负责人前后端好像分的不是很清楚</p><p>下午这家公司感觉面试官技术不错</p><h2 id="一、多线程中用哪些集合类？"><a href="#一、多线程中用哪些集合类？" class="headerlink" title="一、多线程中用哪些集合类？"></a>一、多线程中用哪些集合类？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">多线程中使用集合类主要是考虑线程安全</div><div class="line">线程安全的集合类有</div><div class="line">Vector属于线程安全级别的，但是大多数情况下不使用Vector，因为线程安全需要更大的系统开销</div><div class="line">Hashtable 中的方法是同步的</div><div class="line">StringBuilder和StringBuffer的方法是一模一样，StringBuilder是线程安全的</div></pre></td></tr></table></figure><a id="more"></a><h2 id="二、socket编程步骤？"><a href="#二、socket编程步骤？" class="headerlink" title="二、socket编程步骤？"></a>二、socket编程步骤？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">客户端:</div><div class="line"></div><div class="line">1.用服务器的IP地址和端口号实例化Socket对象。</div><div class="line"></div><div class="line">2.调用connect方法，连接到服务器上。</div><div class="line"></div><div class="line">3.将发送到服务器的IO流填充到IO对象里，比如BufferedReader/PrintWriter。</div><div class="line"></div><div class="line">4.利用Socket提供的getInputStream和getOutputStream方法，通过IO流对象，向服务器发送数据流。</div><div class="line"></div><div class="line">5. 通讯完成后，关闭打开的IO对象和Socket。</div><div class="line">6. </div><div class="line"></div><div class="line">服务器：</div><div class="line"></div><div class="line">1. 在服务器，用一个端口来实例化一个 ServerSocket对象。此时，服务器就可以这个端口时刻监听从客户端发来的连接请求。</div><div class="line"></div><div class="line">2.调用ServerSocket的accept方法，开始监听连接从端口上发来的连接请求。 　　</div><div class="line"></div><div class="line">3.利用accept方法返回的客户端的Socket对象，进行读写IO的操作</div><div class="line"></div><div class="line">通讯完成后，关闭打开的流和Socket对象。</div></pre></td></tr></table></figure><h2 id="三、JDBC有哪几步？防注入是哪个类？"><a href="#三、JDBC有哪几步？防注入是哪个类？" class="headerlink" title="三、JDBC有哪几步？防注入是哪个类？"></a>三、JDBC有哪几步？防注入是哪个类？</h2><p>使用PreparedStatement防止SQL注入</p><p>JDBC包含7个步骤：</p><p><strong>1.加载JDBC驱动程序</strong></p><p>在连接数据库之前，首先要加载想要连接的数据库的驱动到JVM（Java虚拟机），</p><p>这通过java.lang.Class类的静态方法forName(String className)实现。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">try &#123;</div><div class="line">	// 加载MySql的驱动类</div><div class="line">	Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</div><div class="line">&#125; catch (ClassNotFoundException e) &#123;</div><div class="line">	System.out.println(&quot;找不到驱动程序类 ，加载驱动失败！&quot;);</div><div class="line">	e.printStackTrace();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>成功加载后，会将Driver类的实例注册到DriverManager类中。</p><p><strong>2.提供JDBC连接的URL</strong><br>连接URL定义了连接数据库时的协议、子协议、数据源标识</p><p>书写形式：协议：子协议：数据源标识</p><p>协议：在JDBC中总是以jdbc开始</p><p>子协议：是桥连接的驱动程序或是数据库管理系统名称。</p><p>数据源标识：标记找到数据库来源的地址与连接端口。</p><p>例如：（MySql的连接URL）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=gbk;</div></pre></td></tr></table></figure><p>useUnicode=true：表示使用Unicode字符集</p><p>如果characterEncoding设置为gb2312或GBK，本参数必须设置为true</p><p>characterEncoding=gbk：字符编码方式。</p><p><strong>3.创建数据库的连接</strong><br>要连接数据库，需要向java.sql.DriverManager请求并获得Connection对象,该对象就代表一个数据库的连接。</p><p>使用DriverManager的getConnectin(String url , String username , String password )</p><p>方法传入指定的欲连接的数据库的路径、数据库的用户名和密码来获得。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">// 连接MySql数据库，用户名和密码都是root</div><div class="line">String url = &quot;jdbc:mysql://localhost:3306/test&quot;;</div><div class="line">String username = &quot;root&quot;;</div><div class="line">String password = &quot;root&quot;;</div><div class="line">try &#123;</div><div class="line">	Connection con = DriverManager.getConnection(url, username,</div><div class="line">			password);</div><div class="line">&#125; catch (SQLException se) &#123;</div><div class="line">	System.out.println(&quot;数据库连接失败！&quot;);</div><div class="line">	se.printStackTrace();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><strong>4.创建一个Statement</strong><br>要执行SQL语句，必须获得java.sql.Statement实例，</p><p>Statement实例分为以下3种类型：</p><p>1、执行静态SQL语句。通常通过Statement实例实现。</p><p>2、执行动态SQL语句。通常通过PreparedStatement实例实现。</p><p>3、执行数据库存储过程。通常通过CallableStatement实例实现。</p><p>具体的实现方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Statement stmt = con.createStatement();</div><div class="line">PreparedStatement pstmt = con.prepareStatement(sql);</div><div class="line">CallableStatement cstmt = con.prepareCall(&quot;&#123;CALL demoSp(? , ?)&#125;&quot;);</div></pre></td></tr></table></figure><p><strong>5.执行SQL语句</strong><br>Statement接口提供了三种执行SQL语句的方法：executeQuery 、executeUpdate和execute</p><p>1、ResultSet executeQuery(String sqlString)：执行查询数据库的SQL语句,返回一个结果集（ResultSet）对象。</p><p>2、int executeUpdate(String sqlString)：用于执行INSERT、UPDATE或DELETE语句以及SQL DDL语句，如：CREATE TABLE和DROP TABLE等</p><p>3、execute(sqlString):用于执行返回多个结果集、多个更新计数或二者组合的语句。</p><p>具体实现的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ResultSet rs = stmt.executeQuery(&quot;SELECT * FROM ...&quot;) ;</div><div class="line">int rows = stmt.executeUpdate(&quot;INSERT INTO ...&quot;) ;</div><div class="line">boolean flag = stmt.execute(String sql) ;</div></pre></td></tr></table></figure><p><strong>6.处理结果</strong></p><p>两种情况：</p><p>1、执行更新返回的是本次操作影响到的记录数。</p><p>2、执行查询返回的结果是一个ResultSet对象。</p><p>ResultSet包含符合SQL语句中条件的所有行，并且它通过一套get方法提供了对这些行中数据的访问。</p><p>使用结果集（ResultSet）对象的访问方法获取数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">while (rs.next()) &#123;</div><div class="line">	String name = rs.getString(&quot;name&quot;);</div><div class="line">	String pass = rs.getString(1); // 此方法比较高效</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>（列是从左到右编号的，并且从列1开始）</p><p><strong>7.关闭JDBC对象</strong></p><p>操作完成以后要把所有使用的JDBC对象全都关闭，以释放JDBC资源，</p><p>关闭顺序和声明顺序相反：</p><p>1、关闭记录集</p><p>2、关闭声明</p><p>3、关闭连接对象</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">if (rs != null) &#123;</div><div class="line">	// 关闭记录集</div><div class="line">	try &#123;</div><div class="line">		rs.close();</div><div class="line">	&#125; catch (SQLException e) &#123;</div><div class="line">		e.printStackTrace();</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">if (stmt != null) &#123;</div><div class="line">	// 关闭声明</div><div class="line">	try &#123;</div><div class="line">		stmt.close();</div><div class="line">	&#125; catch (SQLException e) &#123;</div><div class="line">		e.printStackTrace();</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">if (conn != null) &#123;</div><div class="line">	// 关闭连接对象</div><div class="line">	try &#123;</div><div class="line">		conn.close();</div><div class="line">	&#125; catch (SQLException e) &#123;</div><div class="line">		e.printStackTrace();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>四、hibernate映射的几种方式？</p><ol><li>多对一单向映射（User- Group）</li><li>多对多双向映射（User&lt;- Role）</li><li>多对多单向映射（User&lt;-Role）</li><li>一对一主键双向（Person?-&gt; IdCard）</li><li>一对一主键单向（Person–&gt; IdCard）</li><li>一对一外键单向（Person–&gt; IdCard）</li><li>一对一外键双向（Person&lt;–&gt; IdCard）</li><li>一对多单向（Group–&gt; User）</li><li>一对多双向（Group&lt;–&gt; User）</li><li>继承映射（Pig和Bird 继承Animal）–一棵继承树映射成一张表</li><li>继承映射（Pig和Bird 继承Animal）–每个具体类映射成一张表joined-classs</li><li>继承映射（Pig和Bird 继承Animal）–每个子类类映射成一张表union-subclass</li><li>component映射</li><li>Set,Map,Arrary[],List映射</li></ol><p>详情：<a href="http://blog.csdn.net/ff55c/article/details/6737072" target="_blank">点击查看</a></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> 面试 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo新建文章时候默认带上categories，tags]]></title>
      <url>/20170209-hexo%E6%96%B0%E5%BB%BA%E6%96%87%E7%AB%A0%E6%97%B6%E5%80%99%E9%BB%98%E8%AE%A4%E5%B8%A6%E4%B8%8Acategories%EF%BC%8Ctags/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>在博客的 <strong>scaffolds</strong> 文件夹里有个<strong>post.md</strong> 添加上需要的配置就行</p><p>这里是创建post的模板。</p><p>我的默认设置成这样：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: &#123;&#123; title &#125;&#125;</div><div class="line">date: &#123;&#123; date &#125;&#125;</div><div class="line">tags: []</div><div class="line">categories:</div><div class="line">---</div></pre></td></tr></table></figure><p></p><p>tags: [关键词1,关键词2]</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hexo优化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo 绑定个人域名简单方法]]></title>
      <url>/20170209-Hexo-%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E7%AE%80%E5%8D%95%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p><strong>1.</strong>直接注册个域名(随便在哪里)<br><strong>2.</strong>添加域名解析</p><table><thead><tr><th style="text-align:left">记录类型</th><th style="text-align:left">主机记录</th><th style="text-align:left">记录值</th></tr></thead><tbody><tr><td style="text-align:left">CNAME</td><td style="text-align:left">@</td><td style="text-align:left">hisen-yuan.github.io</td></tr></tbody></table><p>主机记录：@ 代表顶级域名，例如hisen.me 如果想要www.hisen.me把@改成www</p><p>记录值：你的博客原始地址</p><p><strong>3.</strong>在\blog\source下添加<strong>CNAME</strong>文件，没有后缀名，内容为你的域名，注意不要带http://</p><p>我的域名解析为 <strong>hisen.me</strong> 文件内容为 <strong>hisen.me</strong></p><p>等待解析生效即可！</p><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> hexo优化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo Landscape主题JS优化，不使用谷歌CDN]]></title>
      <url>/20170208-Hexo-Landscape%E4%B8%BB%E9%A2%98JS%E4%BC%98%E5%8C%96%EF%BC%8C%E4%B8%8D%E4%BD%BF%E7%94%A8%E8%B0%B7%E6%AD%8CCDN/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><h2 id="jQuery库的优化"><a href="#jQuery库的优化" class="headerlink" title="jQuery库的优化"></a>jQuery库的优化</h2><p>修改这个文件：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">themes/landscape/layout/_partial/after-footer.ejs</div></pre></td></tr></table></figure><p></p><p>将17行左右的<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script src=&quot;//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure><p></p><p>改为<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script src=&quot;http://apps.bdimg.com/libs/jquery/2.0.3/jquery.min.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure><p></p><p>重新生成博客之后就把谷歌的cdn替换成百度的cdn了</p><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> hexo优化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[手机平板电脑原样显示html效果 - html知识]]></title>
      <url>/20170208-%E6%89%8B%E6%9C%BA%E5%B9%B3%E6%9D%BF%E7%94%B5%E8%84%91%E5%8E%9F%E6%A0%B7%E6%98%BE%E7%A4%BAhtml%E6%95%88%E6%9E%9C-html%E7%9F%A5%E8%AF%86/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>有时候可能你会发现<br>在电脑上显示300x300大小的东西看起来很正常<br>但是用手机去访问的话，就出现等比例缩小了<br>但是300x300的大小完全不用缩小<br>直接等大不是更好？</p><p>在head加上这两行代码，可以做到原样输出<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge,chrome=1&quot;&gt;</div><div class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> html </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何检测Linux VPS系统架构是Xen、KVM还是OpenVZ]]></title>
      <url>/20170208-%E5%A6%82%E4%BD%95%E6%A3%80%E6%B5%8BLinux-VPS%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E6%98%AFXen%E3%80%81KVM%E8%BF%98%E6%98%AFOpenVZ/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root]# virt-what</div><div class="line">xen</div><div class="line">xen-hvm</div></pre></td></tr></table></figure><h2 id="Centos"><a href="#Centos" class="headerlink" title="Centos"></a>Centos</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">wget http://people.redhat.com/~rjones/virt-what/files/virt-what-1.12.tar.gz</div><div class="line">tar zxvf virt-what-1.12.tar.gz</div><div class="line">cd virt-what-1.12/</div><div class="line">./configure</div><div class="line">make &amp;&amp; make install</div><div class="line">virt-what</div></pre></td></tr></table></figure><h2 id="Ubuntu-debian"><a href="#Ubuntu-debian" class="headerlink" title="Ubuntu/debian"></a>Ubuntu/debian</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-get install virt-what</div><div class="line">virt-what</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[String 和 StringBuilder、StringBuffer的区别]]></title>
      <url>/20170208-String-%E5%92%8C-StringBuilder%E3%80%81StringBuffer%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><h2 id="String和StringBuilder、StringBuffer的区别？"><a href="#String和StringBuilder、StringBuffer的区别？" class="headerlink" title="String和StringBuilder、StringBuffer的区别？ "></a>String和StringBuilder、StringBuffer的区别？</h2><p>答：Java平台提供了两种类型的字符串：String和StringBuffer/StringBuilder，</p><p>它们可以储存和操作字符串。其中String是只读字符串，</p><p>也就意味着String引用的字符串内容是不能被改变的。</p><p>而StringBuffer/StringBuilder类表示的字符串对象可以直接进行修改。</p><p>StringBuilder是Java 5中引入的，它和StringBuffer的方法完全相同，</p><p>区别在于它是在单线程环境下使用的，因为它的所有方面都没有被synchronized修饰，</p><p>因此它的效率也比StringBuffer要高。</p><p><strong>简而言之：</strong></p><p>String：不能被修改</p><p>StringBuffer：可以随意修改，有synchronized修饰，是线程安全的，效率略低</p><p>StringBuilder：可以随意修改，无synchronized修饰，不是线程安全的，效率高</p><a id="more"></a><h2 id="面试题1：说出程序的输出结果"><a href="#面试题1：说出程序的输出结果" class="headerlink" title="面试题1：说出程序的输出结果"></a><strong>面试题1：说出程序的输出结果</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">classStringEqualTest &#123;</div><div class="line"> </div><div class="line">	publicstaticvoidmain(String[] args) &#123;</div><div class="line">		String s1 = &quot;Programming&quot;;</div><div class="line">		String s2 = new String(&quot;Programming&quot;);</div><div class="line">		String s3 = &quot;Program&quot; + &quot;ming&quot;;</div><div class="line">		System.out.println(s1 == s2);//false</div><div class="line">		System.out.println(s1 == s3);//true</div><div class="line">		System.out.println(s1 == s1.intern());//true</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>存在于.class文件中的常量池，在运行期被JVM装载，并且可以扩充。</p><p>String的intern()方法就是扩充常量池的一个方法；</p><p>当一个String实例str调用intern()方法时，</p><p>Java查找常量池中是否有相同Unicode的字符串常量，</p><p>如果有，则返回其的引用，</p><p>如果没有，则在常量池中增加一个Unicode等于str的字符串并返回它的引用</p><h2 id="面试题2"><a href="#面试题2" class="headerlink" title="面试题2"></a><strong>面试题2</strong></h2><p>什么情况下用+运算符进行字符串连接比调用StringBuffer/StringBuilder对象的append方法连接字符串性能更好？</p><p>答：</p><p>如果使用少量的字符串操作，使用 (+运算符)连接字符串；</p><p>如果频繁的对大量字符串进行操作，则使用</p><p>1：全局变量或者需要多线程支持则使用StringBuffer；</p><p>2：局部变量或者单线程不涉及线程安全则使有StringBuilder。</p><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> java </tag>
            
            <tag> StringBuilder </tag>
            
            <tag> StringBuffer的区别 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL使用like查找汉字乱码]]></title>
      <url>/20170208-MySQL%E4%BD%BF%E7%94%A8like%E6%9F%A5%E6%89%BE%E6%B1%89%E5%AD%97%E4%B9%B1%E7%A0%81/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><h2 id="第一种解决办法：BINARY"><a href="#第一种解决办法：BINARY" class="headerlink" title="第一种解决办法：BINARY"></a>第一种解决办法：BINARY</h2><p>在关键字之前加上：BINARY，会使关键字强制转换为二进制字符串<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select id form t where chinese like **BINARY** %汉字%</div></pre></td></tr></table></figure><p></p><h2 id="第二种解决办法：改关键字类型"><a href="#第二种解决办法：改关键字类型" class="headerlink" title="第二种解决办法：改关键字类型"></a>第二种解决办法：改关键字类型</h2><p>把关键字的类型改成：BINARY</p><h2 id="这两种办法都可以解决乱码问题"><a href="#这两种办法都可以解决乱码问题" class="headerlink" title="这两种办法都可以解决乱码问题"></a>这两种办法都可以解决乱码问题</h2><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> mysql </tag>
            
            <tag> like </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[new ImageIcon()无法加载同目录图片]]></title>
      <url>/20170208-new-ImageIcon-%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E5%90%8C%E7%9B%AE%E5%BD%95%E5%9B%BE%E7%89%87/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>错误：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">new ImageIcon(&quot;1.jpg&quot;)</div></pre></td></tr></table></figure><p></p><p>正确：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">new ImageIcon(&quot;src/com/hisen/thread/progressbar/1.jpg&quot;)</div></pre></td></tr></table></figure><p></p><p>图片路径：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">test\src\com\hisen\thread\progressbar\1.jpg</div></pre></td></tr></table></figure><p></p><p>所谓的相对路径，是相对于这个工程而言的，而不是当前文件夹而言。</p><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> java </tag>
            
            <tag> jframe </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[eclipse无法链接github]]></title>
      <url>/20170208-eclipse%E6%97%A0%E6%B3%95%E9%93%BE%E6%8E%A5github/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>浏览器什么的都能打开github.com<br>就是eclipse无法提交到github，每次都是连接超时<br>然后就直接修改host了，目前有效<br>2017年1月14日 18:01:34</p><p>host位置：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\Windows\System32\drivers\etc</div></pre></td></tr></table></figure><p></p><p>host文件最后一行加上下面内容即可<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">192.30.253.112       github.com</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> eclipse </tag>
            
            <tag> github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[解决：eclipse下*.properties显示Unicode乱码]]></title>
      <url>/20170208-%E8%A7%A3%E5%86%B3%EF%BC%9Aeclipse%E4%B8%8B-properties%E6%98%BE%E7%A4%BAUnicode%E4%B9%B1%E7%A0%81/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>eclipse的*.properties文件，默认的编码方式是iso-8859-1</p><p>Window -&gt; preferences -&gt; general -&gt; Contents Types -&gt; Text(展开)<br>-&gt; Java Aroperties File(点击) -&gt; *.properties(locked)(点击)<br>-&gt; 把iso-8859-1改为 UTF-8 -&gt; Update -&gt; OK</p><p>然后就可以正常显示中文了</p><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> java </tag>
            
            <tag> 乱码 </tag>
            
            <tag> properties </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[log4j:WARN No appenders could be found for logger]]></title>
      <url>/20170208-log4j-WARN-No-appenders-could-be-found-for-logger/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>解决办法为：在项目的src下面新建file名为log4j.properties文件<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">###设置</div><div class="line">log4j.rootLogger = debug,stdout,D,E</div><div class="line"></div><div class="line">###输出信息到控制抬</div><div class="line">log4j.appender.stdout = org.apache.log4j.ConsoleAppender</div><div class="line">log4j.appender.stdout.Target = System.out</div><div class="line">log4j.appender.stdout.layout = org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d&#123;yyyy-MM-dd HH:mm:ss,SSS&#125; method:%l%n%m%n</div><div class="line"></div><div class="line">###输出DEBUG 级别以上的日志到=E://logs/error.log</div><div class="line">log4j.appender.D = org.apache.log4j.DailyRollingFileAppender</div><div class="line">log4j.appender.D.File = E://logs/log.log</div><div class="line">log4j.appender.D.Append = true</div><div class="line">log4j.appender.D.Threshold = DEBUG </div><div class="line">log4j.appender.D.layout = org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.D.layout.ConversionPattern = %-d&#123;yyyy-MM-dd HH:mm:ss&#125;  [ %t:%r ] - [ %p ]  %m%n</div><div class="line"></div><div class="line">###输出ERROR 级别以上的日志到=E://logs/error.log</div><div class="line">log4j.appender.E = org.apache.log4j.DailyRollingFileAppender</div><div class="line">log4j.appender.E.File =E://logs/error.log </div><div class="line">log4j.appender.E.Append = true</div><div class="line">log4j.appender.E.Threshold = ERROR </div><div class="line">log4j.appender.E.layout = org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.E.layout.ConversionPattern = %-d&#123;yyyy-MM-dd HH:mm:ss&#125;  [ %t:%r ] - [ %p ]  %m%n</div></pre></td></tr></table></figure><p></p><p>log4j详细使用方法:<a href="http://www.codeceo.com/article/log4j-usage.html" target="_blank">点击查看</a></p><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> java </tag>
            
            <tag> log4j </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[记录一次面试过程中交流的一些题]]></title>
      <url>/20170126-%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E8%BF%87%E7%A8%8B%E4%B8%AD%E4%BA%A4%E6%B5%81%E7%9A%84%E4%B8%80%E4%BA%9B%E9%A2%98/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>以下是面试一家支付类公司的过程当中遇到的面试题</p><p>主要是交流比较多，不是先笔试</p><p>直接是把这些问题带入到具体的情景当中去</p><p>可能这样更能考验出一个人真正的技术水平</p><p>1，很多文件，读出数字，加1写回，谈谈你的想法</p><p>2，能继承string类?<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">不可以，因为String类有final修饰符，而final修饰的类是不能被继承的，实现细节不允许改变。</div></pre></td></tr></table></figure><p></p><p>3，能有个包名一样的String类?如果有一样的会调用哪个？</p><p>4，一个主线程等待其他线程完成，如果其中有线程出错怎么办？<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">把线程可能会出现的问题处理掉</div><div class="line">出错了能保证让他重新执行</div></pre></td></tr></table></figure><p></p><p>5，Oracle默认端口？</p><pre><code>1521
</code></pre><p>6，b继承a，b的对象能强转成a嘛？</p><pre><code>不能把一个对象强制转换成另外一个对象
</code></pre><p>7，数据库去重，删除所有重复记录，只留下一条<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">DELETE</div><div class="line">FROM EMP E</div><div class="line">WHERE E.ROWID &gt;</div><div class="line">    (SELECT MIN(X.ROWID)</div><div class="line">     FROM EMP X</div><div class="line">     WHERE X.EMP_NO = E.EMP_NO);</div></pre></td></tr></table></figure><p></p><a id="more"></a><p>8，try c里面，没打印出错误来，是为什么？<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1.可能是程序执行是正确的</div><div class="line">2.可能存在调用，但是调用的方法里面出现了错误，没有抛出或者是运行时错误</div></pre></td></tr></table></figure><p></p><p>9，JAVA数据类型</p><table><thead><tr><th style="text-align:left">简单类型</th><th style="text-align:left">二进制位数</th><th style="text-align:left">封装器类</th></tr></thead><tbody><tr><td style="text-align:left">boolean</td><td style="text-align:left">1</td><td style="text-align:left">Boolean</td></tr><tr><td style="text-align:left">byte</td><td style="text-align:left">8</td><td style="text-align:left">Byte</td></tr><tr><td style="text-align:left">char</td><td style="text-align:left">16</td><td style="text-align:left">Character</td></tr><tr><td style="text-align:left">short</td><td style="text-align:left">16</td><td style="text-align:left">Short</td></tr><tr><td style="text-align:left">Int</td><td style="text-align:left">32</td><td style="text-align:left">Integer</td></tr><tr><td style="text-align:left">long</td><td style="text-align:left">64</td><td style="text-align:left">Long</td></tr><tr><td style="text-align:left">float</td><td style="text-align:left">32</td><td style="text-align:left">Float</td></tr><tr><td style="text-align:left">double</td><td style="text-align:left">64</td><td style="text-align:left">Double</td></tr><tr><td style="text-align:left">void</td><td style="text-align:left">–</td><td style="text-align:left">Void</td></tr></tbody></table><p>10，银行金额字段</p><pre><code>金融数字是BigDecimal类型
</code></pre><p>11，用什么解析XML，有什么优缺点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">DOM4J(Document Object Model for Java)</div><div class="line">虽然DOM4J代表了完全独立的开发结果，但最初，它是JDOM的一种智能分支。</div><div class="line">它合并了许多超出基本XML文档表示的功能，</div><div class="line">包括集成的XPath支持、XML Schema支持以及用于大文档或流化文档的基于事件的处理。</div><div class="line">它还提供了构建文档表示的选项，它通过DOM4J API和标准DOM接口具有并行访问功能。</div><div class="line">从2000下半年开始，它就一直处于开发之中。</div><div class="line"></div><div class="line">为支持所有这些功能，DOM4J使用接口和抽象基本类方法。</div><div class="line">DOM4J大量使用了API中的Collections类，但是在许多情况下，</div><div class="line">它还提供一些替代方法以允许更好的性能或更直接的编码方法。</div><div class="line">直接好处是，虽然DOM4J付出了更复杂的API的代价，但是它提供了比JDOM大得多的灵活性。</div><div class="line"></div><div class="line">在添加灵活性、XPath集成和对大文档处理的目标时，</div><div class="line">DOM4J的目标与JDOM是一样的：针对Java开发者的易用性和直观操作。</div><div class="line">它还致力于成为比JDOM更完整的解决方案，实现在本质上处理所有Java/XML问题的目标。</div><div class="line">在完成该目标时，它比JDOM更少强调防止不正确的应用程序行为。</div><div class="line"></div><div class="line">DOM4J是一个非常非常优秀的Java XML API，</div><div class="line">具有性能优异、功能强大和极端易用使用的特点，同时它也是一个开放源代码的软件。</div><div class="line">如今你可以看到越来越多的Java软件都在使用DOM4J来读写XML，</div><div class="line">特别值得一提的是连Sun的JAXM也在用DOM4J.</div><div class="line"></div><div class="line">【优点】</div><div class="line">①大量使用了Java集合类，方便Java开发人员，同时提供一些提高性能的替代方法。</div><div class="line">②支持XPath。</div><div class="line">③有很好的性能。</div><div class="line"></div><div class="line">【缺点】</div><div class="line">①大量使用了接口，API较为复杂。</div></pre></td></tr></table></figure><p>12，阿贾克斯熟悉吗？能发起请求下载文档吗？返回类型有哪些，遇到错误怎么提示用户<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">不能发起文档下载，返回的类型只有字符型，</div><div class="line">出错了alert出错误</div></pre></td></tr></table></figure><p></p><p>13，jquery选择器<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">jQuery 元素选择器</div><div class="line">jQuery 使用 CSS 选择器来选取 HTML 元素。</div><div class="line">$(&quot;p&quot;) 选取 &lt;p&gt; 元素。</div><div class="line">$(&quot;p.intro&quot;) 选取所有 class=&quot;intro&quot; 的 &lt;p&gt; 元素。</div><div class="line">$(&quot;p#demo&quot;) 选取所有 id=&quot;demo&quot; 的 &lt;p&gt; 元素。</div><div class="line"></div><div class="line">jQuery 属性选择器</div><div class="line">jQuery 使用 XPath 表达式来选择带有给定属性的元素。</div><div class="line">$(&quot;[href]&quot;) 选取所有带有 href 属性的元素。</div><div class="line">$(&quot;[href=&apos;#&apos;]&quot;) 选取所有带有 href 值等于 &quot;#&quot; 的元素。</div><div class="line">$(&quot;[href!=&apos;#&apos;]&quot;) 选取所有带有 href 值不等于 &quot;#&quot; 的元素。</div><div class="line">$(&quot;[href$=&apos;.jpg&apos;]&quot;) 选取所有 href 值以 &quot;.jpg&quot; 结尾的元素。</div></pre></td></tr></table></figure><p></p><p>14，空指针异常，怎么定位错误<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">定位到出现错误的行数</div><div class="line">看看附近的各种调用是否存可能出现空指针异常，再慢慢排除</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> java </tag>
            
            <tag> 面试 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux常用的几个命令]]></title>
      <url>/20170122-linux%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%A0%E4%B8%AA%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>1、查看日志最后几行<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tail -100 /access.log</div></pre></td></tr></table></figure><p></p><p>2、进入目录相关<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#进入一个目录</div><div class="line">root@hisenyuan:/# cd /home/wwwlog/</div><div class="line">#进入当前目录下的www.google.com目录</div><div class="line">root@hisenyuan:/home/wwwlog# cd ./www.google.com</div><div class="line">#进入父目录	</div><div class="line">root@hisenyuan:/home/wwwlog/www.google.com# cd ../</div><div class="line">#进入linux系统根目录</div><div class="line">root@hisenyuan:/home/wwwlog# cd /</div><div class="line">#根目录</div><div class="line">root@hisenyuan:/#</div></pre></td></tr></table></figure><p></p><p>3、看倒数多少行<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#看倒数10行</div><div class="line">tail -10 /filepath/filename</div><div class="line">#看行数外加过滤含有指定字符的行</div><div class="line">tail -10 access.log | grep -v &quot;yourstring&quot;</div></pre></td></tr></table></figure><p></p><p>4、过滤特定行，保存结果到新文件<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /root/old.text | grep -v &quot;yourstring&quot;&gt; /root/new.text</div></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> java </tag>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[基本排序算法的时间/空间复杂度表]]></title>
      <url>/20170120-%E5%9F%BA%E6%9C%AC%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4-%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E8%A1%A8/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><table><thead><tr><th style="text-align:left">排序方法</th><th style="text-align:left">平均情况</th><th style="text-align:left">最好情况</th><th style="text-align:left">最坏情况</th><th style="text-align:left">辅助空间</th><th style="text-align:left">稳定性</th></tr></thead><tbody><tr><td style="text-align:left">冒泡排序</td><td style="text-align:left">O(n²)</td><td style="text-align:left">O(nlogn)</td><td style="text-align:left">O(n²)</td><td style="text-align:left">O(1)</td><td style="text-align:left">稳定</td></tr><tr><td style="text-align:left">简单选择</td><td style="text-align:left">O(n²)</td><td style="text-align:left">O(n²)</td><td style="text-align:left">O(n²)</td><td style="text-align:left">O(1)</td><td style="text-align:left">稳定</td></tr><tr><td style="text-align:left">直接插入</td><td style="text-align:left">O(n²)</td><td style="text-align:left">O(n)</td><td style="text-align:left">O(n²)</td><td style="text-align:left">O(1)</td><td style="text-align:left">稳定</td></tr><tr><td style="text-align:left">希尔排序</td><td style="text-align:left">O(nlogn)~O(n²)</td><td style="text-align:left">O(n^1.3)</td><td style="text-align:left">O(n²)</td><td style="text-align:left">O(1)</td><td style="text-align:left">不稳定</td></tr><tr><td style="text-align:left">堆排序</td><td style="text-align:left">O(nlogn)</td><td style="text-align:left">O(nlogn)</td><td style="text-align:left">O(nlogn)</td><td style="text-align:left">O(1)</td><td style="text-align:left">不稳定</td></tr><tr><td style="text-align:left">归并排序</td><td style="text-align:left">O(nlogn)</td><td style="text-align:left">O(nlogn)</td><td style="text-align:left">O(nlogn)</td><td style="text-align:left">O(n)</td><td style="text-align:left">不稳定</td></tr><tr><td style="text-align:left">快速排序</td><td style="text-align:left">O(nlogn)</td><td style="text-align:left">O(nlogn)</td><td style="text-align:left">O(n²)</td><td style="text-align:left">O(nlogn)~O(n)</td><td style="text-align:left">不稳定</td></tr></tbody></table><p>以上</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle SQL语句优化 - 写出高效SQL]]></title>
      <url>/20170120-Oracle-SQL%E8%AF%AD%E5%8F%A5%E4%BC%98%E5%8C%96-%E5%86%99%E5%87%BA%E9%AB%98%E6%95%88SQL/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><h2 id="1-选择最有效率的表名顺序"><a href="#1-选择最有效率的表名顺序" class="headerlink" title="[1]选择最有效率的表名顺序"></a>[1]选择最有效率的表名顺序</h2><p>只在基于规则的优化器中有效,ORACLE的解析器按照从右到左的顺序处理FROM子句中的表名，FROM子句中写在最后的表(基础表 driving table)将被最先处理，在FROM子句中包含多个表的情况下,你必须<strong>选择记录条数最少的表作为基础表</strong>。如果有3个以上的表连接查询, 那就需要选择交叉表(intersection table)作为基础表, 交叉表是指那个被其他表所引用的表.</p><h2 id="2-WHERE子句中的连接顺序"><a href="#2-WHERE子句中的连接顺序" class="headerlink" title="[2]WHERE子句中的连接顺序"></a>[2]WHERE子句中的连接顺序</h2><p><strong>ORACLE采用自下而上(从后往前)的顺序解析WHERE子句</strong>,根据这个原理,表之间的连接必须写在其他WHERE条件之前, 那些<strong>可以过滤掉最大数量记录的条件必须写在WHERE子句的末尾</strong></p><h2 id="3-SELECT子句中避免使用’-’"><a href="#3-SELECT子句中避免使用’-’" class="headerlink" title="[3]SELECT子句中避免使用’*’"></a>[3]SELECT子句中避免使用’*’</h2><p>ORACLE在解析的过程中, 会将’*’ 依次转换成所有的列名, 这个工作是通过查询数据字典完成的, 这意味着将耗费更多的时间.需要什么字段就查询什么字段，永远不要查询出不需要的字段来</p><h2 id="4-减少访问数据库的次数"><a href="#4-减少访问数据库的次数" class="headerlink" title="[4]减少访问数据库的次数"></a>[4]减少访问数据库的次数</h2><p>ORACLE在内部执行了许多工作: 解析SQL语句, 估算索引的利用率, 绑定变量 , 读数据块等；尽量使用缓存技术；</p><h2 id="5-设置单次访问合适的检索数据量"><a href="#5-设置单次访问合适的检索数据量" class="headerlink" title="[5]设置单次访问合适的检索数据量"></a>[5]设置单次访问合适的检索数据量</h2><p>在SQL<em>Plus , SQL</em>Forms和Pro*C中重新设置ARRAYSIZE参数, 可以增加每次数据库访问的检索数据量 ,建议值为200<br><a id="more"></a></p><h2 id="6-使用DECODE函数来减少处理时间"><a href="#6-使用DECODE函数来减少处理时间" class="headerlink" title="[6]使用DECODE函数来减少处理时间"></a>[6]使用DECODE函数来减少处理时间</h2><p>使用DECODE函数可以避免重复扫描相同记录或重复连接相同的表,因为decode函数有短路效应，类似java中短路与，有合适的就会返回而不继续扫描后面的内容</p><h2 id="7-整合简单-无关联的数据库访问"><a href="#7-整合简单-无关联的数据库访问" class="headerlink" title="[7]整合简单,无关联的数据库访问"></a>[7]整合简单,无关联的数据库访问</h2><p>如果你有几个简单的数据库查询语句,你可以把它们整合到一个查询中(即使它们之间没有关系),原因见<strong>[4]</strong></p><h2 id="8-删除重复记录，最高效的方法"><a href="#8-删除重复记录，最高效的方法" class="headerlink" title="[8]删除重复记录，最高效的方法"></a>[8]删除重复记录，最高效的方法</h2><p>因为这里使用的是rowid<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">DELETE</div><div class="line">FROM EMP E</div><div class="line">WHERE E.ROWID &gt;</div><div class="line">    (SELECT MIN(X.ROWID)</div><div class="line">     FROM EMP X</div><div class="line">     WHERE X.EMP_NO = E.EMP_NO);</div></pre></td></tr></table></figure><p></p><h2 id="9-用TRUNCATE替代DELETE"><a href="#9-用TRUNCATE替代DELETE" class="headerlink" title="[9]用TRUNCATE替代DELETE"></a>[9]用TRUNCATE替代DELETE</h2><p>当删除表中的记录时,在通常情况下, 回滚段(rollback segments ) 用来存放可以被恢复的信息. 如果你没有COMMIT事务,ORACLE会将数据恢复到删除之前的状态(准确地说是恢复到执行删除命令之前的状况) <strong>而当运用TRUNCATE时, 回滚段不再存放任何可被恢复的信息</strong>.当命令运行后,数据不能被恢复.因此很少的资源被调用,执行时间也会很短. (注: TRUNCATE只在删除全表适用,TRUNCATE是DDL不是DML)</p><h2 id="10-尽量多使用COMMIT"><a href="#10-尽量多使用COMMIT" class="headerlink" title="[10]尽量多使用COMMIT"></a>[10]尽量多使用COMMIT</h2><p>只要有可能,在程序中尽量多使用COMMIT, 这样程序的性能得到提高,需求也会因为COMMIT所释放的资源而减少:<br>COMMIT所释放的资源:</p><ol><li>回滚段上用于恢复数据的信息</li><li>被程序语句获得的锁</li><li>redo log buffer 中的空间</li><li>ORACLE为管理上述3种资源中的内部花费</li></ol><h2 id="11-用Where子句替换HAVING子句"><a href="#11-用Where子句替换HAVING子句" class="headerlink" title="[11]用Where子句替换HAVING子句"></a>[11]用Where子句替换HAVING子句</h2><p>避免使用HAVING子句, <strong>HAVING在检索出所有记录后对结果集进行过滤。这个处理需要排序,总计等操作</strong>。 如果能通过WHERE子句限制记录的数目,那就能减少这方面的开销. (非oracle中)on、where、having这三个都可以加条件的子句中，on是最先执行，where次之，having最后，<strong>因为on是先把不符合条件的记录过滤后才进行统计，它就可以减少中间运算要处理的数据，按理说应该速度是最快的</strong>，where也应该比having快点的，因为它过滤数据后才进行sum，在两个表联接时才用on的，所以在一个表的时候，就剩下where跟having比较了。在这单表查询统计的情况下，如果要过滤的条件没有涉及到要计算字段，那它们的结果是一样的，只是where可以使用rushmore技术，而having就不能，在速度上后者要慢如果要涉及到计算的字段，就表示在没计算之前，这个字段的值是不确定的，根据上篇写的工作流程，where的作用时间是在计算之前就完成的，而having就是在计算后才起作用的，所以在这种情况下，两者的结果会不同。在多表联接查询时，on比where更早起作用。系统首先根据各个表之间的联接条件，把多个表合成一个临时表后，再由where进行过滤，然后再计算，计算完后再由having进行过滤。由此可见，要想过滤条件起到正确的作用，首先要明白这个条件应该在什么时候起作用，然后再决定放在那里</p><h2 id="12-减少对表的查询"><a href="#12-减少对表的查询" class="headerlink" title="[12]减少对表的查询"></a>[12]减少对表的查询</h2><p>在含有子查询的SQL语句中,要特别注意减少对表的查询。例子：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">SELECT TAB_NAME</div><div class="line">FROM TABLES</div><div class="line">WHERE (TAB_NAME,</div><div class="line">       DB_VER) =</div><div class="line">    (SELECT TAB_NAME,</div><div class="line">            DB_VER</div><div class="line">     FROM TAB_COLUMNS</div><div class="line">     WHERE VERSION = 604)</div></pre></td></tr></table></figure><p></p><h2 id="13-通过内部函数提高SQL效率"><a href="#13-通过内部函数提高SQL效率" class="headerlink" title="[13]通过内部函数提高SQL效率"></a>[13]通过内部函数提高SQL效率</h2><p>复杂的SQL往往牺牲了执行效率。能够掌握上面的运用函数解决问题的方法在实际工作中是非常有意义的。一般把复杂的sql分解再拼起来。</p><h2 id="14-使用表的别名-Alias"><a href="#14-使用表的别名-Alias" class="headerlink" title="[14]使用表的别名(Alias)"></a>[14]使用表的别名(Alias)</h2><p>当在SQL语句中连接多个表时, 请使用表的别名并把别名前缀于每个Column上。这样一来，就可以减少解析的时间并减少那些由Column歧义引起的语法错误。</p><h2 id="15-用EXISTS替代IN、用NOT-EXISTS替代NOT-IN"><a href="#15-用EXISTS替代IN、用NOT-EXISTS替代NOT-IN" class="headerlink" title="[15]用EXISTS替代IN、用NOT EXISTS替代NOT IN"></a>[15]用EXISTS替代IN、用NOT EXISTS替代NOT IN</h2><p>在许多基于基础表的查询中,为了满足一个条件,往往需要对另一个表进行联接。在这种情况下, 使用EXISTS(或NOT EXISTS)通常将提高查询的效率。在子查询中,NOT IN子句将执行一个内部的排序和合并。无论在哪种情况下,NOT IN都是最低效的 (因为它对子查询中的表执行了一个全表遍历).。为了避免使用NOT IN ,我们可以把它改写成外连接(Outer Joins)或NOT EXISTS.</p><p>高效：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT *</div><div class="line">FROM EMP (基础表)</div><div class="line">WHERE EMPNO &gt; 0</div><div class="line">  AND EXISTS</div><div class="line">    (SELECT &apos;X&apos;  FROM DEPT  WHERE  DEPT.DEPTNO = EMP.DEPTNO  AND  LOC = &apos;MELB&apos;)</div></pre></td></tr></table></figure><p></p><p>低效：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">SELECT *</div><div class="line">FROM EMP (基础表)</div><div class="line">WHERE EMPNO &gt; 0</div><div class="line">  AND DEPTNO IN</div><div class="line">    (SELECT DEPTNO</div><div class="line">     FROM DEPT</div><div class="line">     WHERE LOC = &apos;MELB&apos;)</div></pre></td></tr></table></figure><p></p><h2 id="16-识别’低效执行’的SQL语句"><a href="#16-识别’低效执行’的SQL语句" class="headerlink" title="[16]识别’低效执行’的SQL语句"></a>[16]识别’低效执行’的SQL语句</h2><p>虽然目前各种关于SQL优化的图形化工具层出不穷</p><p>但是写出自己的SQL工具来解决问题始终是一个最好的方法:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">SELECT EXECUTIONS,</div><div class="line">       DISK_READS,</div><div class="line">       BUFFER_GETS,</div><div class="line">       ROUND((BUFFER_GETS-DISK_READS)/BUFFER_GETS,2) Hit_radio,</div><div class="line">       ROUND(DISK_READS/EXECUTIONS,2) Reads_per_run,</div><div class="line">       SQL_TEXT</div><div class="line">FROM V$SQLAREA</div><div class="line">WHERE EXECUTIONS&gt;0</div><div class="line">  AND BUFFER_GETS &gt; 0</div><div class="line">  AND (BUFFER_GETS-DISK_READS)/BUFFER_GETS &lt; 0.8</div><div class="line">ORDER BY 4 DESC;</div></pre></td></tr></table></figure><p></p><h2 id="17-用索引提高效率"><a href="#17-用索引提高效率" class="headerlink" title="[17]用索引提高效率"></a>[17]用索引提高效率</h2><p>索引是表的一个概念部分，用来提高检索数据的效率，ORACLE使用了一个复杂的自平衡B-tree结构。通常，通过索引查询数据比全表扫描要快。 当ORACLE找出执行查询和Update语句的最佳路径时， ORACLE优化器将使用索引。同样在联结多个表时使用索引也可以提高效率。另一个使用索引的好处是，它提供了主键(primary key)的唯一性验证。那些LONG或LONG RAW数据类型，你可以索引几乎所有的列。 通常，在大型表中使用索引特别有效。当然，你也会发现，在扫描小表时，使用索引同样能提高效率。<strong>虽然使用索引能得到查询效率的提高，但是我们也必须注意到它的代价. 索引需要空间来存储，也需要定期维护，每当有记录在表中增减或索引列被修改时, 索引本身也会被修改</strong>。这意味着每条记录的INSERT , DELETE , UPDATE将为此多付出4 , 5 次的磁盘I/O 。 因为索引需要额外的存储空间和处理，那些不必要的索引反而会使查询反应时间变慢。定期的重构索引是有必要的。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ALTER  INDEX &lt;INDEXNAME&gt; REBUILD &lt;TABLESPACENAME&gt;</div></pre></td></tr></table></figure><p></p><h2 id="18-用EXISTS替换DISTINCT"><a href="#18-用EXISTS替换DISTINCT" class="headerlink" title="[18]用EXISTS替换DISTINCT"></a>[18]用EXISTS替换DISTINCT</h2><p>当提交一个包含一对多表信息(比如部门表和雇员表)的查询时，避免在SELECT子句中使用DISTINCT。一般可以考虑用EXIST替换，EXISTS 使查询更为迅速，因为RDBMS核心模块将在子查询的条件一旦满足后，立刻返回结果。</p><p>低效：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT DISTINCT DEPT_NO,</div><div class="line">                DEPT_NAME</div><div class="line">FROM DEPT D,</div><div class="line">     EMP E</div><div class="line">WHERE D.DEPT_NO = E.DEPT_NO</div></pre></td></tr></table></figure><p></p><p>高效:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">SELECT DEPT_NO,</div><div class="line">       DEPT_NAME</div><div class="line">FROM DEPT D</div><div class="line">WHERE EXISTS</div><div class="line">    (SELECT &apos;X&apos;</div><div class="line">     FROM EMP E</div><div class="line">     WHERE E.DEPT_NO = D.DEPT_NO);</div></pre></td></tr></table></figure><p></p><h2 id="19-sql语句用大写"><a href="#19-sql语句用大写" class="headerlink" title="[19]sql语句用大写"></a>[19]sql语句用大写</h2><p>因为oracle总是先解析sql语句，把小写的字母转换成大写的再执行</p><h2 id="20-在java代码中尽量少用连接符“＋”连接字符串"><a href="#20-在java代码中尽量少用连接符“＋”连接字符串" class="headerlink" title="[20]在java代码中尽量少用连接符“＋”连接字符串"></a>[20]在java代码中尽量少用连接符“＋”连接字符串</h2><p>一般来说StringBuilder(非线程安全)是一个不错的选择</p><h2 id="21-通常避免在索引列上使用NOT"><a href="#21-通常避免在索引列上使用NOT" class="headerlink" title="[21]通常避免在索引列上使用NOT"></a>[21]通常避免在索引列上使用NOT</h2><p>我们要避免在索引列上使用NOT，NOT会产生在和在索引列上使用函数相同的影响。当ORACLE”遇到”NOT，他就会停止使用索引转而执行全表扫描。</p><h2 id="22-避免在索引列上使用计算"><a href="#22-避免在索引列上使用计算" class="headerlink" title="[22]避免在索引列上使用计算"></a>[22]避免在索引列上使用计算</h2><p>WHERE子句中，如果索引列是函数的一部分。优化器将不使用索引而使用全表扫描。</p><p>举例:</p><p>低效：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT … FROM  DEPT  WHERE SAL * 12 &gt; 25000;</div></pre></td></tr></table></figure><p></p><p>高效:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT … FROM DEPT WHERE SAL &gt; 25000/12;</div></pre></td></tr></table></figure><p></p><h2 id="23-用-gt-替代-gt"><a href="#23-用-gt-替代-gt" class="headerlink" title="[23]用&gt;=替代&gt;"></a>[23]用&gt;=替代&gt;</h2><p>高效:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM  EMP  WHERE  DEPTNO &gt;=4</div></pre></td></tr></table></figure><p></p><p>低效:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM EMP WHERE DEPTNO &gt;3</div></pre></td></tr></table></figure><p></p><p>两者的区别在于，前者DBMS将直接跳到第一个DEPT等于4的记录而后者将首先定位到DEPTNO=3的记录并且向前扫描到第一个DEPT大于3的记录。</p><h2 id="24-用UNION替换OR-适用于索引列"><a href="#24-用UNION替换OR-适用于索引列" class="headerlink" title="[24]用UNION替换OR (适用于索引列)"></a>[24]用UNION替换OR (适用于索引列)</h2><p>通常情况下，用UNION替换WHERE子句中的OR将会起到较好的效果。对索引列使用OR将造成全表扫描。注意，以上规则只针对多个索引列有效。如果有column没有被索引, 查询效率可能会因为你没有选择OR而降低。在下面的例子中， LOC_ID 和REGION上都建有索引。</p><p>高效:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">SELECT LOC_ID,</div><div class="line">       LOC_DESC,</div><div class="line">       REGION</div><div class="line">FROM LOCATION</div><div class="line">WHERE LOC_ID = 10</div><div class="line">UNION</div><div class="line">SELECT LOC_ID,</div><div class="line">       LOC_DESC,</div><div class="line">       REGION</div><div class="line">FROM LOCATION</div><div class="line">WHERE REGION = &apos;&apos;MELBOURNE&apos;&apos;</div></pre></td></tr></table></figure><p></p><p>低效:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">SELECT LOC_ID,</div><div class="line">       LOC_DESC,</div><div class="line">       REGION</div><div class="line">FROM LOCATION</div><div class="line">WHERE LOC_ID = 10</div><div class="line">  OR REGION = &apos;&apos;MELBOURNE&apos;&apos;</div></pre></td></tr></table></figure><p></p><p>如果你坚持要用OR, 那就需要返回记录最少的索引列写在最前面</p><h2 id="25-用IN来替换OR"><a href="#25-用IN来替换OR" class="headerlink" title="[25]用IN来替换OR"></a>[25]用IN来替换OR</h2><p>这是一条简单易记的规则，但是实际的执行效果还须检验，在ORACLE8i下，两者的执行路径似乎是相同的。</p><p>低效:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT…. FROM LOCATION WHERE LOC_ID = 10 OR LOC_ID = 20 OR LOC_ID = 30</div></pre></td></tr></table></figure><p></p><p>高效：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT… FROM LOCATION WHERE LOC_IN  IN (10,20,30);</div></pre></td></tr></table></figure><p></p><h2 id="26-避免在索引列上使用IS-NULL和IS-NOT-NULL"><a href="#26-避免在索引列上使用IS-NULL和IS-NOT-NULL" class="headerlink" title="[26]避免在索引列上使用IS NULL和IS NOT NULL"></a>[26]避免在索引列上使用IS NULL和IS NOT NULL</h2><p>避免在索引中使用任何可以为空的列，<strong>ORACLE将无法使用该索引</strong>。对于单列索引，如果列包含空值，索引中将不存在此记录。对于复合索引，如果每个列都为空，索引中同样不存在此记录。如果至少有一个列不为空，则记录存在于索引中。</p><p>举例: 如果唯一性索引建立在表的A列和B列上, 并且表中存在一条记录的A,B值为(123,null) , ORACLE将不接受下一条具有相同A,B值（123,null）的记录(插入)。然而如果所有的索引列都为空，ORACLE将认为整个键值为空而空不等于空。 因此你可以插入1000 条具有相同键值的记录,当然它们都是空! 因为空值不存在于索引列中，所以WHERE子句中对索引列进行空值比较将使ORACLE停用该索引。</p><p>低效: (索引失效)<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT … FROM  DEPARTMENT  WHERE  DEPT_CODE IS NOT NULL;</div></pre></td></tr></table></figure><p></p><p>高效: (索引有效)<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT … FROM  DEPARTMENT  WHERE  DEPT_CODE &gt;=0;</div></pre></td></tr></table></figure><p></p><h2 id="27-总是使用索引的第一个列"><a href="#27-总是使用索引的第一个列" class="headerlink" title="[27]总是使用索引的第一个列"></a>[27]总是使用索引的第一个列</h2><p>如果索引是建立在多个列上, 只有在它的第一个列(leading column)被where子句引用时,<strong>优化器才会选择使用该索引</strong>。这也是一条简单而重要的规则，当仅引用索引的第二个列时，优化器使用了全表扫描而忽略了索引</p><h2 id="28-用UNION-ALL替换UNION"><a href="#28-用UNION-ALL替换UNION" class="headerlink" title="[28]用UNION-ALL替换UNION"></a>[28]用UNION-ALL替换UNION</h2><p>当SQL语句需要UNION<strong>两个查询结果集合时</strong>,这两个结果集合会以UNION-ALL的方式被合并, 然后在输出最终结果前进行排序。<strong>如果用UNION ALL替代UNION, 这样排序就不是必要了</strong>。效率就会因此得到提高。需要注意的是，UNION ALL 将重复输出两个结果集合中相同记录。因此各位还是要从业务需求分析使用UNION ALL的可行性。 UNION 将对结果集合排序,这个操作会使用到SORT_AREA_SIZE这块内存。对于这块内存的优化也是相当重要的。下面的SQL可以用来查询排序的消耗量。</p><p>低效：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">SELECT ACCT_NUM,</div><div class="line">       BALANCE_AMT</div><div class="line">FROM DEBIT_TRANSACTIONS</div><div class="line">WHERE TRAN_DATE = &apos;31-DEC-95&apos;</div><div class="line">UNION</div><div class="line">SELECT ACCT_NUM,</div><div class="line">       BALANCE_AMT</div><div class="line">FROM DEBIT_TRANSACTIONS</div><div class="line">WHERE TRAN_DATE = &apos;31-DEC-95&apos;</div></pre></td></tr></table></figure><p></p><p>高效:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">SELECT ACCT_NUM,</div><div class="line">       BALANCE_AMT</div><div class="line">FROM DEBIT_TRANSACTIONS</div><div class="line">WHERE TRAN_DATE = &apos;31-DEC-95&apos;</div><div class="line">  UNION ALL</div><div class="line">  SELECT ACCT_NUM,</div><div class="line">         BALANCE_AMT</div><div class="line">  FROM DEBIT_TRANSACTIONS WHERE TRAN_DATE = &apos;31-DEC-95&apos;</div></pre></td></tr></table></figure><p></p><h2 id="29-用WHERE替代ORDER-BY"><a href="#29-用WHERE替代ORDER-BY" class="headerlink" title="[29]用WHERE替代ORDER BY"></a>[29]用WHERE替代ORDER BY</h2><p>ORDER BY 子句只在两种严格的条件下使用索引</p><p>ORDER BY中所有的列必须包含在相同的索引中并保持在索引中的排列顺序</p><p>ORDER BY中所有的列必须定义为非空</p><p>WHERE子句使用的索引和ORDER BY子句中所使用的索引不能并列</p><p>例如:</p><p>表DEPT包含以下列:</p><p>DEPT_CODE PK NOT NULL</p><p>DEPT_DESC NOT NULL</p><p>DEPT_TYPE NULL</p><p>低效: (索引不被使用)<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT DEPT_CODE FROM  DEPT  ORDER BY  DEPT_TYPE</div></pre></td></tr></table></figure><p></p><p>高效: (使用索引)<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT DEPT_CODE  FROM  DEPT  WHERE  DEPT_TYPE &gt; 0</div></pre></td></tr></table></figure><p></p><h2 id="30-避免改变索引列的类型"><a href="#30-避免改变索引列的类型" class="headerlink" title="[30]避免改变索引列的类型"></a>[30]避免改变索引列的类型</h2><p>当比较不同数据类型的数据时, ORACLE自动对列进行简单的类型转换</p><p>假设 EMPNO是一个数值类型的索引列.<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT …  FROM EMP  WHERE  EMPNO = &apos;123&apos;</div></pre></td></tr></table></figure><p></p><p>实际上,经过ORACLE类型转换, 语句转化为:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT …  FROM EMP  WHERE  EMPNO = TO_NUMBER(&apos;123&apos;)</div></pre></td></tr></table></figure><p></p><p>幸运的是,类型转换没有发生在索引列上,索引的用途没有被改变</p><p>现在,假设EMP_TYPE是一个字符类型的索引列<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT …  FROM EMP  WHERE EMP_TYPE = 123</div></pre></td></tr></table></figure><p></p><p>这个语句被ORACLE转换为:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT …  FROM EMP  WHERETO_NUMBER(EMP_TYPE)=123</div></pre></td></tr></table></figure><p></p><p>因为内部发生的类型转换, 这个索引将不会被用到!</p><p>为了避免ORACLE对你的SQL进行隐式的类型转换, 最好把类型转换用显式表现出来。 注意当字符和数值比较时, ORACLE会优先转换数值类型到字符类型</p><h2 id="31-需要当心的WHERE子句"><a href="#31-需要当心的WHERE子句" class="headerlink" title="[31]需要当心的WHERE子句"></a>[31]需要当心的WHERE子句</h2><p>某些SELECT 语句中的WHERE子句不使用索引<br>这里有一些例子</p><p>在下面的例子里,</p><ol><li>‘!=’ 将不使用索引。记住, 索引只能告诉你什么存在于表中, 而不能告诉你什么不存在于表中</li><li>‘||’是字符连接函数. 就象其他函数那样, 停用了索引</li><li>‘+’是数学函数. 就象其他数学函数那样, 停用了索引</li><li>相同的索引列不能互相比较,这将会启用全表扫描</li></ol><h2 id="32-检索数据量超过表中30-索引失效"><a href="#32-检索数据量超过表中30-索引失效" class="headerlink" title="[32]检索数据量超过表中30%,索引失效"></a>[32]检索数据量超过表中30%,索引失效</h2><ol><li>如果检索数据量超过30%的表中记录数.使用索引将没有显著的效率提高</li><li>在特定情况下, 使用索引也许会比全表扫描慢, 但这是同一个数量级上的区别。 而通常情况下,使用索引比全表扫描要块几倍乃至几千倍!</li></ol><h2 id="33-避免使用耗费资源的操作"><a href="#33-避免使用耗费资源的操作" class="headerlink" title="[33]避免使用耗费资源的操作"></a>[33]避免使用耗费资源的操作</h2><p>带有DISTINCT,UNION,MINUS,INTERSECT,ORDER BY的SQL语句会启动SQL引擎<br>执行耗费资源的排序(SORT)功能。</p><p>DISTINCT需要一次排序操作, 而其他的至少需要执行两次排序。<br>通常, 带有UNION, MINUS , INTERSECT的SQL语句都可以用其他方式重写。</p><p>如果你的数据库的SORT_AREA_SIZE调配得好, 使用UNION , MINUS, INTERSECT也是可以考虑的, 毕竟它们的可读性很强。</p><h2 id="34-优化GROUP-BY"><a href="#34-优化GROUP-BY" class="headerlink" title="[34]优化GROUP BY"></a>[34]优化GROUP BY</h2><p>提高GROUP BY 语句的效率，可以通过将不需要的记录在GROUP BY 之前过滤掉。</p><p>下面两个查询返回相同结果但第二个明显就快了许多。</p><p>低效:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">SELECT JOB,</div><div class="line">       AVG(SAL)</div><div class="line">FROM EMP</div><div class="line">GROUP JOB</div><div class="line">HAVING JOB = &apos;PRESIDENT&apos;</div><div class="line">OR JOB = &apos;MANAGER&apos;</div></pre></td></tr></table></figure><p></p><p>高效:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">SELECT JOB,</div><div class="line">       AVG(SAL)</div><div class="line">FROM EMP</div><div class="line">WHERE JOB = &apos;PRESIDENT&apos; </div><div class="line">OR JOB = &apos;MANAGER&apos;</div><div class="line">GROUP JOB</div></pre></td></tr></table></figure><p></p><p>本文参考其他文章整理而来</p><p>出处：<a href="http://www.cnblogs.com/rootq/archive/2008/11/17/1334727.html" target="_blank">http://www.cnblogs.com/rootq/archive/2008/11/17/1334727.html</a></p><p>不过互联网上这篇文章很多，都没有版权注明。我也不知道原创是谁！</p><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> sql </tag>
            
            <tag> oracle </tag>
            
            <tag> oarcle优化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[该Java语句创建了多少个对象？]]></title>
      <url>/20170120-%E8%AF%A5Java%E8%AF%AD%E5%8F%A5%E5%88%9B%E5%BB%BA%E4%BA%86%E5%A4%9A%E5%B0%91%E4%B8%AA%E5%AF%B9%E8%B1%A1%EF%BC%9F/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">String str = new String(&quot;java&quot;);</div></pre></td></tr></table></figure><p>答案：最少一个，最多两个</p><ol><li>java中有常量池的概念，常量池和类文件相关，其数据存放的区域是在方法区中（方法区是jvm中内存模型的概念）</li><li>因为当你使用关键字new的时候是一定会生成一个String类的实例，当你使用直接量的方式定义了一个字符串时，假如这个字符串在常量池中，则不会去实例化String，反之则会生成一个String类的实例，并置入常量池</li></ol><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL一些简单的语句]]></title>
      <url>/20170120-MySQL%E4%B8%80%E4%BA%9B%E7%AE%80%E5%8D%95%E7%9A%84%E8%AF%AD%E5%8F%A5/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>emlog_ad字段<br>id<br>status<br>position<br>title<br>weight<br>content</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">--找出重复</div><div class="line">SELECT a.*</div><div class="line">FROM emlog_ad a</div><div class="line">WHERE a.id IN</div><div class="line">    (SELECT b.id id</div><div class="line">     FROM emlog_ad b</div><div class="line">     GROUP BY b.title</div><div class="line">     HAVING count(b.id)&gt;1);</div><div class="line"></div><div class="line">--删除重复留下id最小的</div><div class="line">SELECT a.*</div><div class="line">FROM emlog_ad a</div><div class="line">WHERE a.id IN</div><div class="line">    (SELECT b.id</div><div class="line">     FROM emlog_ad b</div><div class="line">     GROUP BY b.title</div><div class="line">     HAVING count(b.id)&gt;1)</div><div class="line">  AND a.id NOT IN</div><div class="line">    (SELECT min(c.id)</div><div class="line">     FROM emlog_ad c</div><div class="line">     GROUP BY c.title</div><div class="line">     HAVING count(c.id)&gt;1);</div><div class="line"></div><div class="line">--一句sql把所有AA改为BB，CC改为DD</div><div class="line">UPDATE emlog_ad a</div><div class="line">SET a.`status`=(</div><div class="line">CASE</div><div class="line">	WHEN a.`status` = &apos;1&apos; THEN &apos;11&apos;</div><div class="line">	WHEN a.`status`=&apos;2&apos; THEN &apos;22&apos;</div><div class="line">	END</div><div class="line">);</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo安装过程]]></title>
      <url>/20170120-hexo%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>Node.js：<a href="https://nodejs.org/en/" target="_blank">点击下载</a></li><li>git：<a href="https://git-for-windows.github.io/" target="_blank">点击下载</a></li><li>MarkdownPad：<a href="http://markdownpad.com/" target="_blank">点击下载</a></li></ol><p>安装好上面三个工具<br>可能会遇到的问题：</p><p><strong>1、</strong>Git Bash执行<code>node -v</code>提示无效 或者 <code>npm install</code> 报 command not found</p><p>解决办法：在环境变量 - 用户变量中 - 新建用户变量 - 添加nodejs安装路径</p><p>如：C:\tool\nodejs</p><p><strong>2、</strong>ERROR Deployer not found : github</p><p>解决办法：</p><ol><li>配置文件有问题，冒号后面都有一个空格的</li><li>执行：npm install hexo-deployer-git –save （这命令是为了解决hexo新版本的部署问题）</li></ol><p><strong>3</strong>使用淘宝镜像加快安装速度<br>安装cnpm，使用命令：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install cnpm -g --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure><p></p><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><ol><li>打开Git Bash</li><li>进入nodejs安装目录</li><li>开始安装hexo，输入下面代码</li><li><code>npm install -g hexo</code>#等待安装完成，这个过程可能会快也可能很慢，耐心等待</li><li><code>mkdir blog &amp;&amp; cd blog</code> #上面这个代码是创建一个博客存放的目录</li><li><code>hexo init</code>#初始化</li><li><code>cnpm install</code> #安装依赖包</li><li>完成之后，本地博客就搭建完成</li><li><code>hexo g</code> #生成静态页面</li><li><code>hexo s</code> #启动服务器，打开<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 就是本地博客</li></ol><p>本地博客安装完成，下面介绍发布到github上</p><ol><li>登陆github，没有就注册</li><li>点击右上角加号+</li><li>Create a new repository</li><li>名字写：<code>yourgithubname.github.io</code></li><li>创建完成</li><li>点击<code>Setting</code></li><li>选择一个主题，然后就好了</li><li>编辑blog文件夹里面的<code>_config.yml</code>配置文件</li><li>最后面添加<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy: </div><div class="line">  type: git</div><div class="line">  repository: http://github.com/yourname/yourname.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></li></ol><p>最后执行</p><ol><li><code>hexo g</code>#重新生成静态博客</li><li><code>hexo d</code>#将本地静态博客部署到github</li></ol><p>现在你在浏览器打开：<a href="http://yourname.github.io就可以访问你的博客了" target="_blank" rel="external">http://yourname.github.io就可以访问你的博客了</a><br>到此为止就搭建完了一个博客</p><p>开始写第一篇文章：<br>执行：hexo new “你的文章标题”<br>然后你在<code>blog/source/_posts</code>文件夹下面有文件，用markdownpad打开编辑<br>执行：</p><ol><li><code>hexo g</code>#重新生成</li><li><code>hexo s</code>#本地查看效果</li><li><code>hexo d</code>#上传到github</li><li>或者不预览，直接一步上传到github：<code>hexo d -g</code></li></ol><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> 安装 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Test Java Code]]></title>
      <url>/20170120-Test-Java-Code/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>这里我只是贴一段代码测试一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">package com.hisen.interview;</div><div class="line"></div><div class="line">/**</div><div class="line"> * 变量不能被重写</div><div class="line"> * </div><div class="line"> * @author hisenyuan 2017年1月18日 下午10:33:33</div><div class="line"> */</div><div class="line">public class AboutExtends &#123;</div><div class="line">	public static class A &#123;</div><div class="line">		public int a = 0;</div><div class="line"></div><div class="line">		public void fun() &#123;</div><div class="line">			System.out.println(&quot;A&quot;);</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		static &#123;</div><div class="line">			System.out.println(&quot;Astatic&quot;);</div><div class="line">		&#125;</div><div class="line">		&#123;</div><div class="line">			System.out.println(&quot;I&apos;m A class&quot;);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public static class B extends A &#123;</div><div class="line">		public int a = 1;</div><div class="line"></div><div class="line">		public void fun() &#123;</div><div class="line">			System.out.println(&quot;B&quot;);</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		static &#123;</div><div class="line">			System.out.println(&quot;Bstatic&quot;);</div><div class="line">		&#125;</div><div class="line">		&#123;</div><div class="line">			System.out.println(&quot;I&apos;m B class&quot;);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public static void main(String[] args) &#123;</div><div class="line">		// 里面的static块方法，new了就会执行</div><div class="line">		// new new B()两个都执行，new new A()执行A的</div><div class="line">		//static代码块在&#123;&#125;代码块后面执行</div><div class="line">		A classA = new B();</div><div class="line">		System.out.println(classA.a);</div><div class="line">		classA.fun();</div><div class="line">		// 输出信息</div><div class="line">		// Astatic</div><div class="line">		// Bstatic</div><div class="line">		// I&apos;m A class</div><div class="line">		// I&apos;m B class</div><div class="line">		// 1</div><div class="line">		// B</div><div class="line">		</div><div class="line">		// 多态记忆口诀</div><div class="line">		// 变量多态看左边</div><div class="line">		// 方法多态看右边</div><div class="line">		// 静态多态看左边</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[解决：html rendering error - MarkdownPad 2]]></title>
      <url>/20170119-%E8%A7%A3%E5%86%B3%EF%BC%9Ahtml-rendering-error-MarkdownPad-2/</url>
      <content type="html"><![CDATA[<!-- build time:Wed Apr 12 2017 17:44:33 GMT+0800 (中国标准时间) --><p>MarkdownPad 2在windows 10上会遇到这个错误</p><p>官方发布了这个问题的解决办法</p><p>详见：<a href="http://markdownpad.com/faq.html" target="_blank">点击前往</a> 页面中搜索：This view has crashed</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>windows 10系统 需要下载 一个 awesomium_v1.6.6_sdk_win</p><p>这是一个 HTML UI ENGINE</p><p>下载地址：<a href="http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe" target="_blank">http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe</a></p><!-- rebuild by neat -->]]></content>
      
        
        <tags>
            
            <tag> MarkdownPad </tag>
            
            <tag> html rendering error </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
